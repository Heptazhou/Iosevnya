$$include '../../../meta/macros.ptl'

import [mix linreg clamp fallback] from '../../../support/utils'
import [DesignParameters] from '../../../meta/aesthetics'

glyph-module

glyph-block Symbol-Geometric-Stars : for-width-kinds WideWidth1
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Symbol-Geometric-Shared : GeometricDim UnicodeWeightGrade GeometricSizes

	define Geom : GeometricDim MosaicUnitWidth MosaicWidth

	define StarCfg : list
		* {.sides 6 .skip 1 .name 'sixPointedBlackStar' .unicode 0x2736 .pMag 1.05 .phase 0 .pShrink 0.4}
		* {.sides 8 .skip 1 .name 'eightPointedBlackStar' .unicode 0x2734 .pMag 1.15 .phase 0 .pShrink 0.25}
		* {.sides 8 .skip 1 .name 'eightPointedRectilinearBlackStar' .unicode 0x2737 .pMag 1.05 .phase (Math.PI / 8) .pShrink 0.4}
		* {.sides 8 .skip 1 .name 'heavyEightPointedRectilinearBlackStar' .unicode 0x2738 .pMag 1.05 .phase (Math.PI / 8) .pShrink 0.5}
		* {.sides 12 .skip 1 .name 'twelvePointedBlackStar' .unicode 0x2739 .pMag 1.05 .phase 0 .pShrink 0.5}
	foreach [[object sides skip name unicode pMag phase pShrink] : items-of StarCfg] : do
		create-glyph [MangleName name] [MangleUnicode unicode] : glyph-proc
			set-width Geom.Width
			local corners {}
			foreach [j : range 0 (2 * sides)] : begin
				local angle : Math.PI * j * skip / sides + phase
				local mag : [if (j % 2) pShrink 1] * pMag
				corners.push : corner
					Geom.MidX + Geom.Size * mag * [Math.sin angle]
					Geom.MidY + Geom.Size * mag * [Math.cos angle]
			include : spiro-outline corners

	define extThinSw    : UnicodeWeightGrade 1    Geom.Scalar
	define extLightSw   : UnicodeWeightGrade 2    Geom.Scalar
	define lightSw      : UnicodeWeightGrade 3    Geom.Scalar
	define semiLightSw  : UnicodeWeightGrade 3.5  Geom.Scalar
	define normalSw     : UnicodeWeightGrade 4    Geom.Scalar
	define mediumSw     : UnicodeWeightGrade 5    Geom.Scalar
	define semiBoldSw   : UnicodeWeightGrade 6    Geom.Scalar
	define boldSw       : UnicodeWeightGrade 7    Geom.Scalar
	define exBoldSw     : UnicodeWeightGrade 8    Geom.Scalar
	define heavySw      : UnicodeWeightGrade 9    Geom.Scalar
	define veryHeavySw  : UnicodeWeightGrade 10   Geom.Scalar
	define exHeavySw    : UnicodeWeightGrade 11   Geom.Scalar

	define AsteriskCfg : list
		* {.sides  4 .name 'thinGreekCross'      .unicode 0x1F7A1 .phase 0 .sw extLightSw }
		* {.sides  4 .name 'lightGreekCross'     .unicode 0x1F7A2 .phase 0 .sw lightSw    }
		* {.sides  4 .name 'mediumGreekCross'    .unicode 0x1F7A3 .phase 0 .sw mediumSw   }
		* {.sides  4 .name 'boldGreekCross'      .unicode 0x1F7A4 .phase 0 .sw boldSw     }
		* {.sides  4 .name 'exBoldGreekCross'    .unicode 0x1F7A5 .phase 0 .sw exBoldSw   }
		* {.sides  4 .name 'veryHeavyGreekCross' .unicode 0x1F7A6 .phase 0 .sw veryHeavySw}
		* {.sides  4 .name 'exHeavyGreekCross'   .unicode 0x1F7A7 .phase 0 .sw exHeavySw  }
		* {.sides  4 .name 'thinSaltire'         .unicode 0x1F7A8 .phase (1/8) .sw extLightSw }
		* {.sides  4 .name 'lightSaltire'        .unicode 0x1F7A9 .phase (1/8) .sw lightSw    }
		* {.sides  4 .name 'mediumSaltire'       .unicode 0x1F7AA .phase (1/8) .sw mediumSw   }
		* {.sides  4 .name 'boldSaltire'         .unicode 0x1F7AB .phase (1/8) .sw boldSw     }
		* {.sides  4 .name 'heavySaltire'        .unicode 0x1F7AC .phase (1/8) .sw heavySw    }
		* {.sides  4 .name 'veryHeavySaltire'    .unicode 0x1F7AD .phase (1/8) .sw veryHeavySw}
		* {.sides  4 .name 'exHeavySaltire'      .unicode 0x1F7AE .phase (1/8) .sw exHeavySw  }
		* {.sides  5 .name 'lightAsterisk5'      .unicode 0x1F7AF .phase 0 .sw lightSw    }
		* {.sides  5 .name 'mediumAsterisk5'     .unicode 0x1F7B0 .phase 0 .sw mediumSw   }
		* {.sides  5 .name 'boldAsterisk5'       .unicode 0x1F7B1 .phase 0 .sw boldSw     }
		* {.sides  5 .name 'heavyAsterisk5'      .unicode 0x1F7B2 .phase 0 .sw heavySw    }
		* {.sides  5 .name 'veryHeavyAsterisk5'  .unicode 0x1F7B3 .phase 0 .sw veryHeavySw}
		* {.sides  5 .name 'exHeavyAsterisk5'    .unicode 0x1F7B4 .phase 0 .sw exHeavySw  }
		* {.sides  6 .name 'lightAsterisk6'      .cThin 0.9  .unicode 0x1F7B5 .phase 0 .sw lightSw    }
		* {.sides  6 .name 'mediumAsterisk6'     .cThin 0.9  .unicode 0x1F7B6 .phase 0 .sw mediumSw   }
		* {.sides  6 .name 'boldAsterisk6'       .cThin 0.9  .unicode 0x1F7B7 .phase 0 .sw boldSw     }
		* {.sides  6 .name 'heavyAsterisk6'      .cThin 0.9  .unicode 0x1F7B8 .phase 0 .sw heavySw    }
		* {.sides  6 .name 'veryHeavyAsterisk6'  .cThin 0.9  .unicode 0x1F7B9 .phase 0 .sw veryHeavySw}
		* {.sides  6 .name 'exHeavyAsterisk6'    .cThin 0.9  .unicode 0x1F7BA .phase 0 .sw exHeavySw  }
		* {.sides  8 .name 'lightAsterisk8'      .cThin 0.75 .unicode 0x1F7BB .phase 0 .sw lightSw    }
		* {.sides  8 .name 'mediumAsterisk8'     .cThin 0.75 .unicode 0x1F7BC .phase 0 .sw mediumSw   }
		* {.sides  8 .name 'boldAsterisk8'       .cThin 0.75 .unicode 0x1F7BD .phase 0 .sw boldSw     }
		* {.sides  8 .name 'heavyAsterisk8'      .cThin 0.75 .unicode 0x1F7BE .phase 0 .sw exBoldSw   }
		* {.sides  8 .name 'veryHeavyAsterisk8'  .cThin 0.75 .unicode 0x1F7BF .phase 0 .sw heavySw    }

		* {.sides  4 .name 'heavyGreekCross'     .unicode 0x271A  .phase 0 .sw heavySw    }
		* {.sides  6 .name 'heavyAsterisk' .cThin 0.9 .unicode 0x2731 .phase 0 .sw heavySw}
		* {.sides  8 .name 'eightSpokedAsterisk' .cThin 0.75 .unicode 0x2733 .phase 0 .sw normalSw}
		* {.sides 16 .name 'sixteenSpokedAsterisk' .cThin 0.75 .unicode 0x273A .phase 0 .sw semiLightSw}
		* {.sides  4 .name 'crossMark' .unicode 0x274C .phase (1/8) .sw normalSw}
	foreach [[object sides name unicode phase sw cThin pMag] : items-of AsteriskCfg] : do
		create-glyph [MangleName name] [MangleUnicode unicode] : glyph-proc
			set-width Geom.Width
			foreach [j : range 0 sides] : begin
				local angle : 2 * Math.PI * (j / sides + phase)
				include : dispiro
					corner Geom.MidX Geom.MidY [widths.center (sw * [fallback cThin 1])]
					corner
						Geom.MidX + Geom.Size * [Math.sin (-angle)]
						Geom.MidY + Geom.Size * [Math.cos (-angle)]
						widths.center sw