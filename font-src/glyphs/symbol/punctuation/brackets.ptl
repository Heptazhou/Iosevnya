### Punctuation symbols
$$include '../../../meta/macros.ptl'

import [mix linreg clamp fallback] from '../../../support/utils'
import [Joining] from '../../../support/gr'
import [DesignParameters] from '../../../meta/aesthetics'

glyph-module

glyph-block Symbol-Punctuation-Brackets : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives

	define MosaicTop    fontMetrics.os2.sTypoAscender
	define MosaicBottom fontMetrics.os2.sTypoDescender
	define MosaicHeight : MosaicTop - MosaicBottom

	define [ParenDim] : params [[delta 0] [dp DesignParameters]] : object
		outside : [mix SB RightSB dp.parenOutside] - delta
		inside  : mix SB RightSB dp.parenInside
		bottom  : [mix SymbolMid ParenBot (1 + dp.parenOvershoot)] - delta
		top     : [mix SymbolMid ParenTop (1 + dp.parenOvershoot)] + delta
		mid       SymbolMid

	define [ParenShape] : params [sw [dp DesignParameters]] : let [dim : ParenDim 0 dp] : dispiro
		widths.lhs sw
		g4 dim.inside dim.top
		quadControls 1 (1 - dp.parenCurliness)
		g4 dim.outside dim.mid
		quadControls 0 dp.parenCurliness
		g4 dim.inside dim.bottom

	define [ParenUpperShape sw] : let [dim : ParenDim 0] : dispiro
		widths.lhs sw
		g4 dim.inside dim.top
		quadControls 1 (1 - DesignParameters.parenCurliness)
		g4.down.end dim.outside MosaicBottom [heading Downward]

	define [ParenExtensionShape sw] : let [dim : ParenDim 0] : dispiro
		widths.lhs sw
		g4.down.start dim.outside MosaicTop [heading Downward]
		g4.down.end dim.outside MosaicBottom [heading Downward]

	define [ParenLowerShape sw] : let [dim : ParenDim 0] : dispiro
		widths.lhs sw
		g4.down.start dim.outside MosaicTop [heading Downward]
		quadControls 0 DesignParameters.parenCurliness
		g4 dim.inside dim.bottom

	define [ParenShapeMask delta] : let [dim : ParenDim delta] : spiro-outline
		corner dim.inside dim.top
		quadControls 1 (1 - DesignParameters.parenCurliness)
		g4 dim.outside dim.mid
		quadControls 0 DesignParameters.parenCurliness
		corner dim.inside dim.bottom

	create-glyph'parenLeft.normal' : glyph-proc
		include : ParenShape Stroke

	create-glyph 'parenLeft.largeContour' : glyph-proc
		local dp : object
			parenOutside        (0.25 * DesignParameters.parenOutside)
			parenInside         DesignParameters.parenInside
			parenCurliness      [mix 1 DesignParameters.parenCurliness 0.5]
			parenOvershoot      DesignParameters.parenOvershoot
		include : ParenShape Stroke dp

	create-glyph'parenLeft.flatArc' : glyph-proc
		local dp : object
			parenOutside        (0.5 * DesignParameters.parenOutside)
			parenInside         DesignParameters.parenInside
			parenCurliness      [mix 1 DesignParameters.parenCurliness 0.5]
			parenOvershoot      DesignParameters.parenOvershoot
		local dim : ParenDim 0 dp
		include : dispiro
			widths.lhs
			g4.left.start dim.inside dim.top
			archv
			flat dim.outside [mix dim.bottom dim.top 0.65]
			curl dim.outside [mix dim.bottom dim.top 0.35]
			arcvh
			g4.right.start dim.inside dim.bottom

	turned 'parenRight.normal'       null 'parenLeft.normal'       Middle SymbolMid
	turned 'parenRight.largeContour' null 'parenLeft.largeContour' Middle SymbolMid
	turned 'parenRight.flatArc'      null 'parenLeft.flatArc'      Middle SymbolMid

	select-variant 'parenLeft'  '('
	select-variant 'parenRight' ')'

	create-glyph 'parenLeftUpper' 0x239B : glyph-proc
		include : ForceUpright
		include : ParenUpperShape Stroke

	create-glyph 'parenLeftExtension' 0x239C : glyph-proc
		include : ForceUpright
		include : ParenExtensionShape Stroke

	create-glyph 'parenLeftLower' 0x239D : glyph-proc
		include : ForceUpright
		include : ParenLowerShape Stroke

	turned 'parenRightLower' 0x23A0 'parenLeftUpper' Middle SymbolMid
	turned 'parenRightExtension' 0x239F 'parenLeftExtension' Middle SymbolMid
	turned 'parenRightupper' 0x239E 'parenLeftLower' Middle SymbolMid

	create-glyph 'zNotationParenLeft' 0x2987 : glyph-proc
		local dim : ParenDim 0
		local fine : AdviceStroke 4
		include : intersection
			Rect [mix dim.bottom dim.top 2] [mix dim.top dim.bottom 2] 0 dim.inside
			union
				ParenShape fine
				intersection
					VBarRight dim.inside dim.bottom dim.top fine
					ParenShapeMask O

	turned 'zNotationParenRight' 0x2988 'zNotationParenLeft' Middle SymbolMid

	define [BracketMask] : Rect MosaicTop MosaicBottom (-Width) (2 * Width)

	define [BracketShape top bottom barLeft ext] : glyph-proc
		local l : fallback barLeft : mix SB RightSB DesignParameters.bracketOutside
		local r : [fallback ext 0] + [mix SB RightSB DesignParameters.bracketInside]

		include : HBarBottom l r bottom
		include : HBarTop    l r top
		include : VBarLeft   l bottom top

	create-glyph 'bracketLeft' '[' : BracketShape ParenTop ParenBot
	create-glyph 'bracketLeftUHalf' 0x2E22 : intersection
		refer-glyph 'bracketLeft'
		MaskAbove SymbolMid
	create-glyph 'bracketLeftLHalf' 0x2E24 : intersection
		refer-glyph 'bracketLeft'
		MaskBelow SymbolMid

	create-glyph 'ligExtBracketLeft' : glyph-proc
		Joining.set currentGlyph Joining.Classes.Right
		include : BracketShape ParenTop ParenBot (Middle - HalfStroke * HVContrast) [mix SB RightSB DesignParameters.bracketInside]

	create-glyph 'bracketLeftUpper' 0x23A1 : glyph-proc
		include : ForceUpright
		include : intersection [BracketMask]
			BracketShape ParenTop (ParenBot - MosaicHeight)

	create-glyph 'bracketLeftExtension' 0x23A2 : glyph-proc
		include : ForceUpright
		include : intersection [BracketMask]
			BracketShape (ParenTop + MosaicHeight) (ParenBot - MosaicHeight)

	create-glyph 'bracketLeftLower' 0x23A3 : glyph-proc
		include : ForceUpright
		include : intersection [BracketMask]
			BracketShape (ParenTop + MosaicHeight) ParenBot

	create-glyph 'dblBracketLeft' 0x27E6 : glyph-proc
		local l : mix SB RightSB DesignParameters.bracketOutside
		local r : mix SB RightSB DesignParameters.bracketInside
		local sw : Math.min ((r - l) / 5) [AdviceStroke 4]

		include : union
			HBarBottom l r ParenBot
			HBarTop    l r ParenTop
			VBarLeft   l ParenBot ParenTop sw
			VBar       [mix l r (1 / 2)] ParenBot ParenTop sw

	create-glyph 'bracketBarLeft' 0x2045 : glyph-proc
		local l : mix SB RightSB DesignParameters.bracketOutside
		local r : mix SB RightSB DesignParameters.bracketInside

		include : union
			HBarBottom l r ParenBot
			HBarTop    l r ParenTop
			HBar       l r [mix ParenBot ParenTop 0.5]
			VBarLeft   l ParenBot ParenTop

	turned 'bracketRight' ']' 'bracketLeft' Middle SymbolMid
	turned 'bracketRightUHalf' 0x2E23 'bracketLeftLHalf' Middle SymbolMid
	turned 'bracketRightLHalf' 0x2E25 'bracketLeftUHalf' Middle SymbolMid
	turned 'bracketRightLower' 0x23A6 'bracketLeftUpper' Middle SymbolMid
	turned 'bracketRightExtension' 0x23A5 'bracketLeftExtension' Middle SymbolMid
	turned 'bracketRightUpper' 0x23A4 'bracketLeftLower' Middle SymbolMid
	turned 'dblBracketRight' 0x27E7 'dblBracketLeft' Middle SymbolMid
	turned 'bracketBarRight' 0x2046 'bracketBarLeft' Middle SymbolMid

	create-glyph 'ligExtBracketRight' : glyph-proc
		include [refer-glyph 'ligExtBracketLeft'] AS_BASE ALSO_METRICS
		include : FlipAround Middle SymbolMid
		Joining.set currentGlyph Joining.Classes.Left

	define [BraceDim] : begin
		local parenCenter [mix SB RightSB [mix DesignParameters.braceInside DesignParameters.braceOutside 0.5]]
		local radius    : Math.min
			[mix SB RightSB DesignParameters.braceInside] - parenCenter
			(ParenTop - SymbolMid - Stroke * 1.5) / 2
		return : object parenCenter radius

	define [BraceUpperHalfShape top bottom sw pExt] : glyph-proc
		define [object parenCenter radius] : BraceDim
		define xIns : mix SB RightSB DesignParameters.braceInside
		define xTip : mix SB RightSB DesignParameters.braceOutside
		include : dispiro
			flat ((1 + [fallback pExt 0]) * xIns) top [widths.center.heading sw Leftward]
			curl (xIns - 0.1) top [heading Leftward]
			archv
			flat parenCenter (top - radius) [heading Downward]
			curl parenCenter (bottom + radius) [heading Downward]
			arcvh
			straight.left.end xTip bottom [heading Leftward]

	define [BraceLowerHalfShape top bottom sw pExt] : glyph-proc
		define [object parenCenter radius] : BraceDim
		define xIns : mix SB RightSB DesignParameters.braceInside
		define xTip : mix SB RightSB DesignParameters.braceOutside
		include : dispiro
			flat ((1 + [fallback pExt 0]) * xIns) bottom [widths.center.heading sw Leftward]
			curl (xIns - 0.1) bottom [heading Leftward]
			archv
			flat parenCenter (bottom + radius) [heading Upward]
			curl parenCenter (top - radius) [heading Upward]
			arcvh
			straight.left.end xTip top [heading Leftward]

	define [BraceUpperThirdShape top bottom sw] : glyph-proc
		define [object parenCenter radius] : BraceDim
		include : intersection [BracketMask]
			BraceUpperHalfShape top (bottom - MosaicHeight) sw

	define [BraceLowerThirdShape top bottom sw] : glyph-proc
		define [object parenCenter radius] : BraceDim
		include : intersection [BracketMask]
			BraceLowerHalfShape (top + MosaicHeight) bottom sw

	define [BraceCenterThirdShape top bottom sw] : glyph-proc
		define [object parenCenter radius] : BraceDim
		include : intersection [BracketMask]
			union
				BraceUpperHalfShape (top + MosaicHeight) [mix bottom top 0.5] sw
				BraceLowerHalfShape [mix bottom top 0.5] (bottom - MosaicHeight) sw

	define [BraceExtensionShape top bottom sw] : glyph-proc
		define [object parenCenter radius] : BraceDim
		include : intersection [BracketMask]
			union
				BraceUpperHalfShape (top + MosaicHeight) (bottom - MosaicHeight) sw

	do
		local top : [mix SymbolMid ParenTop (1 + DesignParameters.braceOvershoot)] - HalfStroke
		local bot : [mix SymbolMid ParenBot (1 + DesignParameters.braceOvershoot)] + HalfStroke

		create-glyph 'braceLeft.straight' : glyph-proc
			include : BraceUpperHalfShape top SymbolMid Stroke
			include : BraceLowerHalfShape SymbolMid bot Stroke

		create-glyph 'ligExtBraceLeft.straight' : glyph-proc
			Joining.set currentGlyph Joining.Classes.Right
			include : BraceUpperHalfShape top SymbolMid Stroke 1
			include : BraceLowerHalfShape SymbolMid bot Stroke 1

		create-glyph 'braceLeftUpper' 0x23A7 : glyph-proc
			include : ForceUpright
			include : BraceUpperThirdShape top bot Stroke

		create-glyph 'braceLeftLower' 0x23A9 : glyph-proc
			include : ForceUpright
			include : BraceLowerThirdShape top bot Stroke

		create-glyph 'braceLeftMiddle' 0x23A8 : glyph-proc
			include : ForceUpright
			include : BraceCenterThirdShape top bot Stroke

		create-glyph 'braceExtension' 0x23AA : glyph-proc
			include : ForceUpright
			include : BraceExtensionShape top bot Stroke

	turned 'braceRight.straight' null 'braceLeft.straight' Middle SymbolMid
	turned 'braceRightLower' 0x23AD 'braceLeftUpper' Middle SymbolMid
	turned 'braceRightUpper' 0x23AB 'braceLeftLower' Middle SymbolMid
	turned 'braceRightMiddle' 0x23AC 'braceLeftMiddle' Middle SymbolMid

	create-glyph 'ligExtBraceRight.straight' : glyph-proc
		include [refer-glyph 'ligExtBraceLeft.straight'] AS_BASE ALSO_METRICS
		include : FlipAround Middle SymbolMid
		Joining.set currentGlyph Joining.Classes.Left

	define [CurlyBraceShape sw pExt] : glyph-proc
		local hs : sw / 2
		local xIns : mix SB RightSB DesignParameters.braceInside
		local xOus : mix SB RightSB DesignParameters.braceOutside
		local m1   : mix SB RightSB [mix DesignParameters.braceInside DesignParameters.braceOutside DesignParameters.braceCurlyM1]
		local m2   : mix SB RightSB [mix DesignParameters.braceInside DesignParameters.braceOutside DesignParameters.braceCurlyM2]
		local braceRadiusLowLimit : (ParenTop - SymbolMid - sw) * (1 / 3) + hs
		local radius1 : (sw / 16) + [Math.min (xIns - m1) braceRadiusLowLimit]
		local radius2 : (sw / 16) + [Math.min (m2 - xOus) braceRadiusLowLimit] - hs
		local ess : mix sw (Ess * sw / Stroke) 0.25
		local top : mix SymbolMid ParenTop (1 + DesignParameters.braceOvershoot)
		local bot : mix SymbolMid ParenBot (1 + DesignParameters.braceOvershoot)
		include : dispiro
			flat (xIns * (1 + pExt)) (top - hs) [widths.center.heading sw Leftward]
			curl (xIns - 0.1) (top - hs) [heading Leftward]
			archv
			g4.down.mid m1 (top - radius1) [heading Downward]
			alsoThru 0.5 0.5 [widths (ess / 2) (ess / 2)]
			g4.down.mid m2 (SymbolMid + radius2) [widths.center.heading sw Downward]
			arcvh
			straight.left.end xOus SymbolMid [heading Leftward]

		include : dispiro
			flat (xIns * (1 + pExt)) (bot + hs) [widths.center.heading sw Leftward]
			curl (xIns - 0.1) (bot + hs) [heading Leftward]
			archv
			g4.up.mid m1 (bot + radius1) [heading Upward]
			alsoThru 0.5 0.5 [widths (ess / 2) (ess / 2)]
			g4.up.mid m2 (SymbolMid - radius2) [widths.center.heading sw Upward]
			arcvh
			straight.left.end xOus SymbolMid [heading Leftward]

	create-glyph 'braceLeft.curly' : CurlyBraceShape Stroke 0
	turned 'braceRight.curly' null 'braceLeft.curly' Middle SymbolMid

	create-glyph 'ligExtBraceLeft.curly' : glyph-proc
		Joining.set currentGlyph Joining.Classes.Right
		include : CurlyBraceShape Stroke 1
	create-glyph 'ligExtBraceRight.curly' : glyph-proc
		include [refer-glyph 'ligExtBraceLeft.curly'] AS_BASE ALSO_METRICS
		include : FlipAround Middle SymbolMid
		Joining.set currentGlyph Joining.Classes.Left

	select-variant 'braceLeft' '{'
	select-variant 'braceRight' '}'

	select-variant 'ligExtBraceLeft' (follow -- 'braceLeft')
	select-variant 'ligExtBraceRight' (follow -- 'braceRight')

	do
		local top : mix SymbolMid ParenTop (1 + DesignParameters.braceOvershoot)
		local bot : mix SymbolMid ParenBot (1 + DesignParameters.braceOvershoot)
		create-glyph 'upperLeftOrLowerRightfBrace' 0x23B0 : glyph-proc
			include : ForceUpright
			include : BraceUpperHalfShape (top - HalfStroke) (bot + HalfStroke) Stroke
		create-glyph 'upperRightOrLowerLeftfBrace' 0x23B1 : glyph-proc
			include : ForceUpright
			include : BraceLowerHalfShape (top - HalfStroke) (bot + HalfStroke) Stroke

	create-glyph 'whiteBraceLeft.straight' : glyph-proc
		local fine : AdviceStroke 4
		local xIns : mix SB RightSB DesignParameters.braceInside
		local top : mix SymbolMid ParenTop (1 + DesignParameters.braceOvershoot)
		local bot : mix SymbolMid ParenBot (1 + DesignParameters.braceOvershoot)
		include : BraceUpperHalfShape top SymbolMid fine
		include : BraceLowerHalfShape SymbolMid bot fine
		include : VBarRight xIns (bot + fine / 2) (top - fine / 2) fine

	create-glyph 'whiteBraceLeft.curly' : glyph-proc
		local fine : AdviceStroke 4
		local xIns : mix SB RightSB DesignParameters.braceInside
		local top : mix SymbolMid ParenTop (1 + DesignParameters.braceOvershoot)
		local bot : mix SymbolMid ParenBot (1 + DesignParameters.braceOvershoot)
		include : CurlyBraceShape fine 0
		include : VBarRight xIns (bot + fine / 2) (top - fine / 2) fine

	select-variant 'whiteBraceLeft' 0x2983 (follow -- 'braceLeft')

	turned 'whiteBraceRight.straight' null 'whiteBraceLeft.straight' Middle SymbolMid
	turned 'whiteBraceRight.curly' null 'whiteBraceLeft.curly' Middle SymbolMid
	select-variant 'whiteBraceRight' 0x2984 (follow -- 'braceRight')

	define [AngleLeftShape outside inside sw] : begin
		local fatten : Math.hypot 1 ((inside - outside - O) / (ParenTop - SymbolMid))
		return : union
			dispiro
				widths.lhs sw
				flat inside ParenTop
				curl (outside + O) SymbolMid [widths.heading (sw * fatten) 0 Downward]
			dispiro
				widths.rhs sw
				flat inside ParenBot
				curl (outside + O) SymbolMid [widths.heading 0 (sw * fatten) Upward]

	create-glyph 'angleLeft' 0x2329 : glyph-proc
		define dim : ParenDim (delta -- 0)
		include : AngleLeftShape dim.outside dim.inside OperatorStroke

	create-glyph 'dblAngleLeft' 0x27EA : glyph-proc
		define dim : ParenDim (delta -- 0)
		define fine : Math.min OperatorStroke [AdviceStroke 3.5]
		define farOutside : dim.outside / 2
		define middle : mix farOutside dim.inside 0.5
		include : AngleLeftShape farOutside middle fine
		include : AngleLeftShape middle dim.inside fine

	turned 'angleRight' 0x232A 'angleLeft' Middle SymbolMid
	turned 'dblAngleRight' 0x27EB 'dblAngleLeft' Middle SymbolMid
	alias 'mathAngleLeft' 0x27E8 'angleLeft'
	alias 'mathAngleRight' 0x27E9 'angleRight'

	create-glyph 'ceilingLeft' 0x2308 : glyph-proc
		include : HBarTop    [mix SB RightSB DesignParameters.bracketOutside] [mix SB RightSB DesignParameters.bracketInside] ParenTop
		include : VBarLeft   [mix SB RightSB DesignParameters.bracketOutside] ParenBot ParenTop

	create-glyph 'floorLeft' 0x230A : glyph-proc
		include : HBarBottom [mix SB RightSB DesignParameters.bracketOutside] [mix SB RightSB DesignParameters.bracketInside] ParenBot
		include : VBarLeft   [mix SB RightSB DesignParameters.bracketOutside] ParenBot ParenTop

	turned 'floorRight' 0x230B 'ceilingLeft' Middle SymbolMid
	turned 'ceilingRight' 0x2309 'floorLeft' Middle SymbolMid

