### Punctuation symbols
$$include '../../../meta/macros.ptl'

import [mix linreg clamp fallback] from '../../../support/utils'

glyph-module

glyph-block Symbol-Punctuation-Quotes-And-Primes : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Symbol-Punctuation-Small

	local quoteTop (CAP * 1.05)
	local quoteBottom (XH * 0.85)

	local yCurlyQuotes [mix quoteBottom quoteTop 0.5]
	local commaLow (Descender * 0.9)
	local ratio : Math.min 1 : (quoteTop - quoteBottom) / (PeriodSize - commaLow)

	derive-glyphs 'lowSingleQuote' 0x201A 'comma' : function [src gr] : glyph-proc
		local df : DivFrame para.diversityF
		set-width df.width
		include : refer-glyph src
		include : FlipAround df.middle 0 ratio ratio

	derive-glyphs 'revLowSingleQuote' null 'revComma' : function [src gr] : glyph-proc
		local df : DivFrame para.diversityF
		set-width df.width
		include : refer-glyph src
		include : FlipAround df.middle 0 ratio ratio

	derive-glyphs 'openSingleQuote' 0x2018 'lowSingleQuote' : function [src gr] : glyph-proc
		local df : DivFrame para.diversityF
		set-width df.width
		include : refer-glyph src
		include : FlipAround df.middle [mix [mix PeriodSize commaLow 0.5] yCurlyQuotes 0.5]

	derive-glyphs 'closeSingleQuote' 0x2019 'openSingleQuote' : function [src gr] : glyph-proc
		local df : DivFrame para.diversityF
		set-width df.width
		include : refer-glyph src
		include : FlipAround df.middle yCurlyQuotes

	derive-glyphs 'revSingleQuote' 0x201B 'revComma' : function [src gr] : glyph-proc
		local df : DivFrame para.diversityF
		set-width df.width
		include : refer-glyph src
		include : FlipAround df.middle 0 ratio ratio
		include : FlipAround df.middle [mix [mix PeriodSize commaLow 0.5] yCurlyQuotes 0.5]
		include : FlipAround df.middle yCurlyQuotes

	define [DoubleQuoteProc gn] : glyph-proc
		local dfSingle : DivFrame para.diversityF
		local dist : Width * 0.225
		include : refer-glyph gn
		include : Translate (-dist * 2) 0
		include : refer-glyph gn
		include : Translate (dist + Middle - dfSingle.middle) 0

	derive-glyphs 'lowDoubleQuote'    0x201E 'lowSingleQuote'    DoubleQuoteProc
	derive-glyphs 'openDoubleQuote'   0x201C 'openSingleQuote'   DoubleQuoteProc
	derive-glyphs 'closeDoubleQuote'  0x201D 'closeSingleQuote'  DoubleQuoteProc
	derive-glyphs 'revDoubleQuote'    0x201F 'revSingleQuote'    DoubleQuoteProc
	derive-glyphs 'revLowDoubleQuote' 0x2E42 'revLowSingleQuote' DoubleQuoteProc

	alias 'mdfTurncomma'        0x2BB 'openSingleQuote'
	alias 'mdfApostrophe'       0x2BC 'closeSingleQuote'
	alias 'mdfRevComma'         0x2BD 'revSingleQuote'
	alias 'mdfDoubleApostrophe' 0x2EE 'closeDoubleQuote'

	# Primes
	create-glyph 'prime' 0x2032 : glyph-proc
		local df : DivFrame para.diversityF
		set-width df.width
		local wide : Width * 0.1
		include : dispiro
			widths.center (Stroke * 1.2)
			flat (df.middle + wide) quoteTop [heading Downward]
			curl (df.middle - wide) quoteBottom [widths.heading HalfStroke HalfStroke Downward]

	create-glyph 'doubleprime' 0x2033 : glyph-proc
		local dfSingle : DivFrame para.diversityF
		local d : 0.25 * (RightSB - SB)
		include : refer-glyph "prime"
		include : Translate (-d * 2) 0
		include : refer-glyph "prime"
		include : Translate (d + Middle - dfSingle.middle) 0

	create-glyph 'tripleprime' 0x2034 : glyph-proc
		local df : DivFrame para.diversityM
		set-width df.width
		local wide : Width * 0.1
		local d : df.width * 0.3
		local fine : 0.5 * [AdviceStroke 3.5]
		include : dispiro
			widths.center (fine * 2 * 1.2)
			flat (df.middle + wide) quoteTop [heading Downward]
			curl (df.middle - wide) quoteBottom [widths.heading fine fine Downward]
		include : dispiro
			widths.center (fine * 2 * 1.2)
			flat (df.middle - d + wide) quoteTop [heading Downward]
			curl (df.middle - d - wide) quoteBottom [widths.heading fine fine Downward]
		include : dispiro
			widths.center (fine * 2 * 1.2)
			flat (df.middle + d + wide) quoteTop [heading Downward]
			curl (df.middle + d - wide) quoteBottom [widths.heading fine fine Downward]

	create-glyph 'quadPrime' 0x2057 : glyph-proc
		local df : DivFrame para.diversityM
		set-width df.width
		local wide : Width * 0.1
		local fine : 0.5 * [AdviceStroke 4]
		local d : df.width * 0.15 - fine / 6
		include : dispiro
			widths.center (fine * 2 * 1.2)
			flat (df.middle - d + wide) quoteTop [heading Downward]
			curl (df.middle - d - wide) quoteBottom [widths.heading fine fine Downward]
		include : dispiro
			widths.center (fine * 2 * 1.2)
			flat (df.middle + d + wide) quoteTop [heading Downward]
			curl (df.middle + d - wide) quoteBottom [widths.heading fine fine Downward]
		include : dispiro
			widths.center (fine * 2 * 1.2)
			flat (df.middle - 3 * d + wide) quoteTop [heading Downward]
			curl (df.middle - 3 * d - wide) quoteBottom [widths.heading fine fine Downward]
		include : dispiro
			widths.center (fine * 2 * 1.2)
			flat (df.middle + 3 * d + wide) quoteTop [heading Downward]
			curl (df.middle + 3 * d - wide) quoteBottom [widths.heading fine fine Downward]

	create-glyph 'revprime' 0x2035 : glyph-proc
		local df : DivFrame para.diversityF
		set-width df.width
		local wide : -Width * 0.1
		include : dispiro
			widths.center (Stroke * 1.2)
			flat (df.middle + wide) quoteTop [heading Downward]
			curl (df.middle - wide) quoteBottom [widths.heading HalfStroke HalfStroke Downward]

	create-glyph 'revdoubleprime' 0x2036 : glyph-proc
		local dfSingle : DivFrame para.diversityF
		local d : 0.25 * (RightSB - SB)
		include : refer-glyph "revprime"
		include : Translate (-d * 2) 0
		include : refer-glyph "revprime"
		include : Translate (d + Middle - dfSingle.middle) 0

	create-glyph 'revtripleprime' 0x2037 : glyph-proc
		local df : DivFrame para.diversityM
		set-width df.width
		local wide : -Width * 0.1
		local d : df.width * 0.3
		local fine : 0.5 * [AdviceStroke 3.5]
		include : dispiro
			widths.center (fine * 2 * 1.2)
			flat (df.middle + wide) quoteTop [heading Downward]
			curl (df.middle - wide) quoteBottom [widths.heading fine fine Downward]
		include : dispiro
			widths.center (fine * 2 * 1.2)
			flat (df.middle - d + wide) quoteTop [heading Downward]
			curl (df.middle - d - wide) quoteBottom [widths.heading fine fine Downward]
		include : dispiro
			widths.center (fine * 2 * 1.2)
			flat (df.middle + d + wide) quoteTop [heading Downward]
			curl (df.middle + d - wide) quoteBottom [widths.heading fine fine Downward]

	alias 'mdfPrime' 0x2B9 'prime'
	alias 'grek/numberSign' 0x374 'prime'
	alias 'mdfDoublePrime' 0x2BA 'doubleprime'

	derive-composites 'grek/lowNumberSign' 0x375 'prime'
		ApparentTranslate 0 ([mix [mix [mix PeriodSize commaLow 0.5] yCurlyQuotes 0.5] quoteBottom (-1)] - quoteTop)

	# ASCII quotes
	create-glyph 'asciiSingleQuote.straight' : glyph-proc
		local df : DivFrame para.diversityF
		set-width df.width
		include : dispiro
			widths.center (Stroke * 1.1)
			g4.down.start df.middle quoteTop [heading Downward]
			g4 df.middle quoteBottom [widths.heading (HalfStroke * 0.95) (HalfStroke * 0.95) Downward]

	alias 'asciiSingleQuote.raisedComma' null 'closeSingleQuote'
	alias 'asciiGrave.raisedInverseComma' null 'revSingleQuote'
	alias 'asciiGrave.raisedTurnComma' null 'openSingleQuote'

	select-variant 'asciiSingleQuote' 0x27
	select-variant 'asciiGrave' 0x60

	alias 'mdfStress' 0x2C8 'asciiSingleQuote.straight'
	turned 'mdfSecondaryStress' 0x2CC 'asciiSingleQuote.straight' Middle (XH / 2)

	create-glyph 'asciiDoubleQuote' 0x22 : glyph-proc
		local dfSingle : DivFrame para.diversityF
		local dist : 0.2 * Width
		include : refer-glyph "asciiSingleQuote.straight"
		include : Translate (-dist * 2) 0
		include : refer-glyph "asciiSingleQuote.straight"
		include : Translate (dist + Middle - dfSingle.middle) 0

	# Half-circle modifiers, use quote dimensions
	create-glyph 'modifierLetterLeftHalfRing' 0x2BF : glyph-proc
		local height : quoteTop - quoteBottom
		include : dispiro
			g4.left.start (Middle + height / 4) (quoteTop - O) [widths.lhs.heading [AdviceStroke 3] Leftward]
			archv
			g4.down.mid (Middle - height / 4 + O) [mix quoteBottom quoteTop 0.5] [widths.lhs.heading [AdviceStroke 3.5] Downward]
			arcvh
			g4.right.end (Middle + height / 4) (quoteBottom + O) [widths.lhs.heading [AdviceStroke 3] Rightward]
	turned 'modifierLetterRightHalfRing' 0x2BE 'modifierLetterLeftHalfRing' Middle [mix quoteBottom quoteTop 0.5]
