### Punctuation symbols
$$include '../../../meta/macros.ptl'

import [mix linreg clamp fallback] from '../../../support/utils'
import [DesignParameters] from '../../../meta/aesthetics'

glyph-module

glyph-block Symbol-Punctuation-Small : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Shared-Symbol-Shapes : DotVariants

	foreach { suffix { DrawAt kDotRadius overshoot } } [Object.entries DotVariants] : do
		create-glyph "period.\(suffix)" : glyph-proc
			local df : DivFrame para.diversityF
			set-width df.width
			include : DrawAt df.middle (PeriodRadius * kDotRadius) (PeriodRadius * kDotRadius - overshoot)
		create-glyph "xhPeriod.\(suffix)" : glyph-proc
			local df : DivFrame para.diversityF
			set-width df.width
			include : DrawAt df.middle (XH - PeriodRadius * kDotRadius) (PeriodRadius * kDotRadius - overshoot)

	select-variant 'period' '.' (follow -- 'punctuationDot')

	define [CommaShapeT cx cy gp] : new-glyph : glyph-proc
		set currentGlyph.gizmo [Translate 0 0]
		include gp
		local {.x mx1 .y my1} : GlobalTransform.apply {.x cx .y cy}
		include : Translate (mx1) (my1)

	create-glyph 'comma.round' : glyph-proc
		local df : DivFrame para.diversityF
		set-width df.width
		include : CommaShapeT df.middle 0 : glyph-proc
			local r : PeriodRadius + 0
			local ro : PeriodRadius - O
			local sw : Math.min [AdviceStroke 4] (PeriodSize * 0.4)
			local swEnd : Math.min Stroke (PeriodSize * 0.5)
			local commaOverflow : PeriodRadius - swEnd * 0.5
			local rFill : ro - sw / 4
			include : union
				spiro-outline
					g4 rFill rFill
					arcvh
					g4 0 0
					archv
					g4 (-rFill) rFill
					arcvh
					g4 0 (2 * rFill)
					archv
					close
				dispiro
					g4 r r [widths.rhs (sw / 4)]
					arcvh
					g4 0 O [widths.rhs (sw / 2)]
					archv
					g4 (-ro) r
					arcvh
					g4 0 (r + ro)
					archv
					g4 ro r [widths.rhs sw]
					quadControls (0 + TanSlope / 2) (0.5 - TanSlope * r / Descender) 12
					g4 (-commaOverflow + Descender * TanSlope) Descender [widths.rhs swEnd]

	create-glyph 'comma.square' : glyph-proc
		local df : DivFrame para.diversityF
		set-width df.width
		include : WithTransform [Translate df.middle 0] : glyph-proc
			local r : PeriodRadius * DesignParameters.squareDotScalar + 0
			local sw : Math.min [AdviceStroke 4] (PeriodSize * DesignParameters.squareDotScalar * 0.4)
			local swEnd : Math.min Stroke (PeriodSize * DesignParameters.squareDotScalar * 0.5)
			local commaOverflow : r - swEnd * 0.5

			include : union
				SquareAt 0 r r
				dispiro
					straight.down.mid r 0 [widths.rhs sw]
					quadControls (0 + TanSlope / 2) (0.5 - TanSlope * r / Descender) 12
					g4 (-commaOverflow + Descender * TanSlope) Descender [widths.rhs swEnd]


	create-glyph 'invertComma.round' : glyph-proc
		local df : DivFrame para.diversityF
		set-width df.width
		include : CommaShapeT df.middle 0 : glyph-proc
			local r : PeriodRadius + 0
			local ro : PeriodRadius - O
			local sw : Math.min [AdviceStroke 4] (PeriodSize * 0.4)
			local swEnd : Math.min Stroke (PeriodSize * 0.5)
			local commaOverflow : PeriodRadius - swEnd * 0.5
			local rFill : ro - sw / 4
			include : union
				spiro-outline
					g4 rFill rFill
					arcvh
					g4 0 0
					archv
					g4 (-rFill) rFill
					arcvh
					g4 0 (2 * rFill)
					archv
					close
				dispiro
					g4 (-r) r [widths.lhs (sw / 4)]
					arcvh
					g4 0 O [widths.lhs (sw / 2)]
					archv
					g4 (ro) r
					arcvh
					g4 0 (r + ro)
					archv
					g4 (-ro) r [widths.lhs sw]
					quadControls (0 - TanSlope / 2) (0.5 - TanSlope * r / Descender) 12
					g4 (commaOverflow + Descender * TanSlope) Descender [widths.lhs swEnd]

	create-glyph 'invertComma.square' : glyph-proc
		local df : DivFrame para.diversityF
		set-width df.width
		include : WithTransform [Translate df.middle 0] : glyph-proc
			local r : PeriodRadius * DesignParameters.squareDotScalar + 0
			local sw : Math.min [AdviceStroke 4] (PeriodSize * DesignParameters.squareDotScalar * 0.4)
			local swEnd : Math.min Stroke (PeriodSize * DesignParameters.squareDotScalar * 0.5)
			local commaOverflow : r - swEnd * 0.5

			include : union
				SquareAt 0 r r
				dispiro
					straight.down.mid (-r) 0 [widths.lhs sw]
					quadControls (0 - TanSlope / 2) (0.5 - TanSlope * r / Descender) 12
					g4 (commaOverflow + Descender * TanSlope) Descender [widths.lhs swEnd]

	select-variant 'comma' ',' (follow -- 'punctuationDot')
	select-variant 'invertComma' (follow -- 'punctuationDot')

	foreach { suffix { DrawAt kDotRadius overshoot } } [Object.entries DotVariants] : do
		create-glyph "colon.\(suffix)" : glyph-proc
			include [refer-glyph "period.\(suffix)"] AS_BASE ALSO_METRICS
			include [refer-glyph "xhPeriod.\(suffix)"]

			create-forked-glyph "colon/mid.\(suffix)" : glyph-proc
				include : ApparentTranslate 0 (SymbolMid - XH / 2)

		create-glyph "modifierLetterColon.\(suffix)" : glyph-proc
			local df : DivFrame para.diversityII
			set-width df.width
			local k 0.9
			local dr : DotRadius * kDotRadius
			include : DrawAt df.middle [mix dr (XH - dr) k] (dr - overshoot)
			include : DrawAt df.middle [mix dr (XH - dr) (1 - k)] (dr - overshoot)

		create-glyph "semicolon.\(suffix)" : glyph-proc
			include [refer-glyph "comma.\(suffix)"] AS_BASE ALSO_METRICS
			include [refer-glyph "xhPeriod.\(suffix)"]

	select-variant 'colon' ':'  (follow -- 'punctuationDot')
	select-variant 'colon/mid' (follow -- 'punctuationDot')
	select-variant 'modifierLetterColon' 0xA789 (follow -- 'punctuationDot')
	select-variant 'semicolon' ';' (follow -- 'punctuationDot')
	alias 'greekquestion' 0x37E 'semicolon'

	# Hollow (no CV)

	define [RingCommaStroke mx my rad s k1x k1y k2x k2y] : begin
		local u : my + rad
		local d : my - rad
		local l : mx - rad
		local r : mx + rad
		local fine : s * CThin
		return : dispiro
			widths.rhs [fallback fine]
			g4 mx (u - s + fine) [heading Rightward]
			archv
			g4 (r - s + [mix fine s 0.5]) my [widths.rhs : mix fine s 0.5]
			arcvh
			g4 mx d [widths.rhs.heading s Leftward]
			archv
			g4 l my
			arcvh
			g4 mx u [heading Rightward]
			archv
			g4 r my [widths.rhs fine]
			flat (mx + rad * k1x) (d + rad * k1y) [widths.rhs s]
			curl (mx - rad * k2x) (d - rad * k2y)

	create-glyph 'hollowColon' 0x2982 : glyph-proc
		local df : DivFrame para.diversityF
		set-width df.width
		define sw : AdviceStroke 5
		define dotRadius : Math.max PeriodRadius (XH / 8)
		include : RingStrokeAt df.middle (XH - dotRadius) (dotRadius + sw / 2 - O) sw
		include : RingStrokeAt df.middle dotRadius (dotRadius + sw / 2 - O) sw

	create-glyph 'zNotationSchemaComposition' 0x2A1F : glyph-proc
		local df : DivFrame para.diversityF
		set-width df.width
		define sw : AdviceStroke 5
		define dotRadius : Math.max PeriodRadius (XH / 8)
		include : RingStrokeAt df.middle (XH - dotRadius) (dotRadius + sw / 2 - O) sw
		include : intersection
			MaskAbove Descender
			RingCommaStroke df.middle dotRadius (dotRadius + sw / 2 - O) sw 0.75 0 1 3

	create-glyph 'zNotationRelationalComposition' 0x2A3E : glyph-proc
		local df : DivFrame para.diversityF
		set-width df.width
		define sw : AdviceStroke 6.5
		define dotRadius : 0.625 * [Math.max PeriodRadius (XH / 8)]
		include : RingStrokeAt df.middle (0.625 * XH - dotRadius) (dotRadius + sw / 2 - O) sw
		include : intersection
			MaskAbove (Descender * 0.75)
			RingCommaStroke df.middle dotRadius (dotRadius + sw / 2 - O) sw 0.75 0 0.75 3
