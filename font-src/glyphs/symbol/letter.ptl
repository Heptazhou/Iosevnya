###### Letter-like symbols

$$include '../../meta/macros.ptl'

import [mix linreg clamp fallback] from '../../support/utils'
import [DesignParameters] from '../../meta/aesthetics'

glyph-module

glyph-block Symbol-Currency : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives

	create-glyph 'currency' 0xA4 : glyph-proc
		local sw : AdviceStroke 3.5
		local radius : (RightSB - SB) / 2
		include : OShape (SymbolMid + radius * 0.9) (SymbolMid - radius * 0.9) (Middle - radius * 0.9) (Middle + radius * 0.9) sw
		foreach j [range 0 4] : begin
			local angle : Math.PI * (j / 2 + 1 / 4)
			include : dispiro
				widths.center sw
				flat (Middle + radius * 0.87 * [Math.cos angle]) (SymbolMid + radius * 0.87 * [Math.sin angle])
				curl (Middle + radius * [Math.sqrt 2] * [Math.cos angle]) (SymbolMid + radius * [Math.sqrt 2] * [Math.sin angle])

	define [SterlineBaseShape] : glyph-proc
		local barLeft : [mix SB RightSB 0.2] - Stroke * 0.1
		local hookEndX : Math.max (barLeft + Stroke * 2.25 * HVContrast) [mix SB RightSB 0.95]
		include : union
			dispiro
				g4 hookEndX (CAP - Hook * 0.85) [widths.lhs]
				hookstart (CAP - O) (tight -- true)
				flat barLeft [CAP - ArchDepthA * 0.75]
				curl barLeft [mix Stroke CAP 0.3]
				g4   SB Stroke
			HBarBottom SB RightSB 0

	create-glyph 'currency/sterlingSign' 0xA3 : glyph-proc
		set-width Width
		include : SterlineBaseShape
		include : HOverlayBar [mix SB RightSB 0.05] [mix SB RightSB 0.7] (CAP * 0.53)

	create-glyph 'currency/liraSymbolSign' 0x20A4 : glyph-proc
		set-width Width
		include : SterlineBaseShape
		include : HOverlayBar [mix SB RightSB 0.05] [mix SB RightSB 0.7] (CAP * 0.4)
		include : HOverlayBar [mix SB RightSB 0.05] [mix SB RightSB 0.7] (CAP * 0.63)

glyph-block Symbol-Currency-Letter-Derived : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives

	create-glyph 'currency/overlay/NS' : glyph-proc
		define sw : Math.min OverlayStroke : AdviceStroke2 2 4 CAP
		define gap : Math.max (CAP / 8) (sw / 2)
		include : HBarBottom [mix 0 SB 0.5] [mix Width RightSB 0.5] (CAP / 2 + gap / 2) sw
		include : HBarTop    [mix 0 SB 0.5] [mix Width RightSB 0.5] (CAP / 2 - gap / 2) sw

	create-glyph 'currency/overlay/W' : glyph-proc
		local df : DivFrame para.diversityM 3
		include : HOverlayBar [mix SB 0 0.7] [mix df.rightSB df.width 0.7] (CAP * 0.6)
		include : HOverlayBar [mix SB 0 0.7] [mix df.rightSB df.width 0.7] (CAP * 0.35)

	derive-composites 'currency/nairaSign' 0x20A6 'currency/nairaSignBase' 'currency/overlay/NS'
	derive-composites 'currency/hryvniaSign' 0x20B4 'revS' 'currency/overlay/NS'
	derive-composites 'currency/wonSign' 0x20A9 'W' 'currency/overlay/W'

	create-glyph 'currency/tugrikOverride' : let
		l : mix (Middle - HalfStroke * HVContrast) SB       0.75
		r : mix (Middle + HalfStroke * HVContrast) RightSB  0.75
		kSlope 0.05
		intersection [Rect 0 CAP l r] : union
			ExtLineCenter 4 OverlayStroke l (CAP * (0.6 - kSlope)) r (CAP * (0.6 + kSlope))
			ExtLineCenter 4 OverlayStroke l (CAP * (0.35 - kSlope)) r (CAP * (0.35 + kSlope))

	derive-composites 'currency/tugrikSign' 0x20AE 'T' 'currency/tugrikOverride'

glyph-block Symbol-Letter : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Letter-Latin-X : XStrand
	glyph-block-import Symbol-Geometric-Shared : UnicodeWeightGrade

	alias 'Ohm' 0x2126 'grek/Omega'
	turned 'Mho' 0x2127 'Ohm' Middle (CAP / 2)

	create-glyph 'ell' 0x2113 : glyph-proc
		include : MarkSet.b
		local fine : AdviceStroke 3.5
		local radius : Math.max fine (Width * 0.15)
		local middle : Middle - fine / 2
		local left : middle - radius * 1.25
		local right : middle + radius * 1.5
		local ada : ArchDepthA * 0.6
		local adb : ArchDepthB * 0.6
		include : dispiro
			widths.center fine
			g2   left [mix 0 CAP 0.33]
			quadControls 1 0.6
			g2   right [mix 0 CAP 0.8]
			arcvh
			g2   [mix middle right 0.5] (CAP - O - fine / 2)
			archv
			flat middle (CAP - ada)
			curl middle (ArchDepthB * 0.5 + fine / 2)
			hookend (O + fine / 2)
			g2   (middle + radius * 2) SHook

	create-glyph 'estimated' 0x212E : glyph-proc
		local fineArc : CAP * 0.0300
		local fineBar : CAP * 0.0278
		local thickBarWidth : (0.183 / [Math.sqrt 0.9]) * [Math.sqrt (CAP * (RightSB - SB))]
		define smA : ArchDepthAOf (ArchDepth * (CAP / XH)) Width
		define smB : ArchDepthBOf (ArchDepth * (CAP / XH)) Width
		include : union
			HBarBottom SB RightSB (CAP * 0.5) fineBar
			difference
				union
					difference
						OShapeOutline CAP 0 SB RightSB fineArc smA smB
						OShapeOutline (CAP - fineArc) (0 + fineArc) [mix SB RightSB 0.077] [mix RightSB SB 0.077] fineArc (smA - fineArc) (smB - fineArc)
					intersection
						OShapeOutline.NoOvershoot CAP 0 SB RightSB fineArc smA smB
						union
							Rect CAP 0 SB (SB + thickBarWidth)
							Rect CAP (CAP * 0.5) (RightSB - thickBarWidth) RightSB
				Rect (CAP * 0.5) (CAP * 0.208) Middle Width

	turned 'turniota' 0x2129 'grek/iota' HalfAdvance (XH / 2)

	create-glyph 'mathAleph' 0x2135 : glyph-proc
		define p 0.3
		include : XStrand true false SB CAP RightSB 0 0.1 0.4 0.28
		include : intersection
			dispiro
				widths.rhs
				g4.down.start RightSB CAP
				g4 [mix SB RightSB p] 0
			spiro-outline
				corner SB CAP
				corner RightSB CAP
				corner RightSB 0
		include : intersection
			dispiro
				widths.rhs
				g4.up.start SB 0
				g4 [mix SB RightSB (1 - p)] CAP
			spiro-outline
				corner SB 0
				corner RightSB 0
				corner SB CAP

	create-glyph 'mathBeth' 0x2136 : glyph-proc
		define pX 0.7
		define pY 0.8
		define turnX : mix SB RightSB pY
		include : dispiro
			widths.rhs
			flat SB CAP
			curl [Math.min (turnX - Stroke * 1.5 * HVContrast) [mix SB turnX pX]] CAP
			archv
			flat turnX [Math.min (CAP - Stroke * 1.5) [mix 0 CAP pY]]
			curl turnX 0
		include : HBarBottom SB RightSB 0

	create-glyph 'informationSource' 0x2139 : glyph-proc
		local sw : UnicodeWeightGrade 9 1
		include : VBar Middle 0 XH sw
		include : LeftwardTopSerif     (Middle - sw / 2 * HVContrast) XH (LongJut / 2)
		include : LeftwardBottomSerif  (Middle - sw / 2 * HVContrast) 0  (LongJut / 2)
		include : RightwardBottomSerif (Middle + sw / 2 * HVContrast) 0  (LongJut / 2)
		include : DotAt Middle (XH + AccentStackOffset) (DotRadius * sw / Stroke)

	create-glyph 'partial' 0x2202 : glyph-proc
		include : MarkSet.b
		local fine : Stroke * CThin
		local coFine : mix fine Stroke 0.5
		local yMid : Ascender * 0.6
		local yMid2 : mix yMid [YSmoothMidR yMid 0 SmallArchDepthA SmallArchDepthB] 0.875
		local yMockBarStart : yMid2 + Stroke * 0.3
		local xTerminal : [mix SB RightSB 0.4] + 0.5 * Stroke * HVContrast
		local pStraightBarStart : 0.75 - (Stroke / Ascender)
		include : intersection [MaskBelow Ascender] : dispiro
			g4.right.start (Middle + CorrectionOMidS - TanSlope * (Stroke - fine)) (O + Stroke - fine + 1/16) [widths.lhs fine]
			straight.up.mid (RightSB - OX - (1 - CThin) * Stroke * HVContrast) [YSmoothMidR yMid 0 SmallArchDepthA SmallArchDepthB]
			arcvh
			g4 (Middle - CorrectionOMidS) (yMid - O) [widths.lhs]
			archv
			g4 (SB + OX) [YSmoothMidL yMid 0 SmallArchDepthA SmallArchDepthB]
			arcvh
			g4 (Middle + CorrectionOMidS) O
			archv
			flat (RightSB - OX) [YSmoothMidR yMid 0 SmallArchDepthA SmallArchDepthB] [widths.lhs coFine]
			curl (RightSB - OX) yMid2
			flat [mix Width xTerminal pStraightBarStart] [mix yMockBarStart CAP pStraightBarStart] [widths.lhs]
			curl [mix Width xTerminal 2]                 [mix yMockBarStart CAP 2]

	do "Tironian Et"
		define [TironianEtTopBarShape y] : intersection
			Rect (y - O) 0 SB RightSB
			dispiro
				widths.rhs
				g4 (SB + O) (y - O)
				g4 Middle (y + O)
				g4 RightSB (y - O)

		create-glyph 'tironianEt' 0x204A : glyph-proc
			include : TironianEtTopBarShape XH
			include : intersection
				Rect (XH - O - Stroke) (-Stroke) SB RightSB
				dispiro
					widths.rhs
					flat RightSB (XH - O - Stroke)
					curl (Middle + 0.125 * Stroke * HVContrast) O

		create-glyph 'TironianEt' 0x2E52 : glyph-proc
			include : TironianEtTopBarShape CAP
			include : dispiro
				widths.rhs
				flat RightSB (CAP - HalfStroke) [heading Downward]
				curl RightSB ArchDepthB
				hookend O
				g4 SB Hook

	do "Roman Numerals"
		create-glyph 'romanFiftyEarlyForm' 0x2186 : glyph-proc
			include : MarkSet.capital
			include : VBar Middle 0 CAP
			include : dispiro
				flat (Middle - HalfStroke * HVContrast) 0 [widths.rhs : AdviceStroke 3]
				curl (SB + O) [mix 0 CAP 0.375]
			include : dispiro
				flat (Middle + HalfStroke * HVContrast) 0 [widths.lhs : AdviceStroke 3]
				curl (RightSB - O) [mix 0 CAP 0.375]

glyph-block Symbol-Cyrl-Thousands : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	create-glyph 'cyrlThousandsSign' 0x482 : glyph-proc
		define fine : AdviceStroke 3
		include : ExtLineCenter (-0.1) fine SB Descender RightSB XH
		include : ExtLineCenter (-0.1) fine [mix SB RightSB 0.1] [mix Descender XH 0.8] [mix SB RightSB 1.1] [mix Descender XH 0.5]
		include : ExtLineCenter (-0.1) fine [mix SB RightSB (-0.1)] [mix Descender XH 0.5] [mix SB RightSB 0.9] [mix Descender XH 0.2]

glyph-block Symbol-Letter-Punctuation-Composite : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives

	WithDotVariants 'LDotDot' null : function [DrawAt kdr overshoot] : glyph-proc
		set-width 0
		include : DrawAt 0 0 (DotRadius * kdr - overshoot)
		set-mark-anchor 'cvDecompose' 0 0

	derive-composites 'LDot' 0x13F 'L' 'LDotDot'
	derive-composites 'lDot' 0x140 'lDotBase' 'LDotDot'
