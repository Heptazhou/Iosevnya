$$include '../../meta/macros.ptl'

import [mix fallback] from"../../support/utils.mjs"


glyph-module

glyph-block Mark-Adjustment : begin
	glyph-block-export ExtendBelowBaseAnchors
	define [ExtendBelowBaseAnchors y] : glyph-proc
		if currentGlyph.baseAnchors.below : begin
			local a : currentGlyph.gizmo.unapply currentGlyph.baseAnchors.below
			if (a.y > y) : set-base-anchor 'below' a.x y
		if currentGlyph.baseAnchors.leaningBelow : begin
			local a : currentGlyph.gizmo.unapply currentGlyph.baseAnchors.leaningBelow
			if (a.y > y) : set-base-anchor 'leaningBelow' a.x y

	glyph-block-export ExtendAboveBaseAnchors
	define [ExtendAboveBaseAnchors y] : glyph-proc
		if currentGlyph.baseAnchors.above : begin
			local a : currentGlyph.gizmo.unapply currentGlyph.baseAnchors.above
			if (a.y < y) : set-base-anchor 'above' a.x y
		if currentGlyph.baseAnchors.leaningAbove : begin
			local a : currentGlyph.gizmo.unapply currentGlyph.baseAnchors.leaningAbove
			if (a.y < y) : set-base-anchor 'leaningAbove' a.x y

	glyph-block-export LeaningAnchor
	define LeaningAnchor : namespace
		define [SetProcImpl mkCenter mkLeaning x] : glyph-proc
			local existing currentGlyph.baseAnchors.(mkCenter)
			if [not existing] : return nothing
			local existingNT : currentGlyph.gizmo.unapply existing
			currentGlyph.setBaseAnchor mkLeaning x existingNT.y

		define [Impl mkCenter mkLeaning] : namespace
			export : define [At x] : SetProcImpl mkCenter mkLeaning x

			export : define VBar : namespace
				export : define [m x] : At x
				export : define [l x sw] : At (x + [HSwToV : 0.5 * [fallback sw Stroke]])
				export : define [r x sw] : At (x - [HSwToV : 0.5 * [fallback sw Stroke]])

			export : define [Hook xOutsideBar xOutsideHook sw] : begin
				local xAnchor : mix xOutsideBar xOutsideHook (7/16)
				return : SetProcImpl mkCenter mkLeaning xAnchor

		export : define Above : Impl 'above' 'leaningAbove'
		export : define Below : Impl 'below' 'leaningBelow'
