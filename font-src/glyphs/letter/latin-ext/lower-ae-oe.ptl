$$include '../../../meta/macros.ptl'

import [mix linreg clamp fallback] from '../../../support/utils'
import [Dotless CvDecompose RequireCcmpDecompose] from "../../../support/gr"

glyph-module

glyph-block Letter-Latin-Lower-AE-OE : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Letter-Shared-Shapes : nShoulder

	define [GetSm df stroke] : begin
		local ada : ArchDepthAOf [Math.max (stroke * 1.125) (SmallArchDepth * 0.6 * df.div)] (Width * df.div)
		local adb : ArchDepthBOf [Math.max (stroke * 1.125) (SmallArchDepth * 0.6 * df.div)] (Width * df.div)
		return { ada adb }

	define [aeEPart df] : glyph-proc
		local eLeft : df.middle - df.mvs / 2 * HVContrast + 0.1
		local eMiddle : [mix eLeft (df.rightSB - OX * 2) 0.5] - df.mvs * TanSlope
		local barbottom (XH * DesignParameters.eBarPos - df.mvs / 2)
		local { ada adb } : GetSm df df.mvs

		include : difference
			union
				dispiro
					widths.lhs df.mvs
					flat df.rightSB barbottom [heading Upward]
					curl df.rightSB (XH - adb)
					arcvh
					g4   eMiddle (XH - O)
					archv
					flat eLeft (XH - ada)
					curl eLeft adb
					hookend O (tight -- true) (sw -- df.mvs)
					g4 df.rightSB (AHook + df.mvs * TanSlope) [heading Upward]
				HBarBottom (eLeft + df.mvs / 2) (df.rightSB - df.mvs / 2) barbottom df.mvs
			Rect barbottom (barbottom - XH * 0.05) eMiddle df.width

	define [aeEPartRounded df] : glyph-proc
		local eLeft : df.middle - df.mvs / 2 * HVContrast + 0.1
		local eMiddle : [mix eLeft (df.rightSB - OX * 2) 0.5] - df.mvs * TanSlope
		local barbottom (XH * DesignParameters.eBarPos - df.mvs / 2)
		local { ada adb } : GetSm df df.mvs

		include : difference
			dispiro
				flat eLeft barbottom [widths.lhs.heading df.mvs Rightward]
				curl eMiddle barbottom [heading Rightward]
				archv
				g4 (df.rightSB - OX) [YSmoothMidR XH barbottom ada adb]
				arcvh
				g4   eMiddle (XH - O)
				archv
				flat eLeft (XH - ada)
				curl eLeft adb
				hookend O (tight -- true) (sw -- df.mvs)
				g4 (df.rightSB - OX * 2) (AHook + df.mvs * TanSlope) [heading Upward]
			Rect barbottom (barbottom - XH * 0.05) eMiddle df.width

	define [aeAPart df] : glyph-proc
		local bartop (XH * OverlayPos * 1.02 + df.mvs / 2)
		local abarRight : df.middle + df.mvs / 2 * HVContrast - 0.1
		local lowmiddle : mix (df.leftSB + OX * 2) abarRight 0.5
		local barsmooth : mix df.leftSB abarRight 0.7
		local { ada adb } : GetSm df df.mvs

		include : dispiro
			widths.rhs df.mvs
			g4 (df.leftSB + OX) (XH - AHook - df.mvs * TanSlope) [heading Upward]
			hookstart (XH - O) (tight -- true) (sw -- df.mvs)
			flat abarRight (XH - adb)
			curl abarRight adb
			arcvh
			g4 lowmiddle O [heading Leftward]
			archv
			g4 (df.leftSB + OX * 2) [mix 0 bartop 0.45]
			arcvh
			flat barsmooth bartop
			curl (abarRight - 1) bartop [heading Rightward]

	define [oeOPart df] : glyph-proc
		local abarRight : df.middle + df.mvs / 2 * HVContrast
		local { ada adb } : GetSm df df.mvs

		include : OShape XH 0 (df.leftSB + OX) (abarRight + OX) df.mvs ada adb

	define [ueUPart df fSlab] : new-glyph : glyph-proc
		local abarRight : df.middle + df.mvs / 2 * HVContrast
		local { ada adb } : GetSm df df.mvs

		include : nShoulder
			left -- abarRight
			right -- (df.rightSB - OX)
			stroke -- df.mvs
			ada -- adb
			adb -- adb
		include : FlipAround (df.width / 2) (XH / 2)
		if fSlab : include : LeftwardTopSerif df.leftSB XH SideJut

	define AeConfig : object
		flatCrossbar { aeEPart        }
		rounded      { aeEPartRounded }

	foreach { suffix { ePartshape } } [Object.entries AeConfig] : do
		create-glyph "ae.\(suffix)" : glyph-proc
			local df : DivFrame para.diversityM 3
			set-width df.width
			include : df.markSet.e
			include : aeAPart df
			include : ePartshape df
		create-glyph "oe.\(suffix)" : glyph-proc
			local df : DivFrame para.diversityM 3
			set-width df.width
			include : df.markSet.e
			include : oeOPart df
			include : ePartshape df
		create-glyph "ue/e.\(suffix)" : glyph-proc
			local df : DivFrame para.diversityM 3
			set-width 0
			set-mark-anchor 'cvDecompose' 0 0
			include : ePartshape df


	define UeUConfig : object
		"toothed"       { SLAB }
		"motionSerifed" { true }
		"serifless"     { false }

	foreach { suffix { fSlab } } [Object.entries UeUConfig] : do
		create-glyph "ue/u.\(suffix)" : glyph-proc
			local df : DivFrame para.diversityM 3
			include : df.markSet.e
			set-base-anchor 'cvDecompose' 0 0
			include : ueUPart df fSlab

	select-variant 'ae' 0xE6
	alias 'cyrl/ae' 0x4D5 'ae'
	turned 'turnae' 0x1D02 'ae' [DivFrame para.diversityM].middle (XH / 2)

	select-variant 'oe' 0x153
	turned 'turnoe' 0x1D14 'oe' [DivFrame para.diversityM].middle (XH / 2)

	select-variant "ue/e"
	select-variant "ue/u"

	derive-composites 'ue' 0x1D6B 'ue/u' 'ue/e'

	create-glyph 'db' 0x238 : glyph-proc
		local df : DivFrame para.diversityM 3
		set-width df.width
		include : df.markSet.b
		include : oeOPart df
		include : FlipAround df.middle (XH / 2)
		include : oeOPart df
		include : VBar df.middle (XH / 2) Ascender df.mvs
		if SLAB : begin
			include : LeftwardTopSerif (df.middle - df.mvs / 2 * HVContrast) Ascender SideJut

	create-glyph 'qp' 0x239 : glyph-proc
		local df : DivFrame para.diversityM 3
		set-width df.width
		include : df.markSet.p
		include : oeOPart df
		include : FlipAround df.middle (XH / 2)
		include : oeOPart df
		include : VBar df.middle Descender (XH / 2) df.mvs
		if SLAB : begin
			include : CenterBottomSerif df.middle Descender Jut
