$$include '../../../meta/macros.ptl'

import [mix linreg clamp fallback] from"../../../support/utils.mjs"

glyph-module

glyph-block Letter-Cyrillic-Yat : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Mark-Adjustment : ExtendAboveBaseAnchors
	glyph-block-import Letter-Shared-Metrics : BowlXDepth
	glyph-block-import Letter-Shared-Shapes : LetterBarOverlay
	glyph-block-import Letter-Cyrillic-Yeri : CyrlYeriUprightShape CyrlYeriCursiveShape
	glyph-block-import Letter-Cyrillic-Iotified-A : Iotified

	define [xBarLeft df] : Math.max (df.rightSB - (RightSB - SB)) : if SLAB
		Just ([mix df.leftSB df.rightSB 0.35] - df.mvs / 2 * HVContrast)
		Just  [mix df.leftSB df.rightSB 0.2]

	define [YatShape] : with-params [df top [pBar 0.5] [fLowerCase false] [sw df.mvs] [xCrossbarLeftOverride nothing] [yCrossbarOverride nothing] [YeriShape CyrlYeriUprightShape]] : glyph-proc
		local xYeriLeft : xBarLeft df

		include : YeriShape top
			left -- xYeriLeft
			right  -- df.rightSB - O * 2
			pBar -- pBar
			stroke -- sw

		local cTop : if SLAB (top - Stroke / 2) top

		local _xCrossbarLeft : mix 0 df.leftSB [if SLAB 0.25 0.375]
		local xCrossbarLeft : fallback xCrossbarLeftOverride _xCrossbarLeft
		local xCrossbarRight : mix _xCrossbarLeft (xYeriLeft + [HSwToV : 0.5 * sw]) 2
		local yCrossbar : fallback yCrossbarOverride : [mix (top * pBar + sw / 2) cTop [if SLAB 0.625 0.5]] + 0.25 * OverlayStroke
		include : HBar.t xCrossbarLeft xCrossbarRight yCrossbar OverlayStroke

		if SLAB : begin
			local swSerif : Math.min (VJutStroke * sw / Stroke) (0.625 * (xYeriLeft - _xCrossbarLeft))
			local vJut : Math.min VJut (OverlayStroke + 0.5 * (yCrossbar - OverlayStroke - (top * pBar)))
			include : tagged 'serifDL' : VSerif.dl xCrossbarLeft  yCrossbar vJut swSerif
			include : tagged 'serifDR' : VSerif.dr xCrossbarRight yCrossbar vJut swSerif

			if fLowerCase : begin
				eject-contour 'serifYeriLT'
				include : tagged 'serifLT' : HSerif.lt xYeriLeft Ascender SideJut sw

	create-glyph 'cyrl/Yat' 0x462 : glyph-proc
		local df : DivFrame [mix 1 para.diversityM 0.5]
		set-width df.width
		include : df.markSet.capital
		include : YatShape df CAP
			pBar -- 0.5

	create-glyph 'cyrl/yat.upright' : glyph-proc
		local df : DivFrame [mix 1 para.diversityM 0.5]
		set-width df.width
		include : df.markSet.b
		include : YatShape df Ascender
			pBar -- 0.375
			fLowerCase -- true

	# Italic form unknwon, so we just use the upright form
	do
		create-glyph 'cyrl/yatTall.upright' : make CyrlYeriUprightShape
		create-glyph 'cyrl/yatTall.italic'  : make CyrlYeriCursiveShape
	: where
		[make Yeri] : glyph-proc
			local df : DivFrame [mix 1 para.diversityM 0.5]
			set-width df.width
			include : df.markSet.b
			include : ExtendAboveBaseAnchors (Ascender + 0.5 * AccentStackOffset)
			include : YatShape df (Ascender + 0.5 * AccentStackOffset)
				pBar -- 0.375
				fLowerCase -- true
				yCrossbarOverride -- Ascender
				YeriShape -- Yeri

	define [IotifiedYatShape] : with-params [df top [pBar 0.5] [fLowerCase false]] : glyph-proc
		local gap : 0.25 * (df.width - 2 * df.leftSB - [if SLAB 2.5 4.5] * df.mvs)
		define divSub : (df.width - gap - df.mvs) / Width
		define dfSub : DivFrame divSub 2

		local shift : Width * (df.div - divSub)
		include : with-transform [ApparentTranslate shift 0]
			YatShape dfSub top
				pBar -- pBar
				fLowerCase -- fLowerCase
				sw -- df.mvs
				xCrossbarLeftOverride -- (df.leftSB - shift)
		eject-contour 'serifDL'

		if fLowerCase
			include : Iotified.ascender df top 0 (fCapital -- false)
			include : Iotified.full df top 0 (fCapital -- true)

	create-glyph 'cyrl/YatIotified' 0xA652 : glyph-proc
		local df : DivFrame para.diversityM 3
		set-width df.width
		include : df.markSet.capital
		include : IotifiedYatShape df CAP (pBar -- 0.5)

	create-glyph 'cyrl/yatIotified' 0xA653 : glyph-proc
		local df : DivFrame para.diversityM 3
		set-width df.width
		include : df.markSet.b
		include : IotifiedYatShape df Ascender (pBar -- 0.375) (fLowerCase -- true)

	glyph-block-import Letter-Shared-Shapes : nShoulderKnots
	create-glyph 'cyrl/yat.italic' : glyph-proc
		local df : DivFrame para.diversityM 3
		local fine : AdviceStroke 4 df.div

		local xMidBarLeft    : df.middle - [HSwToV : 0.5 * df.mvs]
		local xMidBarRight   : df.middle + [HSwToV : 0.5 * df.mvs]

		set-width df.width
		include : df.markSet.e
		include : VBar.l df.leftSB 0 XH df.mvs
		include : dispiro
			nShoulderKnots
				left   -- (df.leftSB + [HSwToV df.mvs])
				right  -- xMidBarRight
				fine   -- ShoulderFine
				bottom -- (XH - SmallArchDepthB - 0.1)
				stroke -- df.mvs

		include : CyrlYeriCursiveShape XH xMidBarLeft df.rightSB (stroke -- df.mvs)
			yStart -- (XH - SmallArchDepthB)
		eject-contour 'serifYeriLT'

		if SLAB : begin
			if [not para.isItalic] : include : tagged 'serifLB'
				HSerif.lb df.leftSB 0  SideJut
			include : tagged 'serifLT' : HSerif.lt    df.leftSB XH SideJut

	alias 'latn/yatSakha.italic' null 'cyrl/yat.italic'
