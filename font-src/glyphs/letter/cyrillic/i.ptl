$$include '../../../meta/macros.ptl'

import [mix barmixL linreg clamp fallback] from '../../../support/utils'
import [DesignParameters] from '../../../meta/aesthetics'
import '../../../support/point' as Point

glyph-module

glyph-block Letter-Cyrillic-I : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Letter-Shared-Shapes : CyrTailDescender


	define [CyrISerifs top _left _right] : glyph-proc
		local left : fallback _left SB
		local right : fallback _right RightSB
		include : LeftwardBottomSerif left 0 SideJut
		include : RightwardTopSerif right top SideJut
		include : CenterTopSerif (left + HalfStroke * HVContrast) top Jut
		include : tagged 'serifRB'
			CenterBottomSerif (right - HalfStroke * HVContrast) 0 Jut

	define [CyrIShape top] : glyph-proc
		local topstroke : AdviceStroke 4
		local halftopstroke : topstroke / 2
		include : dispiro
			widths.lhs
			flat RightSB 0 [heading Upward]
			curl RightSB (top * 0.4) [heading Upward]
			straight.up.end RightSB top [widths.heading topstroke 0 Upward]
		include : dispiro
			widths.lhs
			flat SB top [heading Downward]
			curl SB (top * 0.6) [heading Downward]
			straight.down.end SB 0 [widths.heading topstroke 0 Downward]
		include : dispiro
			flat (RightSB - halftopstroke) top [widths.heading 0 topstroke Downward]
			curl (SB + halftopstroke) 0 [widths.heading topstroke 0 Downward]
		include : NeedSlab SLAB : CyrISerifs top

	create-glyph 'cyrl/I' 0x418 : glyph-proc
		include : MarkSet.capital
		include : CyrIShape CAP

	create-glyph 'cyrl/i.upright' : glyph-proc
		include : MarkSet.e
		include : CyrIShape XH

	alias 'cyrl/smcpI' 0x1D0E 'cyrl/i.upright'

	derive-composites 'cyrl/IShortTail' 0x48A 'cyrl/I' [refer-glyph 'breveAbove'] [CyrTailDescender RightSB]
	derive-composites 'cyrl/iShortTail.upright' null  'cyrl/i.upright' [refer-glyph 'breveAbove'] [CyrTailDescender RightSB]
