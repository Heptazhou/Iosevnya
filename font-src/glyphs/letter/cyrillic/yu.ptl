$$include '../../../meta/macros.ptl'

import [mix barmixL linreg clamp fallback] from '../../../support/utils'
import [DesignParameters] from '../../../meta/aesthetics'
import '../../../support/point' as Point

glyph-module

glyph-block Letter-Cyrillic-Yu : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives

	define SLAB-ALL        1
	define SLAB-LOWER      2
	define SLAB-BULGARIAN  3

	define [CyrYuShape df slabType top xtop sma smb] : glyph-proc
		local xm : barmixL df.leftSB df.rightSB (df.mvs * HVContrast) [StrokeWidthBlend 0.4 0.45]
		include : VBarLeft df.leftSB 0 xtop df.mvs
		include : OShape top 0 xm df.rightSB df.mvs (sma * 0.7 * df.div) (smb * 0.7 * df.div)
		include : HBar (df.leftSB + 1) xm (top / 2)

		local jut : Math.min Jut : Jut * 0.75 * df.div
		local useItalicShape : slabType !== SLAB-ALL && para.isItalic

		if SLAB : begin
			include : tagged "serifLT" : if (slabType === SLAB-BULGARIAN || useItalicShape)
				then : LeftwardTopSerif df.leftSB xtop (jut - df.mvs / 2 * HVContrast)
				else : CenterTopSerif (df.leftSB + df.mvs / 2 * HVContrast) xtop jut
			include : tagged "seriflB" : if useItalicShape
				glyph-proc
				CenterBottomSerif (df.leftSB + df.mvs / 2 * HVContrast) 0 jut

	create-glyph 'cyrl/Yu' 0x42E : glyph-proc
		local df : DivFrame para.diversityM 3
		set-width df.width
		include : df.markSet.capital
		include : CyrYuShape df SLAB-ALL CAP CAP SmoothA SmoothB

	create-glyph 'cyrl/yu' 0x44E : glyph-proc
		local df : DivFrame para.diversityM 3
		set-width df.width
		include : df.markSet.e
		include : CyrYuShape df SLAB-LOWER XH XH SmallSmoothA SmallSmoothB

	create-glyph 'cyrl/yu.BGR' : glyph-proc
		local df : DivFrame para.diversityM 3
		set-width df.width
		include : df.markSet.b
		include : CyrYuShape df SLAB-BULGARIAN XH CAP SmallSmoothA SmallSmoothB