$$include '../../../meta/macros.ptl'

import [mix barmixL linreg clamp fallback] from '../../../support/utils'
import [RightDependentLink RightDependentTrigger CvDecompose] from "../../../support/gr"

glyph-module

glyph-block Letter-Cyrillic-Nje : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Letter-Shared : CreateRightDependentComposite
	glyph-block-import Letter-Shared-Shapes : SerifFrame
	glyph-block-import Letter-Cyrillic-Yeri : CyrlYeriUprightShape CyrlYeriRoundShape CyrlYeriCursiveShape

	define SLAB-NONE                   0
	define SLAB-TOP-LEFT               1
	define SLAB-TOP-LEFT-BOTTOM-RIGHT  2
	define SLAB-TAILED-CYRILLIC        3
	define SLAB-ALL                    4

	define [LeftHalf slabType df top] : glyph-proc
		include : VBarLeft df.leftSB 0 top df.mvs
		include : HBar df.leftSB df.middle (top / 2)

		local sf : SerifFrame top 0 df.leftSB (df.middle + 0.5 * df.mvs * HVContrast) (sw -- df.mvs)
		include : match slabType
			[Just SLAB-NONE]   : glyph-proc
			[Just SLAB-TOP-LEFT] : begin sf.lt.outer
			[Just SLAB-TOP-LEFT-BOTTOM-RIGHT] : composite-proc sf.lt.outer sf.rb.outer
			[Just SLAB-TAILED-CYRILLIC] : composite-proc sf.lt.full sf.rt.full sf.lb.full
			[Just SLAB-ALL] : composite-proc sf.lt.full sf.rt.full sf.lb.full sf.rb.full

	define [RightHalf Yeri df top] : glyph-proc
		include : Yeri top
			left -- (df.middle - df.mvs / 2 * HVContrast)
			right -- (df.rightSB - O)
			stroke -- df.mvs
		eject-contour 'serifYeriLT'
		eject-contour 'serifYeriLB'

	define NjeReduction : object
		serifed 'serifedExceptBottomRight'

	define LeftHalfConfig : object
		serifless                        { SLAB-NONE                  }
		topLeftSerifed                   { SLAB-TOP-LEFT              }
		topLeftBottomRightSerifed        { SLAB-TOP-LEFT-BOTTOM-RIGHT }
		serifed                          { SLAB-ALL                   }
		serifedExceptBottomRight         { SLAB-TAILED-CYRILLIC       }

	foreach { suffix { slabType } } [Object.entries LeftHalfConfig] : do
		local kReducedLink NjeReduction.(suffix)
		create-glyph "cyrl/Nje/leftHalf.\(suffix)"  : glyph-proc
			local df : DivFrame para.diversityM 3
			set-width df.width
			set-base-anchor 'cvDecompose' 0 0
			include : df.markSet.capital
			include : LeftHalf slabType df CAP
			set-base-anchor 'cvDecompose' 0 0
			if kReducedLink : begin
				RightDependentLink.set currentGlyph 'reduced' "cyrl/Nje/leftHalf.\(kReducedLink)"

		create-glyph "cyrl/nje/leftHalf.\(suffix)" : glyph-proc
			local df : DivFrame para.diversityM 3
			set-width df.width
			set-base-anchor 'cvDecompose' 0 0
			include : df.markSet.e
			include : LeftHalf slabType df XH
			set-base-anchor 'cvDecompose' 0 0
			if kReducedLink : begin
				RightDependentLink.set currentGlyph 'reduced' "cyrl/nje/leftHalf.\(kReducedLink)"

	define YerConfig : object
		corner  { CyrlYeriUprightShape }
		round   { CyrlYeriRoundShape   }
		cursive { CyrlYeriCursiveShape }

	foreach { suffix { Yeri } } [Object.entries YerConfig] : do
		create-glyph "cyrl/Nje/rightHalf.\(suffix)"  : glyph-proc
			local df : DivFrame para.diversityM 3
			set-width 0
			set-mark-anchor 'cvDecompose' 0 0
			include : df.markSet.capital
			include : RightHalf Yeri df CAP
			set-mark-anchor 'cvDecompose' 0 0
			if (Yeri !== CyrlYeriUprightShape) : RightDependentTrigger.set currentGlyph 'reduced'

		create-glyph "cyrl/nje/rightHalf.\(suffix)" : glyph-proc
			local df : DivFrame para.diversityM 3
			set-width 0
			set-mark-anchor 'cvDecompose' 0 0
			include : df.markSet.e
			include : RightHalf Yeri df XH
			set-mark-anchor 'cvDecompose' 0 0
			if (Yeri !== CyrlYeriUprightShape) : RightDependentTrigger.set currentGlyph 'reduced'

	select-variant 'cyrl/Nje/rightHalf'
	select-variant 'cyrl/nje/rightHalf'
	select-variant 'cyrl/Nje/leftHalf/full'    (follow -- 'cyrl/Nje/leftHalf') (shapeFrom -- 'cyrl/Nje/leftHalf')
	select-variant 'cyrl/nje/leftHalf/full'    (follow -- 'cyrl/nje/leftHalf') (shapeFrom -- 'cyrl/nje/leftHalf')
	select-variant 'cyrl/Nje/leftHalf/reduced' (follow -- 'cyrl/Nje/leftHalf') (shapeFrom -- 'cyrl/Nje/leftHalf') (reduction -- NjeReduction)
	select-variant 'cyrl/nje/leftHalf/reduced' (follow -- 'cyrl/nje/leftHalf') (shapeFrom -- 'cyrl/nje/leftHalf') (reduction -- NjeReduction)

	if [query-glyph 'cyrl/Nje/leftHalf/full'] : RightDependentLink.set [query-glyph 'cyrl/Nje/leftHalf/full'] 'reduced' 'cyrl/Nje/leftHalf/reduced'
	if [query-glyph 'cyrl/nje/leftHalf/full'] : RightDependentLink.set [query-glyph 'cyrl/nje/leftHalf/full'] 'reduced' 'cyrl/nje/leftHalf/reduced'

	CreateRightDependentComposite 'cyrl/Nje' 0x40A 'cyrl/Nje/leftHalf/full' 'cyrl/Nje/rightHalf'
	CreateRightDependentComposite 'cyrl/nje' 0x45A 'cyrl/nje/leftHalf/full' 'cyrl/nje/rightHalf'
