$$include '../../../meta/macros.ptl'

import [mix barmixL linreg clamp fallback] from '../../../support/utils'
import [DesignParameters] from '../../../meta/aesthetics'
import '../../../support/point' as Point

glyph-module

glyph-block Letter-Cyrillic-Abkhasian-Ha : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives

	define [CyrlAbkHaShape df top sm] : begin
		local sma : SmoothAOf sm Width
		local smb : SmoothBOf sm Width
		local sma2 : SmoothAOf (0.625 * sm) Width
		local smb2 : SmoothBOf (0.625 * sm) Width
		local xm : df.middle - 0.5 * HVContrast * df.mvs
		local y2 : top * 0.75
		return : dispiro
			g4.left.start (df.middle - CorrectionOMidX * df.mvs) (top - O) [widths.lhs df.mvs]
			archv
			flat (df.leftSB + OX) (top - sma)
			curl (df.leftSB + OX) smb
			arcvh
			g4 (df.middle + CorrectionOMidX * df.mvs) O
			archv
			straight.up.mid (df.rightSB - OX) [YSmoothMidR (y2 + df.mvs) 0 sma2 smb2]
			arcvh
			g4 ([mix xm df.rightSB 0.5]  - CorrectionOMidX * df.mvs) y2
			archv
			straight.down.mid xm [YSmoothMidL (y2 + df.mvs) 0 sma2 smb2]
			arcvh
			g4 (df.rightSB - O) O


	create-glyph 'cyrl/abk/Ha' 0x4A8 : glyph-proc
		define df : DivFrame para.diversityM 3
		include : df.markSet.capital
		include : CyrlAbkHaShape df CAP Smooth

	create-glyph 'cyrl/abk/ha' 0x4A9 : glyph-proc
		define df : DivFrame para.diversityM 3
		include : df.markSet.e
		include : CyrlAbkHaShape df XH SmallSmooth
