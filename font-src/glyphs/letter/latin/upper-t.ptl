$$include '../../../meta/macros.ptl'

import [mix linreg clamp fallback] from '../../../support/utils'
import [DesignParameters] from '../../../meta/aesthetics'
import [Dotless CvDecompose MathSansSerif] from "../../../support/gr"

glyph-module

glyph-block Letter-Latin-Upper-T : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Letter-Blackboard : BBS BBD
	glyph-block-import Letter-Latin-Lower-M
	glyph-block-import Letter-Shared-Shapes : CyrDescender

	define TLeftX  : SB + OX * 1.5
	define TRightX : RightSB - OX * 1.5
	define [TShape top doTopSerifs doBottomSerifs] : glyph-proc
		include : VBar Middle 0 top
		local l TLeftX
		local r TRightX
		include : tagged 'strokeLT' : HBarTop l Middle top
		include : tagged 'strokeRT' : HBarTop Middle r top

		if doTopSerifs : begin
			include : tagged 'serifRT' : DownwardRightSerif r top VJut
			include : tagged 'serifLT' : DownwardLeftSerif l top VJut
		if doBottomSerifs : begin
			include : tagged 'serifMB' : RightwardBottomSerif Middle 0 MidJutCenter
			include : tagged 'serifMB' : LeftwardBottomSerif Middle 0 MidJutCenter

	define TConfig : object
		serifless     { false false }
		motionSerifed { true  false }
		serifed       { true  true  }

	foreach { suffix { doST doSB } } [Object.entries TConfig] : do
		create-glyph "T.\(suffix)" : glyph-proc
			include : MarkSet.capital
			set-base-anchor 'bottomright' (Middle + HalfStroke * HVContrast) 0
			include : TShape CAP doST doSB

		create-glyph "cyrl/TeDescender.\(suffix)" : glyph-proc
			include : MarkSet.if
			set-base-anchor 'bottomright' (Middle + HalfStroke * HVContrast) 0
			include : TShape CAP doST doSB
			include : CyrDescender (Middle + HalfStroke * HVContrast) (overflow -- [if doSB (MidJutCenter - HalfStroke * HVContrast)])

		create-glyph "TBar.\(suffix)" : glyph-proc
			include [refer-glyph "T.\(suffix)"] AS_BASE ALSO_METRICS
			include : HOverlayBar [mix Middle SB 0.8] [mix Middle RightSB 0.8] [mix 0 CAP 0.45]

		create-glyph "Thookleft.\(suffix)" : glyph-proc
			include [refer-glyph "T.\(suffix)"] AS_BASE ALSO_METRICS
			eject-contour 'serifLT'
			eject-contour 'strokeLT'
			include : LeftHook (SB + LeftHook.extension) CAP Middle

		create-glyph "smcpT.\(suffix)" : glyph-proc
			include : MarkSet.capital
			set-base-anchor 'bottomright' (Middle + HalfStroke * HVContrast) 0
			include : TShape XH doST doSB

		create-glyph "cyrl/teDescender.upright.\(suffix)" : glyph-proc
			include : MarkSet.p
			include : TShape XH doST doSB
			include : CyrDescender (Middle + HalfStroke * HVContrast) (overflow -- [if doSB (MidJutCenter - HalfStroke * HVContrast)])

	select-variant 'T' 'T'
	link-reduced-variant 'T/sansSerif' 'T' MathSansSerif
	select-variant 'T/rtailBase' (shapeFrom -- 'T')
	select-variant 'smcpT' 0x1D1B (follow -- 'T')
	select-variant "TBar" 0x166 (follow -- 'T')
	select-variant "Thookleft" 0x1AC (follow -- 'T')
	select-variant "cyrl/TeDescender" 0x4AC (follow -- 'T')

	alias 'grek/Tau' 0x3A4 'T'
	alias-reduced-variant 'grek/Tau/sansSerif' 'grek/Tau' 'T/sansSerif' MathSansSerif
	alias 'cyrl/Te' 0x422 'T'
	turned 'turnT' 0xA7B1 'T' Middle (CAP / 2)

	alias 'cyrl/te.upright' null 'smcpT'
	select-variant 'cyrl/teDescender.upright' (follow -- 'T')

	derive-composites 'TRtailBR' 0x1AE 'T/rtailBase' 'rtailBR'

	create-glyph 'mathbb/T' 0x1D54B : glyph-proc
		include : MarkSet.capital
		include : HBarTop TLeftX TRightX CAP BBS
		include : VBar (Middle - BBD / 2) 0 CAP BBS
		include : VBar (Middle + BBD / 2) 0 CAP BBS
		include : HBarBottom (Middle - BBD / 2) (Middle + BBD / 2) 0 BBS
