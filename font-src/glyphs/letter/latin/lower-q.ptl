$$include '../../../meta/macros.ptl'

import [mix linreg clamp fallback] from '../../../support/utils'
import [DesignParameters] from '../../../meta/aesthetics'
import [Dotless CvDecompose MathSansSerif] from "../../../support/gr"

glyph-module

glyph-block Letter-Latin-Lower-Q : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Marks : markHalfStroke
	glyph-block-import Letter-Shared-Shapes : RightwardTailedBar DToothlessRise DMBlend
	glyph-block-import Letter-Shared-Shapes : DiagonalTailR DiagonalTailStdDepth

	define TERMINAL-NORMAL  0
	define TERMINAL-TAILED  1
	define TERMINAL-DIAG    2
	define [RDiagTailedBar x0 yb yt] : begin
		local df : DivFrame 1
		local xMid : x0 - HalfStroke * HVContrast
		return : dispiro
			flat xMid yt [widths.center.heading Stroke Downward]
			DiagonalTailR df xMid yb (0.875 * Hook - Stroke * 0.375) Stroke

	define [EaredBody terminal top bottom] : glyph-proc
		set-base-anchor 'trailing' (RightSB - markHalfStroke) Descender
		include : OBarRightShape top
		include : match terminal
			[Just TERMINAL-NORMAL] : VBarRight          RightSB bottom top
			[Just TERMINAL-TAILED] : RightwardTailedBar RightSB bottom top
			[Just TERMINAL-DIAG]   : RDiagTailedBar     RightSB bottom top

	define [EarlessCornerBody terminal top bottom] : glyph-proc
		set-base-anchor 'trailing' (RightSB - markHalfStroke) Descender
		include : OBarLeftToothlessShape top SB DToothlessRise DMBlend
		include : FlipAround Middle (top / 2)
		include : match terminal
			[Just TERMINAL-NORMAL] : VBarRight          RightSB bottom (top - DToothlessRise)
			[Just TERMINAL-TAILED] : RightwardTailedBar RightSB bottom (top - DToothlessRise)
			[Just TERMINAL-DIAG]   : RDiagTailedBar     RightSB bottom (top - DToothlessRise)

	define [EarlessRoundedBody terminal top bottom] : glyph-proc
		set-base-anchor 'trailing' (RightSB - markHalfStroke) Descender
		include : OBarLeftRoundedShape top SB (SmallSmoothB - O)
		include : FlipAround Middle (top / 2)
		include : match terminal
			[Just TERMINAL-NORMAL] : VBarRight          RightSB bottom (top - SmallSmoothB)
			[Just TERMINAL-TAILED] : RightwardTailedBar RightSB bottom (top - SmallSmoothB)
			[Just TERMINAL-DIAG]   : RDiagTailedBar     RightSB bottom (top - SmallSmoothB)

	define [RtSerif y] : tagged 'serifRT' : RightwardTopSerif RightSB y SideJut
	define [RtSerifAuto y] : NeedSlab SLAB : RtSerif y
	define [RbSerif y] : tagged 'serifRB' : union
		LeftwardBottomSerif (RightSB - HalfStroke * HVContrast) y MidJutSide
		RightwardBottomSerif (RightSB - HalfStroke * HVContrast) y Jut
	define [RbSerifAuto y] : NeedSlab SLAB : RbSerif y

	define QConfig : object
		straight                     { EaredBody          TERMINAL-NORMAL RtSerifAuto RbSerifAuto }
		tailed                       { EaredBody          TERMINAL-TAILED RtSerifAuto nothing     }
		diagonalTailed               { EaredBody          TERMINAL-DIAG   RtSerifAuto nothing     }
		straightMotionSerifed        { EaredBody          TERMINAL-NORMAL RtSerif     nothing     }
		tailedMotionSerifed          { EaredBody          TERMINAL-TAILED RtSerif     nothing     }
		diagonalTailedMotionSerifed  { EaredBody          TERMINAL-DIAG   RtSerif     nothing     }
		earlessCorner                { EarlessCornerBody  TERMINAL-NORMAL nothing     RbSerifAuto }
		earlessCornerTailed          { EarlessCornerBody  TERMINAL-TAILED nothing     nothing     }
		earlessCornerDiagonalTailed  { EarlessCornerBody  TERMINAL-DIAG   nothing     nothing     }
		earlessRounded               { EarlessRoundedBody TERMINAL-NORMAL nothing     RbSerifAuto }
		earlessRoundedTailed         { EarlessRoundedBody TERMINAL-TAILED nothing     nothing     }
		earlessRoundedDiagonalTailed { EarlessRoundedBody TERMINAL-DIAG   nothing     nothing     }

	foreach { suffix { Body terminal sRT sRB } } [Object.entries QConfig] : do
		create-glyph "q.\(suffix)" : glyph-proc
			include : MarkSet.p
			include : Body terminal XH Descender
			if sRT : include : sRT XH
			if sRB : include : sRB Descender

		create-glyph "qHookTop.\(suffix)" : glyph-proc
			include : MarkSet.p
			include : Body terminal XH Descender
			include : VerticalHook (RightSB - HalfStroke * HVContrast) XH HookX (-Hook)
			if sRB : include : sRB Descender

		create-glyph "QRTail.\(suffix)" : glyph-proc
			include : MarkSet.if
			include : Body terminal CAP 0
			include : new-glyph : glyph-proc
				include : refer-glyph "rtailBR"
				include : ApparentTranslate RightSB 0
			if sRT : include : sRT CAP

		create-glyph "qRTail.\(suffix)" : glyph-proc
			include : MarkSet.p
			include : Body terminal XH 0
			include : new-glyph : glyph-proc
				include : refer-glyph "rtailBR"
				include : ApparentTranslate RightSB 0
			if sRT : include : sRT XH

	select-variant 'q' 'q'
	link-reduced-variant 'q/sansSerif' 'q' MathSansSerif
	alias 'cyrl/qa' 0x51B 'q'
	select-variant 'QRTail' 0x24A (follow -- 'qRTail')
	select-variant 'qRTail' 0x24B
	select-variant 'qHookTop' 0x2A0

	glyph-block-import Letter-Blackboard : BBS BBD BBBarRight
	create-glyph 'mathbb/q' 0x1D562 : glyph-proc
		include : MarkSet.p
		include : BBBarRight RightSB Descender XH
		include : intersection
			OShapeOutline.NoOvershoot XH 0 SB (RightSB - BBD - BBS * HVContrast)
			VBarLeft (SB + BBD + OX) 0 XH BBS
		include : OBarRightShape
			right -- RightSB - BBD
			top  -- XH
			stroke -- BBS
