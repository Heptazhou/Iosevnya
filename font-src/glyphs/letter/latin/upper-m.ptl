$$include '../../../meta/macros.ptl'

import [mix linreg clamp fallback] from '../../../support/utils'
import [Dotless CvDecompose MathSansSerif] from "../../../support/gr"

glyph-module

glyph-block Letter-Latin-Upper-M : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Letter-Shared-Shapes : SerifFrame CyrTailDescender


	define FORM-FLAT      0
	define FORM-HANGING   1
	define FORM-TURN-W    2
	define FORM-SAN       3
	define FORM-SAN-SMALL 4

	define SLAB-NONE            0
	define SLAB-AUTO            1
	define SLAB-MOTION          2
	define SLAB-SMALL-CYRILLIC  3

	glyph-block-export MShape
	define [MShape] : params [top df form slabType slanted] : glyph-proc
		local sidesSlope : if slanted 0.04 0
		local xLeftTop  : df.leftSB  + top * sidesSlope
		local xRightTop : df.rightSB - top * sidesSlope

		local swSideBot : match form
			[Just FORM-SAN-SMALL] : AdviceStroke 2.5  df.div
			[Just FORM-SAN]       : AdviceStroke 2.5  df.div
			[Just FORM-TURN-W]    : AdviceStroke 2.5  df.div
			[Just FORM-HANGING]   : AdviceStroke 2.5  df.div
			__                    : AdviceStroke 2.75 df.div
		local swSideTop : match form
			[Just FORM-SAN-SMALL] : AdviceStroke 3 df.div
			[Just FORM-SAN]       : AdviceStroke 3 df.div
			[Just FORM-TURN-W]    : AdviceStroke 3 df.div
			__                    : AdviceStroke 4 df.div
		local swMiddle : AdviceStroke 4.5 df.div
		local middleY : match form
			[Just FORM-SAN-SMALL] : top * 0.55
			[Just FORM-SAN]       : top * 0.55
			[Just FORM-TURN-W]    : top * 0.45
			[Just FORM-HANGING]   : top * 0.3 / (df.div * df.div)
			__                    : if SLAB Stroke 0
		local kMidShift : match form
			[Just FORM-FLAT] 0.75
			__               0.5
		local kMidBotStrokeShrink : match form
			[Just FORM-FLAT] : mix 1 df.div (-0.5)
			__               1

		include : tagged 'strokeLeftBar' : dispiro
			flat df.leftSB [if (form === FORM-SAN-SMALL) Descender 0] [widths.heading 0 swSideBot Upward]
			curl [mix df.leftSB xLeftTop 0.2] (top * 0.2) [heading Upward]
			straight.up.end xLeftTop top [widths.heading 0 swSideTop Upward]
		include : tagged 'strokeRightBar' : dispiro
			flat df.rightSB 0 [widths.heading swSideBot 0 Upward]
			curl [mix df.rightSB xRightTop 0.2] (top * 0.2) [heading Upward]
			straight.up.end xRightTop top [widths.heading swSideTop 0 Upward]
		include : dispiro
			flat (xLeftTop + kMidShift * swSideTop * HVContrast) top [widths.lhs.heading swMiddle Downward]
			curl (df.middle - 0.5 * swMiddle * HVContrast) middleY [widths.lhs.heading (kMidBotStrokeShrink * swMiddle) Downward]
		include : dispiro
			flat (xRightTop - kMidShift * swSideTop * HVContrast) top [widths.rhs.heading swMiddle Downward]
			curl (df.middle + 0.5 * swMiddle * HVContrast) middleY [widths.rhs.heading (kMidBotStrokeShrink * swMiddle) Downward]

		local sfT : SerifFrame top 0 xLeftTop  xRightTop
		local sfB : SerifFrame top 0 df.leftSB df.rightSB
		include : match slabType
			[Just SLAB-NONE] : glyph-proc
			[Just SLAB-AUTO] : NeedSlab SLAB
				composite-proc sfT.lt.outer sfT.rt.outer sfB.lb.full sfB.rb.full
			[Just SLAB-MOTION] : composite-proc sfT.lt.outer
			[Just SLAB-SMALL-CYRILLIC] : NeedSlab SLAB
				composite-proc sfT.lt.outer [NeedNotItalic sfT.rt.outer]
					if para.isItalic sfB.lb.outer sfB.lb.full
					if para.isItalic sfB.rb.outer sfB.rb.full

	define MConfig : object
		hanging                             { FORM-HANGING   SLAB-AUTO            false }
		flatBottom                          { FORM-FLAT      SLAB-AUTO            false }
		hangingSmallCyrl                    { FORM-HANGING   SLAB-SMALL-CYRILLIC  false }
		flatBottomSmallCyrl                 { FORM-FLAT      SLAB-SMALL-CYRILLIC  false }
		hangingMotionSerifed                { FORM-HANGING   SLAB-MOTION          false }
		flatBottomMotionSerifed             { FORM-FLAT      SLAB-MOTION          false }
		slantedSidesHanging                 { FORM-HANGING   SLAB-AUTO            true  }
		slantedSidesFlatBottom              { FORM-FLAT      SLAB-AUTO            true  }
		slantedSidesHangingSmallCyrl        { FORM-HANGING   SLAB-SMALL-CYRILLIC  true  }
		slantedSidesFlatBottomSmallCyrl     { FORM-FLAT      SLAB-SMALL-CYRILLIC  true  }
		slantedSidesHangingMotionSerifed    { FORM-HANGING   SLAB-MOTION          true  }
		slantedSidesFlatBottomMotionSerifed { FORM-FLAT      SLAB-MOTION          true  }
		grekCapitalSan                      { FORM-SAN       SLAB-AUTO            false }
		grekSmallSan                        { FORM-SAN-SMALL SLAB-NONE            false }

	foreach { suffix { form slab slanted } } [Object.entries MConfig] : do
		create-glyph "M.\(suffix)" : glyph-proc
			local df : DivFrame para.diversityM 3
			set-width df.width
			include : df.markSet.capital
			include : MShape CAP df form slab slanted

		create-glyph "smcpM.\(suffix)" : glyph-proc
			local df : DivFrame para.diversityM 3
			set-width df.width
			include : df.markSet.e
			include : MShape XH df form slab slanted

		create-glyph "smcpMWithDescender.\(suffix)" : glyph-proc
			local df : DivFrame para.diversityM 3
			set-width df.width
			include : df.markSet.p
			include : MShape XH df form slab slanted

	select-variant 'M' 'M'
	link-reduced-variant 'M/sansSerif' 'M' MathSansSerif
	select-variant 'smcpM' 0x1D0D (follow -- 'M')
	select-variant 'cyrl/em' 0x43C (shapeFrom -- 'smcpM')
	alias 'grek/Mu' 0x39C 'M'
	alias-reduced-variant 'grek/Mu/sansSerif' 'grek/Mu' 'M/sansSerif' MathSansSerif
	alias 'cyrl/Em' 0x41C 'M'

	derive-composites 'cyrl/EmTail' 0x4CD 'cyrl/Em' [CyrTailDescender [DivFrame para.diversityM 3].rightSB]
	derive-composites 'cyrl/emTail' 0x4CE 'cyrl/em' [CyrTailDescender [DivFrame para.diversityM 3].rightSB]

	alias 'grek/San' 0x3FA 'M.grekCapitalSan'
	alias 'grek/san' 0x3FB 'smcpMWithDescender.grekSmallSan'

	glyph-block-import Letter-Blackboard : BBS BBD BBBarRight
	create-glyph 'mathbb/M' 0x1D544 : glyph-proc
		local df : DivFrame 1 3
		local bbs : AdviceStroke 8
		local bbd : BBD * [Math.min (3 / 4) (bbs / BBS)]
		local kDiag : DiagCorDs CAP (df.rightSB - df.leftSB) bbd
		local yTurnPos : CAP * 0.25

		include : MarkSet.capital
		include : VBarLeft df.leftSB 0 CAP bbs
		include : BBBarRight df.rightSB  0 CAP (bbd -- bbd) (bbs -- bbs)
		local xLeft : df.leftSB + 0.5 * bbs * HVContrast
		local xRight : df.rightSB - bbd - 0.5 * bbs * HVContrast
		local xMiddle : mix xLeft xRight 0.5
		include : HBarTop xLeft (xLeft + kDiag * bbd) CAP bbs
		include : intersection
			Rect CAP yTurnPos xLeft xRight
			ExtLineCenter 2 bbs xRight CAP xMiddle yTurnPos
		include : difference
			intersection
				Rect CAP yTurnPos xLeft xRight
				union
					ExtLineCenter 2 bbs xLeft CAP xMiddle yTurnPos
					ExtLineCenter 2 bbs (xLeft + kDiag * bbd) CAP (xMiddle + kDiag * bbd) yTurnPos
			spiro-outline
				corner (Width * 4)  [mix CAP yTurnPos (-1)]
				corner [mix xRight xMiddle (-1)] [mix CAP yTurnPos (-1)]
				corner [mix xRight xMiddle (2)]  [mix CAP yTurnPos (2)]
				corner (Width * 4)  [mix CAP yTurnPos (2)]
