$$include '../../../meta/macros.ptl'

import [mix linreg clamp fallback] from '../../../support/utils'
import [Dotless CvDecompose MathSansSerif] from "../../../support/gr"

glyph-module

glyph-block Letter-Latin-Lower-I : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Letter-Shared : CreateDottedComposition CreateAccentedComposition
	glyph-block-import Letter-Shared-Shapes : FlatHookDepth DiagonalTailR DiagonalTailStdDepth

	glyph-block-export OverrideILMarks
	define [OverrideILMarks df xMiddle yTop] : glyph-proc
		set-base-anchor 'above' xMiddle yTop
		set-base-anchor 'below' xMiddle 0
		set-base-anchor 'overlay' xMiddle (yTop * OverlayPos)
		set-base-anchor 'topright' (xMiddle + df.rightSB - df.middle) yTop

	glyph-block-export OverrideILMarksSerifed
	define [OverrideILMarksSerifed df xMiddle yTop] : glyph-proc
		set-base-anchor 'above' xMiddle yTop
		set-base-anchor 'below' xMiddle 0
		set-base-anchor 'overlay' [mix df.middle xMiddle 0.5] (yTop * OverlayPos)
		set-base-anchor 'topright' (xMiddle + df.rightSB - df.middle) yTop

	### dotless i, i and iota
	glyph-block-export TailedDotlessXMiddle
	define [TailedDotlessXMiddle df addTopSerif] : df.middle - [if addTopSerif 0 : IBalance2 df]

	glyph-block-export IotaShape
	define [IotaShape] : params [df top [addTopSerif false] [setTrailingMark false]] : glyph-proc
		local xMiddle : TailedDotlessXMiddle df addTopSerif
		local tailLength : LongJut * 1.05 * [mix 1 df.div 0.75]
		local hd : FlatHookDepth df

		if addTopSerif : include : tagged 'serifLT'
			LeftwardTopSerif xMiddle top (LongJut * df.div)

		define xFinal : xMiddle + [Math.max (hd.x - HalfStroke * HVContrast + 1) tailLength] + HalfStroke * TanSlope
		include : dispiro
			widths.center
			flat xMiddle top [heading Downward]
			curl xMiddle hd.y
			arcvh.superness DesignParameters.tightHookSuperness
			flat (xMiddle + hd.x - HalfStroke * HVContrast) HalfStroke
			curl xFinal HalfStroke
		include : OverrideILMarks df xMiddle top
		if setTrailingMark : set-base-anchor 'trailing' xFinal 0

	glyph-block-export ItalicDotlessIXMiddle
	define [ItalicDotlessIShift df] : (1 - df.div) * 0.2
	define [ItalicDotlessIXMiddle df] : begin
		return : mix df.leftSB df.rightSB ([StrokeWidthBlend 0.42 0.46] - [ItalicDotlessIShift df])

	glyph-block-export ItalicDotlessIShape
	define [ItalicDotlessIShape] : params [df top [addTopSerif false] [setTrailingMark false]] : glyph-proc
		local fine : AdviceStroke 3
		local shift : ItalicDotlessIShift df
		local xBarMiddle : ItalicDotlessIXMiddle df
		local left : xBarMiddle - HalfStroke * HVContrast
		local right : mix df.leftSB df.rightSB (1.1 - shift)
		local rightTerm : Math.max right (left + HookX + Stroke)
		local middle : mix left right (0.55 * df.div)
		include : dispiro
			widths.lhs
			flat left top [heading Downward]
			curl left (SmallSmoothB * 0.8)
			hookend O
			g4   rightTerm (Hook * [StrokeWidthBlend 0.85 1] * df.div) [widths.lhs fine]
		if addTopSerif : include : dispiro
			flat (left - (LongJut * df.div) + HalfStroke * HVContrast) top [widths 0 Stroke]
			curl left top

		local xDot : xBarMiddle + [StrokeWidthBlend 0.25 0] * TanSlope * df.width
		include : OverrideILMarks df xDot top
		if setTrailingMark : set-base-anchor 'trailing' [mix left rightTerm 0.5] 0

	glyph-block-export TailedDotlessShape
	define [TailedDotlessShape] : params [df top [addTopSerif false] [setTrailingMark false]] : glyph-proc
		local xMiddle : TailedDotlessXMiddle df addTopSerif
		local tailLength : LongJut * 1.05 * [mix 1 df.div 0.75]

		local hookScaleX  : mix 1 df.div 0.5
		local hookScaleY  : mix 1 df.div 1.25
		local x0 : mix HalfStroke (HalfStroke + (Hook - Stroke + 1) * 0.85 * df.div + [IBalance2 df]) hookScaleX
		local x1 : mix HalfStroke ([Math.max (Hook - HalfStroke + 1) tailLength] + [IBalance2 df]) hookScaleX
		include : dispiro
			widths.center
			flat xMiddle top [heading Downward]
			curl xMiddle [mix Stroke Hook hookScaleY]
			arcvh 16
			g4.right.mid (xMiddle + x0) (HalfStroke + O) [heading Rightward]
			g4 (xMiddle + x1) (HalfStroke + (1 - 2 * hookScaleY) * O) [heading Rightward]
		if addTopSerif : begin
			include : tagged 'serifLT' : LeftwardTopSerif xMiddle top (LongJut * df.div)
		include : OverrideILMarks df xMiddle top
		if setTrailingMark : set-base-anchor 'trailing' (xMiddle + x0) 0

	create-glyph 'dotlessi.straight' : glyph-proc
		local df : DivFrame para.diversityI
		set-width df.width
		include : df.markSet.e
		include : VBar df.middle 0 XH
		set-base-anchor 'trailing' df.middle 0

	create-glyph 'dotlessi.hooky' : glyph-proc
		local df : DivFrame para.diversityII
		set-width df.width
		include : df.markSet.e
		local xMiddle : df.middle + [IBalance2 df]
		include : OverrideILMarks df (xMiddle - 0.166 * Stroke * HVContrast) XH
		include : VBar xMiddle 0 XH
		include : LeftwardTopSerif xMiddle XH (LongJut * df.div)
		set-base-anchor 'trailing' xMiddle 0

	create-glyph 'dotlessi.zshaped' : glyph-proc
		local df : DivFrame para.diversityI
		set-width df.width
		include : df.markSet.e
		include : VBar (df.middle) 0 XH
		include : LeftwardTopSerif (df.middle) XH (LongJut * df.div)
		include : RightwardBottomSerif df.middle 0 (LongJut * df.div)
		set-base-anchor 'trailing' (df.middle + LongJut * df.div) 0

	create-glyph 'latn/Iota.zshaped' : glyph-proc
		local df : DivFrame para.diversityI
		set-width df.width
		include : df.markSet.capital
		include : VBar (df.middle) 0 CAP
		include : LeftwardTopSerif (df.middle) CAP (LongJut * df.div)
		include : RightwardBottomSerif df.middle 0 (LongJut * df.div)

	create-glyph 'dotlessi.hookyBottom' : glyph-proc
		local df : DivFrame para.diversityII
		set-width df.width
		include : df.markSet.e
		local xMiddle : df.middle - [IBalance2 df]
		include : OverrideILMarks df xMiddle XH
		include : VBar xMiddle 0 XH
		include : RightwardBottomSerif xMiddle 0 (LongJut * df.div)
		set-base-anchor 'trailing' (xMiddle + LongJut * df.div) 0

	create-glyph 'latn/Iota.hookyBottom' : glyph-proc
		local df : DivFrame para.diversityII
		set-width df.width
		include : df.markSet.capital
		local xMiddle : df.middle - [IBalance2 df]
		include : OverrideILMarks df xMiddle CAP
		include : VBar xMiddle 0 CAP
		include : RightwardBottomSerif xMiddle 0 (LongJut * df.div)

	create-glyph 'dotlessi.serifless' : glyph-proc
		local df : DivFrame para.diversityII
		set-width df.width
		include : df.markSet.e
		include : VBar (df.middle) 0 XH
		set-base-anchor 'trailing' df.middle 0

	create-glyph 'dotlessi.serifed' : glyph-proc
		local df : DivFrame para.diversityI
		set-width df.width
		include : df.markSet.e
		local balance : IBalance df
		include : OverrideILMarksSerifed df df.middle XH
		include : VBar (df.middle + balance) 0 XH
		include : LeftwardTopSerif (df.middle + balance) XH (LongJut * df.div - balance)
		include : RightwardBottomSerif df.middle 0 (LongJut * df.div)
		include : LeftwardBottomSerif df.middle 0 (LongJut * df.div)
		set-base-anchor 'trailing' (df.middle + LongJut * df.div) 0

	create-glyph 'dotlessi.serifedAsymmetric' : glyph-proc
		local df : DivFrame para.diversityI
		set-width df.width
		include : df.markSet.e
		local balance : IBalance df
		include : OverrideILMarksSerifed df df.middle XH
		include : VBar (df.middle + balance) 0 XH
		include : LeftwardTopSerif (df.middle + balance) XH
			mix Jut ((LongJut * df.div) - balance) 0.5
		include : RightwardBottomSerif df.middle 0 (LongJut * df.div)
		include : LeftwardBottomSerif df.middle 0 (LongJut * df.div)
		set-base-anchor 'trailing' (df.middle + LongJut * df.div) 0

	create-glyph 'dotlessi.tailed' : glyph-proc
		local df : DivFrame para.diversityII
		set-width df.width
		include : df.markSet.e
		if (para.isItalic && para.diversityII >= (3 / 4))
		: then : begin
			include : ItalicDotlessIShape df XH (addTopSerif -- false) (setTrailingMark -- true)
		: else : begin
			include : TailedDotlessShape df XH (addTopSerif -- false) (setTrailingMark -- true)

	create-glyph 'grek/iota.tailed' : glyph-proc
		local df : DivFrame para.diversityII
		set-width df.width
		include : df.markSet.e
		include : TailedDotlessShape df XH (addTopSerif -- false)

	create-glyph 'latn/Iota.tailed' : glyph-proc
		local df : DivFrame para.diversityII
		set-width df.width
		include : df.markSet.capital
		include : TailedDotlessShape df CAP (addTopSerif -- false)

	create-glyph 'dotlessi.tailedSerifed' : glyph-proc
		local df : DivFrame para.diversityI
		set-width df.width
		include : df.markSet.e
		if (para.isItalic && para.diversityI >= (3 / 4))
		: then : begin
			include : ItalicDotlessIShape df XH (addTopSerif -- true) (setTrailingMark -- true)
		: else : begin
			include : TailedDotlessShape df XH (addTopSerif -- true) (setTrailingMark -- true)

	create-glyph 'grek/iota.tailedSerifed' : glyph-proc
		local df : DivFrame para.diversityI
		set-width df.width
		include : df.markSet.e
		include : TailedDotlessShape df XH (addTopSerif -- true)

	create-glyph 'latn/Iota.tailedSerifed' : glyph-proc
		local df : DivFrame para.diversityI
		set-width df.width
		include : df.markSet.capital
		include : TailedDotlessShape df CAP (addTopSerif -- true)

	create-glyph 'dotlessi.flatTailed' : glyph-proc
		local df : DivFrame para.diversityII
		set-width df.width
		include : df.markSet.e
		include : IotaShape df XH (addTopSerif -- false) (setTrailingMark -- true)

	create-glyph 'latn/Iota.flatTailed' : glyph-proc
		local df : DivFrame para.diversityII
		set-width df.width
		include : df.markSet.capital
		include : IotaShape df CAP (addTopSerif -- false)

	create-glyph 'dotlessi.serifedFlatTailed' : glyph-proc
		local df : DivFrame para.diversityI
		set-width df.width
		include : df.markSet.e
		include : IotaShape df XH (addTopSerif -- true) (setTrailingMark -- true)

	create-glyph 'latn/Iota.serifedFlatTailed' : glyph-proc
		local df : DivFrame para.diversityI
		set-width df.width
		include : df.markSet.capital
		include : IotaShape df CAP (addTopSerif -- true)

	glyph-block-export DTailDotlessIShape
	define [DTailDotlessIShape] : params [df top [addTopSerif false] [setTrailingMark false]] : glyph-proc
		local xMiddle : df.middle - [if addTopSerif 0 : IBalance2 df]
		include : OverrideILMarks df xMiddle top
		if addTopSerif : include : tagged 'serifLT'
			LeftwardTopSerif xMiddle top (LongJut * df.div)
		include : dispiro
			widths.center
			flat xMiddle top [heading Downward]
			DiagonalTailR df xMiddle 0 [DiagonalTailStdDepth df Stroke] Stroke
		if setTrailingMark : set-base-anchor 'trailing' (xMiddle + HalfStroke * HVContrast) 0

	create-glyph 'dotlessi.diagonalTailed' : glyph-proc
		local df : DivFrame para.diversityII
		set-width df.width
		include : df.markSet.e
		include : DTailDotlessIShape df XH (addTopSerif -- false) (setTrailingMark -- true)

	create-glyph 'dotlessi.serifedDiagonalTailed' : glyph-proc
		local df : DivFrame para.diversityI
		set-width df.width
		include : df.markSet.e
		include : DTailDotlessIShape df XH (addTopSerif -- true) (setTrailingMark -- true)

	select-variant 'dotlessi' 0x131
	link-reduced-variant 'dotlessi/sansSerif' 'dotlessi' MathSansSerif
	select-variant 'dotlessi/compLigRight' (shapeFrom -- 'dotlessi')
	create-glyph 'iogonek.dotless' : glyph-proc
		include [refer-glyph 'dotlessi'] AS_BASE
		include : refer-glyph "ogonekBelow"

	CreateDottedComposition 'dotlessi' 'i' 'i'
	CreateDottedComposition 'dotlessi/sansSerif' 'i/sansSerif' null
	CreateDottedComposition 'dotlessi' 'cyrl/Ukrainiani' 0x456
	CreateDottedComposition 'dotlessi/compLigRight' 'i/compLigRight' null
	link-reduced-variant 'i/sansSerif' 'i' MathSansSerif

	alias 'grek/iota.flatTailed' null 'dotlessi.flatTailed'
	alias 'grek/iota.serifedFlatTailed' null 'dotlessi.serifedFlatTailed'
	alias 'grek/iota.zshaped' null 'dotlessi.zshaped'
	alias 'grek/iota.hookyBottom' null 'dotlessi.hookyBottom'

	select-variant 'grek/iota' 0x3B9
	alias 'latn/iota' 0x269 'grek/iota'
	select-variant 'latn/Iota' 0x196 (follow -- 'grek/iota')

	turned 'turni' 0x1D09 'i' HalfAdvance (XH / 2) [TurnMarks 'p']

	derive-glyphs 'cyrl/ghe.SRB' null 'dotlessi' : lambda [src sel] : glyph-proc
		include [refer-glyph src] AS_BASE ALSO_METRICS
		include : refer-glyph "macronAbove"

	glyph-block-import Letter-Blackboard : BBS BBD BBBarCenter
	create-glyph 'mathbb/dotlessi' : glyph-proc
		include : MarkSet.e
		include : BBBarCenter Middle 0 XH
		include : HBarTop    (Middle - BBD / 2 - Jut) Middle                   XH BBS
		include : HBarBottom (Middle - BBD / 2 - Jut) (Middle + BBD / 2 + Jut) 0   BBS

	create-glyph 'mathbb/i' 0x1D55A : glyph-proc
		include [refer-glyph 'mathbb/dotlessi'] AS_BASE ALSO_METRICS
		include [refer-glyph 'mathbb/dotAbove']
		Dotless.set currentGlyph 'mathbb/dotlessi'

	CreateAccentedComposition 'dotlessiBarOver' null 'dotlessi' 'barOver'
	CreateDottedComposition 'dotlessiBarOver' 'iBarOver' 0x268
