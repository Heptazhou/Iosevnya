$$include '../../meta/macros.ptl'

import [mix linreg clamp fallback] from "@iosevka/util"
import [IsSuperscript IsSubscript] from "@iosevka/glyph/relation"

glyph-module

glyph-block Letter-Latin-Rhotic : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Mark-Shared-Metrics : markFine

	glyph-block-export ErTail
	define [ErTail left y rise w dohook] : glyph-proc
		local right Width
		local mid : mix left right 0.5
		local sw : fallback w [AdviceStroke 5]
		include : dispiro
			widths.rhs sw
			g2 (left - [HSwToV : 0.5 * sw]) (y)
			g2 (mid - [HSwToV : 0.5 * sw]) (y + rise)
		include : dispiro
			widths.center sw
			flat mid (y + rise) [heading Downward]
			curl mid (y + [if dohook 0 (rise - 1)]) [heading Downward]
			if dohook {[hookend (y - rise)]} {[arcvh]}
			g4 (right - [if dohook sw 0]) (y - [if dohook (rise * 0.5) rise]) [if dohook nothing [heading Rightward]]

	create-glyph 'rhoticHook' 0x2DE : glyph-proc
		include : ErTail (-[HSwToV Stroke]) (XH / 2) (XH * 0.3) Stroke true

	create-glyph 'rhoticHook/sup' : glyph-proc
		local sw : [AdviceStroke 3.5] / 0.7
		include : ErTail (-[HSwToV Stroke] - 3 * SB) (XH / 2) (XH * 0.3) sw true
		include : Ungizmo
		include : Translate (-Middle) (-CAP)
		include : Scale 0.7
		include : Translate (Middle) (CAP + AccentStackOffset / 2)
		include : Regizmo

		IsSuperscript.set currentGlyph

	create-glyph 'rhoticHook/sub' : glyph-proc
		include [refer-glyph 'rhoticHook/sup'] AS_BASE ALSO_METRICS
		include : ApparentTranslate 0 ((Descender / 2) - (CAP + AccentStackOffset / 2) + 0.7 * CAP)

		IsSubscript.set currentGlyph
