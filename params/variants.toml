# Variants
[prime.capital-a]
sampler = "A"
tag = "cv01"

[prime.capital-a.variants.straight-serifless]
rank = 1
description = "Standard, straight `A`, without serifs"
selector.A  = "straightSerifless"
selector."A/sansSerif"  = "straightSerifless"
selector.AE = "straight"

[prime.capital-a.variants.curly-serifless]
rank = 2
description = "Slightly curly `A`, like Iosevka 2.x, without serifs"
selector.A  = "curlySerifless"
selector."A/sansSerif"  = "curlySerifless"
selector.AE = "curly"

[prime.capital-a.variants.straight-top-serifed]
rank = 3
description = "Straight `A` with serif at top"
selector.A  = "straightTopSerifed"
selector."A/sansSerif"  = "straightSerifless"
selector.AE = "straight"

[prime.capital-a.variants.curly-top-serifed]
rank = 4
description = "Slightly curly `A`, like Iosevka 2.x, with serif at top"
selector.A  = "curlyTopSerifed"
selector."A/sansSerif"  = "curlySerifless"
selector.AE = "curly"

[prime.capital-a.variants.straight-base-serifed]
rank = 5
description = "Straight `A` with serif at both top and bottom"
selector.A  = "straightBaseSerifed"
selector."A/sansSerif"  = "straightSerifless"
selector.AE = "straight"

[prime.capital-a.variants.curly-base-serifed]
rank = 6
description = "Slightly curly `A`, like Iosevka 2.x, with serif at both top and bottom"
selector.A  = "curlyBaseSerifed"
selector."A/sansSerif"  = "curlySerifless"
selector.AE = "curly"

[prime.capital-a.variants.straight-tri-serifed]
rank = 7
description = "Straight `A` with serif at both top and bottom"
selector.A  = "straightTriSerifed"
selector."A/sansSerif"  = "straightSerifless"
selector.AE = "straight"

[prime.capital-a.variants.curly-tri-serifed]
rank = 8
description = "Slightly curly `A`, like Iosevka 2.x, with serif at both top and bottom"
selector.A  = "curlyTriSerifed"
selector."A/sansSerif"  = "curlySerifless"
selector.AE = "curly"



[prime.capital-b]
sampler = "B"
tag = "cv02"

[prime.capital-b.variants.standard-serifless]
rank = 1
description = "`B` in near-symmetric proportion, without serifs"
selector.B = "standardSerifless"
selector."B/sansSerif" = "standardSerifless"
selector.smcpB = "standardSerifless"

[prime.capital-b.variants.more-asymmetric-serifless]
rank = 2
description = "`B` in more asymmetric proportion to differentiate with `8`, without serifs"
selector.B = "moreAsymmetricSerifless"
selector."B/sansSerif" = "moreAsymmetricSerifless"
selector.smcpB = "standardSerifless"

[prime.capital-b.variants.standard-unilateral-serifed]
rank = 3
description = "`B` in near-symmetric proportion with motion serifs at top"
selector.B = "standardUnilateralSerifed"
selector."B/sansSerif" = "standardSerifless"
selector.smcpB = "standardUnilateralSerifed"

[prime.capital-b.variants.more-asymmetric-unilateral-serifed]
rank = 4
description = "`B` in more asymmetric proportion with motion serifs at top"
selector.B = "moreAsymmetricUnilateralSerifed"
selector."B/sansSerif" = "moreAsymmetricSerifless"
selector.smcpB = "standardUnilateralSerifed"

[prime.capital-b.variants.standard-bilateral-serifed]
rank = 5
description = "`B` in near-symmetric proportion with motion serifs at both top and bottom"
selector.B = "standardBilateralSerifed"
selector."B/sansSerif" = "standardSerifless"
selector.smcpB = "standardBilateralSerifed"

[prime.capital-b.variants.more-asymmetric-bilateral-serifed]
rank = 6
description = "`B` in more asymmetric proportion with motion serifs at both top and bottom"
selector.B = "moreAsymmetricBilateralSerifed"
selector."B/sansSerif" = "moreAsymmetricSerifless"
selector.smcpB = "standardBilateralSerifed"

[prime.capital-b.variants.standard-interrupted-serifless]
rank = 7
description = "`B` in near-symmetric proportion with interrupted middle bar, without serifs"
selector.B = "standardInterruptedSerifless"
selector."B/sansSerif" = "standardInterruptedSerifless"
selector.smcpB = "standardInterruptedSerifless"

[prime.capital-b.variants.more-asymmetric-interrupted-serifless]
rank = 8
description = "`B` in more asymmetric proportion to differentiate with `8`, with interrupted middle bar, without serifs"
selector.B = "moreAsymmetricInterruptedSerifless"
selector."B/sansSerif" = "moreAsymmetricInterruptedSerifless"
selector.smcpB = "standardInterruptedSerifless"

[prime.capital-b.variants.standard-interrupted-unilateral-serifed]
rank = 9
description = "`B` in near-symmetric proportion with interrupted middle bar and motion serifs at top"
selector.B = "standardInterruptedUnilateralSerifed"
selector."B/sansSerif" = "standardInterruptedSerifless"
selector.smcpB = "standardInterruptedUnilateralSerifed"

[prime.capital-b.variants.more-asymmetric-interrupted-unilateral-serifed]
rank = 10
description = "`B` in more asymmetric proportion with interrupted middle bar and `8` with motion serifs at top"
selector.B = "moreAsymmetricInterruptedUnilateralSerifed"
selector."B/sansSerif" = "moreAsymmetricInterruptedSerifless"
selector.smcpB = "standardInterruptedUnilateralSerifed"

[prime.capital-b.variants.standard-interrupted-bilateral-serifed]
rank = 11
description = "`B` in near-symmetric proportion with interrupted middle bar and motion serifs at both top and bottom"
selector.B = "standardInterruptedBilateralSerifed"
selector."B/sansSerif" = "standardInterruptedSerifless"
selector.smcpB = "standardInterruptedBilateralSerifed"

[prime.capital-b.variants.more-asymmetric-interrupted-bilateral-serifed]
rank = 12
description = "`B` in more asymmetric proportion with interrupted middle bar and `8` with motion serifs at both top and bottom"
selector.B = "moreAsymmetricInterruptedBilateralSerifed"
selector."B/sansSerif" = "moreAsymmetricInterruptedSerifless"
selector.smcpB = "standardInterruptedBilateralSerifed"



[prime.capital-c]
sampler = "C"
tag = "cv03"

[prime.capital-c.variants.serifless]
rank = 1
description = "Serifless `C`"
selector.C = "serifless"
selector."C/sansSerif" = "serifless"
selector.CHookTop = "unilateralSerifed"
selector.romanSixLateForm = "unilateralSerifed"
selector.CTopSerifOnly = "serifless"

[prime.capital-c.variants.unilateral-serifed]
rank = 2
description = "`C` with serif at top"
selector.C = "unilateralSerifed"
selector."C/sansSerif" = "serifless"
selector.CHookTop = "unilateralSerifed"
selector.romanSixLateForm = "bilateralSerifed"
selector.CTopSerifOnly = "unilateralSerifed"

[prime.capital-c.variants.bilateral-serifed]
rank = 3
description = "`C` with serifs at both top and bottom"
selector.C = "bilateralSerifed"
selector."C/sansSerif" = "serifless"
selector.CHookTop = "bilateralSerifed"
selector.romanSixLateForm = "bilateralSerifed"
selector.CTopSerifOnly = "unilateralSerifed"

[prime.capital-c.variants.unilateral-inward-serifed]
rank = 4
description = "`C` with inward serif at top"
selector.C = "unilateralInwardSerifed"
selector."C/sansSerif" = "serifless"
selector.CHookTop = "unilateralInwardSerifed"
selector.romanSixLateForm = "bilateralInwardSerifed"
selector.CTopSerifOnly = "unilateralInwardSerifed"

[prime.capital-c.variants.bilateral-inward-serifed]
rank = 5
description = "`C` with inward serif at both top and bottom"
selector.C = "bilateralInwardSerifed"
selector."C/sansSerif" = "serifless"
selector.CHookTop = "bilateralInwardSerifed"
selector.romanSixLateForm = "bilateralInwardSerifed"
selector.CTopSerifOnly = "unilateralInwardSerifed"


[prime.capital-d]
sampler = "D"
tag = "cv04"

[prime.capital-d.variants.standard-serifless]
rank = 1
description = "Standard `D` without serifs"
selector.D = "standardSerifless"
selector."D/sansSerif" = "standardSerifless"

[prime.capital-d.variants.more-rounded-serifless]
rank = 2
description = "More rounded `D` to differentiate with `O`, without serifs"
selector.D = "moreRoundedSerifless"
selector."D/sansSerif" = "moreRoundedSerifless"

[prime.capital-d.variants.standard-unilateral-serifed]
rank = 3
description = "Standard `D` with serifs at top"
selector.D = "standardUnilateralSerifed"
selector."D/sansSerif" = "standardSerifless"

[prime.capital-d.variants.more-rounded-unilateral-serifed]
rank = 4
description = "More rounded `D` to differentiate with `O` with motion serifs at top"
selector.D = "moreRoundedUnilateralSerifed"
selector."D/sansSerif" = "moreRoundedSerifless"

[prime.capital-d.variants.standard-bilateral-serifed]
rank = 5
description = "Standard `D` with serifs at both top and bottom"
selector.D = "standardBilateralSerifed"
selector."D/sansSerif" = "standardSerifless"

[prime.capital-d.variants.more-rounded-bilateral-serifed]
rank = 6
description = "More rounded `D` to differentiate with `O` with serifs at both top and bottom"
selector.D = "moreRoundedBilateralSerifed"
selector."D/sansSerif" = "moreRoundedSerifless"



[prime.capital-e]
sampler = "E"
tag = "cv05"

[prime.capital-e.variants.serifless]
rank = 1
description = "E without serifs"
selector.E = "serifless"
selector."E/sansSerif" = "serifless"
selector."AE/EHalf" = "serifless"

[prime.capital-e.variants.top-left-serifed]
rank = 2
description = "E with serif only at top left"
selector.E = "topLeftSerifed"
selector."E/sansSerif" = "serifless"
selector."AE/EHalf" = "serifless"

[prime.capital-e.variants.serifed]
rank = 3
description = "E with serifs"
selector.E = "serifed"
selector."E/sansSerif" = "serifless"
selector."AE/EHalf" = "serifed"



[prime.capital-f]
sampler = "F"
tag = "cv06"

[prime.capital-f.variants.serifless]
rank = 1
description = "F without serifs"
selector.F = "serifless"
selector."F/sansSerif" = "serifless"

[prime.capital-f.variants.top-left-serifed]
rank = 2
description = "F with serif only at top left"
selector.F = "topLeftSerifed"
selector."F/sansSerif" = "serifless"

[prime.capital-f.variants.serifed]
rank = 3
description = "F with serifs"
selector.F = "serifed"
selector."F/sansSerif" = "serifless"



[prime.capital-g]
sampler = "G"
tag = "cv07"

[prime.capital-g.variants.toothed-serifless-hookless]
rank = 1
description = "Toothed G"
selector.G = "toothedSeriflessHookless"
selector."G/sansSerif" = "toothedSeriflessHookless"
selector.GHookTop = "toothedSeriflessHookless"

[prime.capital-g.variants.toothless-corner-serifless-hookless]
rank = 2
description = "Corner toothless G"
selector.G = "toothlessCornerSeriflessHookless"
selector."G/sansSerif" = "toothlessCornerSeriflessHookless"
selector.GHookTop = "toothlessCornerSeriflessHookless"

[prime.capital-g.variants.toothless-rounded-serifless-hookless]
rank = 3
description = "Round toothless G"
selector.G = "toothlessRoundedSeriflessHookless"
selector."G/sansSerif" = "toothlessRoundedSeriflessHookless"
selector.GHookTop = "toothlessRoundedSeriflessHookless"

[prime.capital-g.variants.toothed-serifless-hooked]
rank = 4
description = "Toothed G with inward hook at terminal"
selector.G = "toothedSeriflessHooked"
selector."G/sansSerif" = "toothedSeriflessHooked"
selector.GHookTop = "toothedSeriflessHooked"

[prime.capital-g.variants.toothless-corner-serifless-hooked]
rank = 5
description = "Corner toothless G with inward hook at terminal"
selector.G = "toothlessCornerSeriflessHooked"
selector."G/sansSerif" = "toothlessCornerSeriflessHooked"
selector.GHookTop = "toothlessCornerSeriflessHooked"

[prime.capital-g.variants.toothless-rounded-serifless-hooked]
rank = 6
description = "Round toothless G with inward hook at terminal"
selector.G = "toothlessRoundedSeriflessHooked"
selector."G/sansSerif" = "toothlessRoundedSeriflessHooked"
selector.GHookTop = "toothlessRoundedSeriflessHooked"

[prime.capital-g.variants.toothed-serifless-capped]
rank = 7
description = "Toothed G with a cap terminal"
selector.G = "toothedSeriflessCapped"
selector."G/sansSerif" = "toothedSeriflessCapped"
selector.GHookTop = "toothedSeriflessCapped"

[prime.capital-g.variants.toothless-corner-serifless-capped]
rank = 8
description = "Corner toothless G with a cap terminal"
selector.G = "toothlessCornerSeriflessCapped"
selector."G/sansSerif" = "toothlessCornerSeriflessCapped"
selector.GHookTop = "toothlessCornerSeriflessCapped"

[prime.capital-g.variants.toothless-rounded-serifless-capped]
rank = 9
description = "Round toothless G with a cap terminal"
selector.G = "toothlessRoundedSeriflessCapped"
selector."G/sansSerif" = "toothlessRoundedSeriflessCapped"
selector.GHookTop = "toothlessRoundedSeriflessCapped"

[prime.capital-g.variants.toothed-serifed-hookless]
rank = 10
description = "Toothed G with top serif"
selector.G = "toothedSerifedHookless"
selector."G/sansSerif" = "toothedSeriflessHookless"
selector.GHookTop = "toothedSeriflessHookless"

[prime.capital-g.variants.toothless-corner-serifed-hookless]
rank = 11
description = "Corner toothless G with top serif"
selector.G = "toothlessCornerSerifedHookless"
selector."G/sansSerif" = "toothlessCornerSeriflessHookless"
selector.GHookTop = "toothlessCornerSeriflessHookless"

[prime.capital-g.variants.toothless-rounded-serifed-hookless]
rank = 12
description = "Round toothless G with top serif"
selector.G = "toothlessRoundedSerifedHookless"
selector."G/sansSerif" = "toothlessRoundedSeriflessHookless"
selector.GHookTop = "toothlessRoundedSeriflessHookless"

[prime.capital-g.variants.toothed-serifed-hooked]
rank = 13
description = "Toothed G with inward hook at terminal and top serif"
selector.G = "toothedSerifedHooked"
selector."G/sansSerif" = "toothedSeriflessHooked"
selector.GHookTop = "toothedSeriflessHooked"

[prime.capital-g.variants.toothless-corner-serifed-hooked]
rank = 14
description = "Corner toothless G with inward hook at terminal and top serif"
selector.G = "toothlessCornerSerifedHooked"
selector."G/sansSerif" = "toothlessCornerSeriflessHooked"
selector.GHookTop = "toothlessCornerSeriflessHooked"

[prime.capital-g.variants.toothless-rounded-serifed-hooked]
rank = 15
description = "Round toothless G with inward hook at terminal and top serif"
selector.G = "toothlessRoundedSerifedHooked"
selector."G/sansSerif" = "toothlessRoundedSeriflessHooked"
selector.GHookTop = "toothlessRoundedSeriflessHooked"

[prime.capital-g.variants.toothed-serifed-capped]
rank = 16
description = "Toothed G with a cap terminal and top serif"
selector.G = "toothedSerifedCapped"
selector."G/sansSerif" = "toothedSeriflessCapped"
selector.GHookTop = "toothedSeriflessCapped"

[prime.capital-g.variants.toothless-corner-serifed-capped]
rank = 17
description = "Corner toothless G with a cap terminal and top serif"
selector.G = "toothlessCornerSerifedCapped"
selector."G/sansSerif" = "toothlessCornerSeriflessCapped"
selector.GHookTop = "toothlessCornerSeriflessCapped"

[prime.capital-g.variants.toothless-rounded-serifed-capped]
rank = 18
description = "Round toothless G with a cap terminal and top serif"
selector.G = "toothlessRoundedSerifedCapped"
selector."G/sansSerif" = "toothlessRoundedSeriflessCapped"
selector.GHookTop = "toothlessRoundedSeriflessCapped"

[prime.capital-g.variants.toothed-inward-serifed-hookless]
rank = 19
description = "Toothed G with inward top serif"
selector.G = "toothedInwardSerifedHookless"
selector."G/sansSerif" = "toothedSeriflessHookless"
selector.GHookTop = "toothedSeriflessHookless"

[prime.capital-g.variants.toothless-corner-inward-serifed-hookless]
rank = 20
description = "Corner toothless G with inward top serif"
selector.G = "toothlessCornerInwardSerifedHookless"
selector."G/sansSerif" = "toothlessCornerSeriflessHookless"
selector.GHookTop = "toothlessCornerSeriflessHookless"

[prime.capital-g.variants.toothless-rounded-inward-serifed-hookless]
rank = 21
description = "Round toothless G with inward top serif"
selector.G = "toothlessRoundedInwardSerifedHookless"
selector."G/sansSerif" = "toothlessRoundedSeriflessHookless"
selector.GHookTop = "toothlessRoundedSeriflessHookless"

[prime.capital-g.variants.toothed-inward-serifed-hooked]
rank = 22
description = "Toothed G with inward hook at terminal and inward top serif"
selector.G = "toothedInwardSerifedHooked"
selector."G/sansSerif" = "toothedSeriflessHooked"
selector.GHookTop = "toothedSeriflessHooked"

[prime.capital-g.variants.toothless-corner-inward-serifed-hooked]
rank = 23
description = "Corner toothless G with inward hook at terminal and inward top serif"
selector.G = "toothlessCornerInwardSerifedHooked"
selector."G/sansSerif" = "toothlessCornerSeriflessHooked"
selector.GHookTop = "toothlessCornerSeriflessHooked"

[prime.capital-g.variants.toothless-rounded-inward-serifed-hooked]
rank = 24
description = "Round toothless G with inward hook at terminal and inward top serif"
selector.G = "toothlessRoundedInwardSerifedHooked"
selector."G/sansSerif" = "toothlessRoundedSeriflessHooked"
selector.GHookTop = "toothlessRoundedSeriflessHooked"

[prime.capital-g.variants.toothed-inward-serifed-capped]
rank = 25
description = "Toothed G with a cap terminal and inward top serif"
selector.G = "toothedInwardSerifedCapped"
selector."G/sansSerif" = "toothedSeriflessCapped"
selector.GHookTop = "toothedSeriflessCapped"

[prime.capital-g.variants.toothless-corner-inward-serifed-capped]
rank = 26
description = "Corner toothless G with a cap terminal and inward top serif"
selector.G = "toothlessCornerInwardSerifedCapped"
selector."G/sansSerif" = "toothlessCornerSeriflessCapped"
selector.GHookTop = "toothlessCornerSeriflessCapped"

[prime.capital-g.variants.toothless-rounded-inward-serifed-capped]
rank = 27
description = "Round toothless G with a cap terminal and inward top serif"
selector.G = "toothlessRoundedInwardSerifedCapped"
selector."G/sansSerif" = "toothlessRoundedSeriflessCapped"
selector.GHookTop = "toothlessRoundedSeriflessCapped"



[prime.capital-h]
sampler = "H"
tag = "cv08"

[prime.capital-h.variants.serifless]
rank = 1
description = "H without serifs"
selector.H = "serifless"
selector.halfH = "serifless"
selector."H/sansSerif" = "serifless"
selector.Hwair = "serifless"
selector."cyrl/Nje/leftHalf" = "serifless"

[prime.capital-h.variants.top-left-serifed]
rank = 2
description = "H with serif only at top left"
selector.H = "topLeftSerifed"
selector.halfH = "topLeftSerifed"
selector."H/sansSerif" = "serifless"
selector.Hwair = "topLeftSerifed"
selector."cyrl/Nje/leftHalf" = "topLeftSerifed"

[prime.capital-h.variants.top-left-bottom-right-serifed]
rank = 3
description = "H with serif only at top left and bottom right"
selector.H = "topLeftBottomRightSerifed"
selector.halfH = "topLeftSerifed"
selector."H/sansSerif" = "serifless"
selector.Hwair = "topLeftSerifed"
selector."cyrl/Nje/leftHalf" = "topLeftSerifed"

[prime.capital-h.variants.serifed]
rank = 4
description = "H with serifs"
selector.H = "serifed"
selector.halfH = "serifed"
selector."H/sansSerif" = "serifless"
selector.Hwair = "serifedExceptBottomRight"
selector."cyrl/Nje/leftHalf" = "serifed"



[prime.capital-i]
sampler = "I"
tag = "cv09"

[prime.capital-i.variants.serifed]
rank = 1
description = "I with standard (long) serifs"
selector.I = "serifed"
selector."I/sansSerif" = "serifless"

[prime.capital-i.variants.serifless]
rank = 2
description = "I without serifs, like a straight bar"
selector.I = "serifless"
selector."I/sansSerif" = "serifless"

[prime.capital-i.variants.short-serifed]
rank = 3
description = "I with short serifs"
selector.I = "shortSerifed"
selector."I/sansSerif" = "serifless"



[prime.capital-j]
sampler = "J"
tag = "cv10"

[prime.capital-j.variants.serifless]
rank = 1
description = "J without top serif"
selector.J = "serifless"
selector."J/noDescend" = "serifless"
selector."J/sansSerif" = "serifless"

[prime.capital-j.variants.serifed]
rank = 2
description = "J with top serif at left side"
selector.J = "serifed"
selector."J/noDescend" = "serifed"
selector."J/sansSerif" = "serifless"

[prime.capital-j.variants.serifed-both-sides]
rank = 3
description = "J with top serif at both sides (asymmetric)"
selector.J = "serifedBothSides"
selector."J/noDescend" = "serifedBothSides"
selector."J/sansSerif" = "serifless"

[prime.capital-j.variants.serifed-symmetric]
rank = 4
description = "J with top serif at both sides (symmetric)"
selector.J = "serifedSymmetric"
selector."J/noDescend" = "serifedSymmetric"
selector."J/sansSerif" = "serifless"

[prime.capital-j.variants.flat-hook-serifless]
rank = 5
description = "J with flat hook and without top serif"
selector.J  = "flatHookSerifless"
selector."J/noDescend"  = "flatHookSerifless"
selector."J/sansSerif"  = "flatHookSerifless"

[prime.capital-j.variants.flat-hook-serifed]
rank = 6
description = "J with flat hook and top serif at left side"
selector.J  = "flatHookSerifed"
selector."J/noDescend"  = "flatHookSerifed"
selector."J/sansSerif"  = "flatHookSerifless"

[prime.capital-j.variants.flat-hook-serifed-both-sides]
rank = 7
description = "J with flat hook and top serif at both sides (asymmetric)"
selector.J  = "flatHookSeriflessBothSides"
selector."J/noDescend"  = "flatHookSeriflessBothSides"
selector."J/sansSerif"  = "flatHookSerifless"

[prime.capital-j.variants.flat-hook-serifed-symmetric]
rank = 8
description = "J with flat hook and top serif at both sides (symmetric)"
selector.J  = "flatHookSerifedSymmetric"
selector."J/noDescend"  = "flatHookSerifedSymmetric"
selector."J/sansSerif"  = "flatHookSerifless"

[prime.capital-j.variants.descending-serifless]
rank = 9
description = "J with hook goes below descender and without serif"
selector.J  = "descendingSerifless"
selector."J/noDescend"  = "serifless"
selector."J/sansSerif"  = "descendingSerifless"

[prime.capital-j.variants.descending-serifed]
rank = 10
description = "J with hook goes below descender and top serif at left side"
selector.J  = "descendingSerifed"
selector."J/noDescend"  = "serifed"
selector."J/sansSerif"  = "descendingSerifless"

[prime.capital-j.variants.descending-serifed-both-sides]
rank = 11
description = "J with hook goes below descender and top serif at both sides (asymmetric)"
selector.J  = "descendingSerifedBothSides"
selector."J/noDescend"  = "serifedBothSides"
selector."J/sansSerif"  = "descendingSerifless"

[prime.capital-j.variants.descending-serifed-symmetric]
rank = 12
description = "J with hook goes below descender and top serif at both sides (symmetric)"
selector.J  = "descendingSerifedSymmetric"
selector."J/noDescend"  = "serifedSymmetric"
selector."J/sansSerif"  = "descendingSerifless"

[prime.capital-j.variants.descending-flat-hook-serifless]
rank = 13
description = "J with flat hook goes below descender and without serif"
selector.J  = "descendingFlatHookSerifless"
selector."J/noDescend"  = "flatHookSerifless"
selector."J/sansSerif"  = "descendingFlatHookSerifless"

[prime.capital-j.variants.descending-flat-hook-serifed]
rank = 14
description = "J with flat hook goes below descender and top serif at left side"
selector.J  = "descendingFlatHookSerifed"
selector."J/noDescend"  = "flatHookSerifed"
selector."J/sansSerif"  = "descendingFlatHookSerifless"



[prime.capital-k]
sampler = "K"
tag = "cv11"

[prime.capital-k.variants.straight-serifless]
rank = 1
description = "`K` with standard shape, without serifs"
selector.K = "straightSerifless"
selector."K/sansSerif" = "straightSerifless"
selector."grek/KaiSymbol" = "straightSerifless"
selector."grek/kappa" = "straightSerifless"
selector.KDescender = "straightSerifless"

[prime.capital-k.variants.curly-serifless]
rank = 2
description = "Slightly curly `K`, like Iosevka 2.x, without serifs"
selector.K = "curlySerifless"
selector."K/sansSerif" = "curlySerifless"
selector."grek/KaiSymbol" = "curlySerifless"
selector."grek/kappa" = "curlySerifless"
selector.KDescender = "curlySerifless"

[prime.capital-k.variants.symmetric-touching-serifless]
rank = 3
description = "`K` with symmetric legs disconnected to the vertical bar, without serifs"
selector.K = "symmetricTouchingSerifless"
selector."K/sansSerif" = "symmetricTouchingSerifless"
selector."grek/KaiSymbol" = "symmetricTouchingSerifless"
selector."grek/kappa" = "symmetricTouchingSerifless"
selector.KDescender = "symmetricTouchingSerifless"

[prime.capital-k.variants.symmetric-connected-serifless]
rank = 4
description = "`K` with symmetric legs connected to the vertical bar, without serifs"
selector.K = "symmetricConnectedSerifless"
selector."K/sansSerif" = "symmetricConnectedSerifless"
selector."grek/KaiSymbol" = "symmetricConnectedSerifless"
selector."grek/kappa" = "symmetricConnectedSerifless"
selector.KDescender = "symmetricConnectedSerifless"

[prime.capital-k.variants.straight-top-left-serifed]
rank = 5
description = "`K` with standard shape and serifs at top left"
selector.K = "straightTopLeftSerifed"
selector."K/sansSerif" = "straightSerifless"
selector."grek/KaiSymbol" = "straightTopLeftSerifed"
selector."grek/kappa" = "straightSerifless"
selector.KDescender = "straightTopLeftSerifed"

[prime.capital-k.variants.curly-top-left-serifed]
rank = 6
description = "Slightly curly `K`, like Iosevka 2.x, with serifs at top left"
selector.K = "curlyTopLeftSerifed"
selector."K/sansSerif" = "curlySerifless"
selector."grek/KaiSymbol" = "curlyTopLeftSerifed"
selector."grek/kappa" = "curlySerifless"
selector.KDescender = "curlyTopLeftSerifed"

[prime.capital-k.variants.symmetric-touching-top-left-serifed]
rank = 7
description = "`K` with symmetric legs disconnected to the vertical bar, and serifs at top left"
selector.K = "symmetricTouchingTopLeftSerifed"
selector."K/sansSerif" = "symmetricTouchingSerifless"
selector."grek/KaiSymbol" = "symmetricTouchingTopLeftSerifed"
selector."grek/kappa" = "symmetricTouchingSerifless"
selector.KDescender = "symmetricTouchingTopLeftSerifed"

[prime.capital-k.variants.symmetric-connected-top-left-serifed]
rank = 8
description = "`K` with symmetric legs connected to the vertical bar, and serifs at top left"
selector.K = "symmetricConnectedTopLeftSerifed"
selector."K/sansSerif" = "symmetricConnectedSerifless"
selector."grek/KaiSymbol" = "symmetricConnectedTopLeftSerifed"
selector."grek/kappa" = "symmetricConnectedSerifless"
selector.KDescender = "symmetricConnectedTopLeftSerifed"

[prime.capital-k.variants.straight-bottom-right-serifed]
rank = 9
description = "`K` with standard shape and serifs at bottom right"
selector.K = "straightBottomRightSerifed"
selector."K/sansSerif" = "straightSerifless"
selector."grek/KaiSymbol" = "straightBottomRightSerifed2"
selector."grek/kappa" = "straightSerifless"
selector.KDescender = "straightBottomRightSerifed"

[prime.capital-k.variants.curly-bottom-right-serifed]
rank = 10
description = "Slightly curly `K`, like Iosevka 2.x, with serifs at bottom right"
selector.K = "curlyBottomRightSerifed"
selector."K/sansSerif" = "curlySerifless"
selector."grek/KaiSymbol" = "curlyBottomRightSerifed2"
selector."grek/kappa" = "curlySerifless"
selector.KDescender = "curlyBottomRightSerifed"

[prime.capital-k.variants.symmetric-touching-bottom-right-serifed]
rank = 11
description = "`K` with symmetric legs disconnected to the vertical bar, and serifs at bottom right"
selector.K = "symmetricTouchingBottomRightSerifed"
selector."K/sansSerif" = "symmetricTouchingSerifless"
selector."grek/KaiSymbol" = "symmetricTouchingBottomRightSerifed2"
selector."grek/kappa" = "symmetricTouchingSerifless"
selector.KDescender = "symmetricTouchingBottomRightSerifed"

[prime.capital-k.variants.symmetric-connected-bottom-right-serifed]
rank = 12
description = "`K` with symmetric legs connected to the vertical bar, and serifs at bottom right"
selector.K = "symmetricConnectedBottomRightSerifed"
selector."K/sansSerif" = "symmetricConnectedSerifless"
selector."grek/KaiSymbol" = "symmetricConnectedBottomRightSerifed2"
selector."grek/kappa" = "symmetricConnectedSerifless"
selector.KDescender = "symmetricConnectedBottomRightSerifed"

[prime.capital-k.variants.straight-serifed]
rank = 13
description = "`K` with standard shape, and serifs"
selector.K = "straightSerifed"
selector."K/sansSerif" = "straightSerifless"
selector."grek/KaiSymbol" = "straightSerifed2"
selector."grek/kappa" = "straightSerifless"
selector.KDescender = "straightSerifed"

[prime.capital-k.variants.curly-serifed]
rank = 14
description = "Slightly curly `K`, like Iosevka 2.x, and with serifs"
selector.K = "curlySerifed"
selector."K/sansSerif" = "curlySerifless"
selector."grek/KaiSymbol" = "curlySerifed2"
selector."grek/kappa" = "curlySerifless"
selector.KDescender = "curlySerifed"

[prime.capital-k.variants.symmetric-touching-serifed]
rank = 15
description = "`K` with symmetric legs disconnected to the vertical bar, and serifs"
selector.K = "symmetricTouchingSerifed"
selector."K/sansSerif" = "symmetricTouchingSerifless"
selector."grek/KaiSymbol" = "symmetricTouchingSerifed2"
selector."grek/kappa" = "symmetricTouchingSerifless"
selector.KDescender = "symmetricTouchingSerifed"

[prime.capital-k.variants.symmetric-connected-serifed]
rank = 16
description = "`K` with symmetric legs connected to the vertical bar, and serifs"
selector.K = "symmetricConnectedSerifed"
selector."K/sansSerif" = "symmetricConnectedSerifless"
selector."grek/KaiSymbol" = "symmetricConnectedSerifed2"
selector."grek/kappa" = "symmetricConnectedSerifless"
selector.KDescender = "symmetricConnectedSerifed"

[prime.capital-k.variants.straight-top-left-and-bottom-right-serifed]
rank = 17
description = "`K` with standard shape and serifs at top left and bottom right"
selector.K = "straightTopLeftAndBottomRightSerifed"
selector."K/sansSerif" = "straightSerifless"
selector."grek/KaiSymbol" = "straightTopLeftAndBottomRightSerifed2"
selector."grek/kappa" = "straightSerifless"
selector.KDescender = "straightTopLeftSerifed"

[prime.capital-k.variants.curly-top-left-and-bottom-right-serifed]
rank = 18
description = "Slightly curly `K`, like Iosevka 2.x, with serifs at top left and bottom right"
selector.K = "curlyTopLeftAndBottomRightSerifed"
selector."K/sansSerif" = "curlySerifless"
selector."grek/KaiSymbol" = "curlyTopLeftAndBottomRightSerifed2"
selector."grek/kappa" = "curlySerifless"
selector.KDescender = "curlyTopLeftSerifed"

[prime.capital-k.variants.symmetric-touching-top-left-and-bottom-right-serifed]
rank = 19
description = "`K` with symmetric legs disconnected to the vertical bar, and serifs at top left and bottom right"
selector.K = "symmetricTouchingTopLeftAndBottomRightSerifed"
selector."K/sansSerif" = "symmetricTouchingSerifless"
selector."grek/KaiSymbol" = "symmetricTouchingTopLeftAndBottomRightSerifed2"
selector."grek/kappa" = "symmetricTouchingSerifless"
selector.KDescender = "symmetricTouchingTopLeftSerifed"

[prime.capital-k.variants.symmetric-connected-top-left-and-bottom-right-serifed]
rank = 20
description = "`K` with symmetric legs connected to the vertical bar, and serifs at top left and bottom right"
selector.K = "symmetricConnectedTopLeftAndBottomRightSerifed"
selector."K/sansSerif" = "symmetricConnectedSerifless"
selector."grek/KaiSymbol" = "symmetricConnectedTopLeftAndBottomRightSerifed2"
selector."grek/kappa" = "symmetricConnectedSerifless"
selector.KDescender = "symmetricConnectedTopLeftSerifed"



[prime.capital-l]
sampler = "L"
tag = "cv12"

[prime.capital-l.variants.serifless]
rank = 1
description = "Serifless `L`"
selector.L = "serifless"
selector."L/sansSerif" = "serifless"

[prime.capital-l.variants.motion-serifed]
rank = 2
description = "Standard `L` with motion serif at bottom right"
selector.L = "motionSerifed"
selector."L/sansSerif" = "serifless"

[prime.capital-l.variants.serifed]
rank = 3
description = "`L` with serifs"
selector.L = "serifed"
selector."L/sansSerif" = "serifless"



[prime.capital-m]
sampler = "M"
tag = "cv13"

[prime.capital-m.variants.hanging]
rank = 1
description = "`M` with middle being hanging off baseline"
selector.M = "hanging"
selector."M/sansSerif" = "hanging"
selector."cyrl/em" = "hangingSmallCyrl"

[prime.capital-m.variants.flat-bottom]
rank = 2
description = "`M` with middle aligned to baseline"
selector.M = "flatBottom"
selector."M/sansSerif" = "flatBottom"
selector."cyrl/em" = "flatBottomSmallCyrl"

[prime.capital-m.variants.slanted-sides-hanging]
rank = 3
description = "`M` with slanted sides and middle being hanging off baseline"
selector.M = "slantedSidesHanging"
selector."M/sansSerif" = "slantedSidesHanging"
selector."cyrl/em" = "slantedSidesHangingSmallCyrl"

[prime.capital-m.variants.slanted-sides-flat-bottom]
rank = 4
description = "`M` with slanted sides and middle aligned to baseline"
selector.M = "slantedSidesFlatBottom"
selector."M/sansSerif" = "slantedSidesFlatBottom"
selector."cyrl/em" = "slantedSidesFlatBottomSmallCyrl"

[prime.capital-m.variants.hanging-motion-serifed]
rank = 5
description = "`M` with middle being hanging off baseline and motion serifs"
selector.M = "hangingMotionSerifed"
selector."M/sansSerif" = "hanging"
selector."cyrl/em" = "hangingMotionSerifed"

[prime.capital-m.variants.flat-bottom-motion-serifed]
rank = 6
description = "`M` with middle aligned to baseline and motion serifs"
selector.M = "flatBottomMotionSerifed"
selector."M/sansSerif" = "flatBottom"
selector."cyrl/em" = "flatBottomMotionSerifed"

[prime.capital-m.variants.slanted-sides-hanging-motion-serifed]
rank = 7
description = "`M` with slanted sides, middle being hanging off baseline, and motion serifs"
selector.M = "slantedSidesHangingMotionSerifed"
selector."M/sansSerif" = "slantedSidesHanging"
selector."cyrl/em" = "slantedSidesHangingMotionSerifed"

[prime.capital-m.variants.slanted-sides-flat-bottom-motion-serifed]
rank = 8
description = "`M` with slanted sides, middle aligned to baseline, and motion serifs"
selector.M = "slantedSidesFlatBottomMotionSerifed"
selector."M/sansSerif" = "slantedSidesFlatBottom"
selector."cyrl/em" = "slantedSidesFlatBottomMotionSerifed"



[prime.capital-n]
sampler = "N"
tag = "cv14"

[prime.capital-n.variants.standard]
rank = 1
description = "Standard N"
selector.N = "standard"
selector."N/sansSerif" = "standard"

[prime.capital-n.variants.asymmetric]
rank = 2
description = "More asymmetric N, with the diagonal bar stops at middle of right stem"
selector.N = "asymmetric"
selector."N/sansSerif" = "asymmetric"

[prime.capital-n.variants.motion-serifed]
rank = 3
description = "Standard N with motion serifs"
selector.N = "motionSerifed"
selector."N/sansSerif" = "standard"

[prime.capital-n.variants.asymmetric-motion-serifed]
rank = 4
description = "More asymmetric N, with the diagonal bar stops at middle of right stem and motion serifs"
selector.N = "asymmetricMotionSerifed"
selector."N/sansSerif" = "asymmetric"



[prime.capital-p]
sampler = "P"
tag = "cv15"

[prime.capital-p.variants.closed]
rank = 1
description = "Closed `P`"
selector.P = "closed"
selector."P/sansSerif" = "closed"
selector."PHookLeft" = "closed"
selector."currency/rubleSign" = "closed"

[prime.capital-p.variants.open]
rank = 2
description = "P with open contour at bottom"
selector.P = "open"
selector."P/sansSerif" = "open"
selector."PHookLeft" = "open"
selector."currency/rubleSign" = "closed"

[prime.capital-p.variants.closed-motion-serifed]
rank = 3
description = "Closed `P` with motion serifs"
selector.P = "closedMotionSerifed"
selector."P/sansSerif" = "closed"
selector."PHookLeft" = "closedMotionSerifed"
selector."currency/rubleSign" = "closedMotionSerifed"

[prime.capital-p.variants.open-motion-serifed]
rank = 4
description = "P with open contour at bottom and motion serifs"
selector.P = "openMotionSerifed"
selector."P/sansSerif" = "open"
selector."PHookLeft" = "openMotionSerifed"
selector."currency/rubleSign" = "closedMotionSerifed"



[prime.capital-q]
sampler = "Q"
tag = "cv16"

[prime.capital-q.variants.curly-tailed]
rank = 1
description = "`Q` with a curly tail"
selector.Q = "curlyTailed"

[prime.capital-q.variants.crossing-curly-tailed]
rank = 2
description = "`Q` with a curly tail"
selector.Q = "crossingCurlyTailed"

[prime.capital-q.variants.straight]
rank = 3
description = "`Q` with a straight tail like in the old versions"
selector.Q = "straight"

[prime.capital-q.variants.crossing]
rank = 4
description = "`Q` with a tail crossing the ring"
selector.Q = "crossing"

[prime.capital-q.variants.vertical-crossing]
rank = 5
description = "`Q` with a vertical tail crossing the ring"
selector.Q = "verticalCrossing"

[prime.capital-q.variants.horizontal-tailed]
rank = 6
description = "`Q` with a horizontal tail, like Univers"
selector.Q = "horizontalTailed"

[prime.capital-q.variants.detached-tailed]
rank = 7
description = "`Q` with a oblique tail detached"
selector.Q = "detachedTailed"

[prime.capital-q.variants.detached-bend-tailed]
rank = 8
description = "`Q` with a bend tail detached"
selector.Q = "detachedBendTailed"

[prime.capital-q.variants.open-swash]
rank = 9
description = "`Q` with open contour and swash-y shape"
selector.Q = "openSwash"



[prime.capital-r]
sampler = "R"
tag = "cv17"

[prime.capital-r.variants.straight]
rank = 1
description = "Standard, straight-leg `R`"
selector.R = "straight"
selector."R/sansSerif" = "straight"
selector.RRotunda = "straight"

[prime.capital-r.variants.curly]
rank = 2
description = " Slightly curly-legged `R`, like Iosevka 2.x"
selector.R = "curly"
selector."R/sansSerif" = "curly"
selector.RRotunda = "curly"

[prime.capital-r.variants.standing]
rank = 3
description = "`R` with near-vertical standing leg"
selector.R = "standing"
selector."R/sansSerif" = "standing"
selector.RRotunda = "standing"

[prime.capital-r.variants.straight-open]
rank = 4
description = "Standard, straight-leg `R`, with open contour at bottom"
selector.R = "straightOpen"
selector."R/sansSerif" = "straightOpen"
selector.RRotunda = "straight"

[prime.capital-r.variants.curly-open]
rank = 5
description = " Slightly curly-legged `R`, like Iosevka 2.x, with open contour at bottom"
selector.R = "curlyOpen"
selector."R/sansSerif" = "curlyOpen"
selector.RRotunda = "curly"

[prime.capital-r.variants.standing-open]
rank = 6
description = "`R` with near-vertical standing leg, with open contour at bottom"
selector.R = "standingOpen"
selector."R/sansSerif" = "standingOpen"
selector.RRotunda = "standing"

[prime.capital-r.variants.straight-motion-serifed]
rank = 7
description = "Standard, straight-leg `R`, with motion serifs"
selector.R = "straightMotionSerifed"
selector."R/sansSerif" = "straight"
selector.RRotunda = "straightSerifless"

[prime.capital-r.variants.curly-motion-serifed]
rank = 8
description = " Slightly curly-legged `R`, like Iosevka 2.x, with motion serifs"
selector.R = "curlyMotionSerifed"
selector."R/sansSerif" = "curly"
selector.RRotunda = "curlySerifless"

[prime.capital-r.variants.standing-motion-serifed]
rank = 9
description = "`R` with near-vertical standing leg"
selector.R = "standingMotionSerifed"
selector."R/sansSerif" = "standing"
selector.RRotunda = "standingSerifless"

[prime.capital-r.variants.straight-open-motion-serifed]
rank = 10
description = "Standard, straight-leg `R`, with open contour at bottom and motion serifs"
selector.R = "straightOpenMotionSerifed"
selector."R/sansSerif" = "straightOpen"
selector.RRotunda = "straightSerifless"

[prime.capital-r.variants.curly-open-motion-serifed]
rank = 11
description = " Slightly curly-legged `R`, like Iosevka 2.x, with open contour at bottom and motion serifs"
selector.R = "curlyOpenMotionSerifed"
selector."R/sansSerif" = "curlyOpen"
selector.RRotunda = "curlySerifless"

[prime.capital-r.variants.standing-open-motion-serifed]
rank = 12
description = "`R` with near-vertical standing leg, with open contour at bottom and motion serifs"
selector.R = "standingOpenMotionSerifed"
selector."R/sansSerif" = "standingOpen"
selector.RRotunda = "standingSerifless"



[prime.capital-s]
sampler = "S"
tag = "cv18"

[prime.capital-s.variants.serifless]
rank = 1
description = "Serifless `S`"
selector.S = "serifless"
selector."S/sansSerif" = "serifless"
selector.SSwash = "serifless"

[prime.capital-s.variants.unilateral-serifed]
rank = 2
description = "`S` with single serif at top"
selector.S = "unilateralSerifed"
selector."S/sansSerif" = "serifless"
selector.SSwash = "unilateralSerifed"

[prime.capital-s.variants.bilateral-serifed]
rank = 3
description = "`S` with serifs at both end"
selector.S = "bilateralSerifed"
selector."S/sansSerif" = "serifless"
selector.SSwash = "unilateralSerifed"

[prime.capital-s.variants.unilateral-inward-serifed]
rank = 4
description = "`S` with single inward serif at top"
selector.S = "unilateralInwardSerifed"
selector."S/sansSerif" = "serifless"
selector.SSwash = "unilateralInwardSerifed"

[prime.capital-s.variants.bilateral-inward-serifed]
rank = 5
description = "`S` with inward serifs at both end"
selector.S = "bilateralInwardSerifed"
selector."S/sansSerif" = "serifless"
selector.SSwash = "unilateralInwardSerifed"



[prime.capital-t]
sampler = "T"
tag = "cv19"

[prime.capital-t.variants.serifless]
rank = 1
description = "Serifless T"
selector.T = "serifless"
selector."T/sansSerif" = "serifless"
selector."T/rtailBase" = "serifless"

[prime.capital-t.variants.motion-serifed]
rank = 2
description = "Motion-Serifed T"
selector.T = "motionSerifed"
selector."T/sansSerif" = "serifless"
selector."T/rtailBase" = "motionSerifed"

[prime.capital-t.variants.serifed]
rank = 3
description = "Serifed T"
selector.T = "serifed"
selector."T/sansSerif" = "serifless"
selector."T/rtailBase" = "motionSerifed"



[prime.capital-u]
sampler = "U"
tag = "cv20"

[prime.capital-u.variants.toothed]
rank = 1
description = "`U` with bottom-right tooth"
selector.U = "toothed"
selector."U/sansSerif" = "toothed"

[prime.capital-u.variants.toothless-corner]
rank = 2
description = "Toothless (corner bottom-right) `U`"
selector.U = "toothlessCorner"
selector."U/sansSerif" = "toothlessCorner"

[prime.capital-u.variants.toothless-rounded]
rank = 3
description = "Toothless (rounded) `U`"
selector.U = "toothlessRounded"
selector."U/sansSerif" = "toothlessRounded"

[prime.capital-u.variants.tailed]
rank = 4
description = "`U` with right bar and a slightly curly tail"
selector.U = "tailed"
selector."U/sansSerif" = "tailed"

[prime.capital-u.variants.motion-serifed]
rank = 5
description = "Normal `U` with right bar and motion serifs"
selector.U = "motionSerifed"
selector."U/sansSerif" = "toothed"

[prime.capital-u.variants.tailed-motion-serifed]
rank = 6
description = "`U` with right bar, motion serifs and a slightly curly tail"
selector.U = "tailedMotionSerifed"
selector."U/sansSerif" = "tailed"

[prime.capital-u.variants.toothless-corner-unilateral-motion-serifed]
rank = 7
description = "Toothless (corner bottom-right) `U` with motion serifs, like Museo"
selector.U = "toothlessCornerUnilateralMotionSerifed"
selector."U/sansSerif" = "toothlessCorner"

[prime.capital-u.variants.toothless-rounded-unilateral-motion-serifed]
rank = 8
description = "Toothless (rounded) `U` with motion serifs, like Museo"
selector.U = "toothlessRoundedUnilateralMotionSerifed"
selector."U/sansSerif" = "toothlessRounded"

[prime.capital-u.variants.toothless-corner-bilateral-motion-serifed]
rank = 9
description = "Toothless (corner bottom-right) `U` with motion serifs, like Museo"
selector.U = "toothlessCornerBilateralMotionSerifed"
selector."U/sansSerif" = "toothlessCorner"

[prime.capital-u.variants.toothless-rounded-bilateral-motion-serifed]
rank = 10
description = "Toothless (rounded) `U` with motion serifs, like Museo"
selector.U = "toothlessRoundedBilateralMotionSerifed"
selector."U/sansSerif" = "toothlessRounded"



[prime.capital-v]
sampler = "V"
tag = "cv21"

[prime.capital-v.variants.straight]
rank = 1
description = "Standard, straight `V`"
selector.V = "straight"
selector."V/sansSerif" = "straight"
selector.VHookTop = "straight"

[prime.capital-v.variants.curly]
rank = 2
description = " Slightly curly `V`, like Iosevka 2.x"
selector.V = "curly"
selector."V/sansSerif" = "curly"
selector.VHookTop = "curly"

[prime.capital-v.variants.straight-motion-serifed]
rank = 3
description = "Standard, straight `V`, and motion serifs"
selector.V = "straightMotionSerifed"
selector."V/sansSerif" = "straight"
selector.VHookTop = "straightMotionSerifed"

[prime.capital-v.variants.curly-motion-serifed]
rank = 4
description = " Slightly curly `V`, like Iosevka 2.x, and motion serifs"
selector.V = "curlyMotionSerifed"
selector."V/sansSerif" = "curly"
selector.VHookTop = "curlyMotionSerifed"



[prime.capital-w]
sampler = "W"
tag = "cv22"

[prime.capital-w.variants.straight]
rank = 1
description = "Standard, straight `W`"
selector.W = "straight"
selector."W/sansSerif" = "straight"
selector.WHookTop = "straight"

[prime.capital-w.variants.curly]
rank = 2
description = "Slightly curly `W`, like Iosevka 2.x"
selector.W = "curly"
selector."W/sansSerif" = "curly"
selector.WHookTop = "curly"

[prime.capital-w.variants.straight-flat-top]
rank = 3
description = "Standard, straight `W`, and the middle is forced to be aligned the top"
selector.W = "straightFlatTop"
selector."W/sansSerif" = "straightFlatTop"
selector.WHookTop = "straightFlatTop"

[prime.capital-w.variants.straight-double-v]
rank = 4
description = "Straight `W` looks like double V"
selector.W = "straightDoubleV"
selector."W/sansSerif" = "straightDoubleV"
selector.WHookTop = "straightDoubleV"

[prime.capital-w.variants.straight-asymmetric]
rank = 5
description = "Straight `W` looks asymmetric"
selector.W = "straightAsymmetric"
selector."W/sansSerif" = "straightAsymmetric"
selector.WHookTop = "straightAsymmetric"

[prime.capital-w.variants.straight-vertical-sides]
rank = 6
description = "Straight `W` with vertical sides"
selector.W = "straightVerticalSides"
selector."W/sansSerif" = "straightVerticalSides"
selector.WHookTop = "straightVerticalSides"

[prime.capital-w.variants.straight-motion-serifed]
rank = 7
description = "Standard, straight `W`, with motion serifs"
selector.W = "straightMotionSerifed"
selector."W/sansSerif" = "straight"
selector.WHookTop = "straightMotionSerifed"

[prime.capital-w.variants.curly-motion-serifed]
rank = 8
description = "Slightly curly `W`, like Iosevka 2.x, with motion serifs"
selector.W = "curlyMotionSerifed"
selector."W/sansSerif" = "curly"
selector.WHookTop = "curlyMotionSerifed"

[prime.capital-w.variants.straight-flat-top-motion-serifed]
rank = 9
description = "Standard, straight `W`, and the middle is forced to be aligned the top, with motion serifs"
selector.W = "straightFlatTopMotionSerifed"
selector."W/sansSerif" = "straightFlatTop"
selector.WHookTop = "straightFlatTopMotionSerifed"

[prime.capital-w.variants.straight-double-v-motion-serifed]
rank = 10
description = "Straight `W` looks like double V, with motion serifs"
selector.W = "straightDoubleVMotionSerifed"
selector."W/sansSerif" = "straightDoubleV"
selector.WHookTop = "straightDoubleVMotionSerifed"

[prime.capital-w.variants.straight-asymmetric-motion-serifed]
rank = 11
description = "Straight `W` looks asymmetric, with motion serifs"
selector.W = "straightAsymmetricMotionSerifed"
selector."W/sansSerif" = "straightAsymmetric"
selector.WHookTop = "straightAsymmetricMotionSerifed"

[prime.capital-w.variants.straight-vertical-sides-motion-serifed]
rank = 12
description = "Straight `W` with vertical sides and motion serifs"
selector.W = "straightVerticalSidesMotionSerifed"
selector."W/sansSerif" = "straightVerticalSides"
selector.WHookTop = "straightVerticalSidesMotionSerifed"



[prime.capital-x]
sampler = "X"
tag = "cv23"

[prime.capital-x.variants.straight-serifless]
rank = 1
description = "Serifless, straight `X`"
selector.X = "straightSerifless"
selector."X/sansSerif" = "straightSerifless"

[prime.capital-x.variants.curly-serifless]
rank = 2
description = "Serifless, slightly curly `X`, like Iosevka 2.x"
selector.X = "curlySerifless"
selector."X/sansSerif" = "curlySerifless"

[prime.capital-x.variants.straight-motion-serifed]
rank = 3
description = "Straight `X` with motion serifs"
selector.X = "straightMotionSerifed"
selector."X/sansSerif" = "straightSerifless"

[prime.capital-x.variants.curly-motion-serifed]
rank = 4
description = "Slightly curly `X`, like Iosevka 2.x, with motion serifs"
selector.X = "curlyMotionSerifed"
selector."X/sansSerif" = "curlySerifless"

[prime.capital-x.variants.straight-serifed]
rank = 5
description = "Straight `X` with full serifs"
selector.X = "straightSerifed"
selector."X/sansSerif" = "straightSerifless"

[prime.capital-x.variants.curly-serifed]
rank = 6
description = "Slightly curly `X`, like Iosevka 2.x, with full serifs"
selector.X = "curlySerifed"
selector."X/sansSerif" = "curlySerifless"



[prime.capital-y]
sampler = "Y"
tag = "cv24"

[prime.capital-y.variants.straight-serifless]
rank = 1
description = "Straight `Y` without serifs"
selector.Y = "straightSerifless"
selector.'grek/upsilonHookedSymbolShape' = "straightSerifless"
selector."Y/sansSerif" = "straightSerifless"

[prime.capital-y.variants.curly-serifless]
rank = 2
description = "Slightly curly `Y`, like Iosevka 2.x, without serifs"
selector.Y = "curlySerifless"
selector.'grek/upsilonHookedSymbolShape' = "straightSerifless"
selector."Y/sansSerif" = "curlySerifless"

[prime.capital-y.variants.straight-base-serifed]
rank = 3
description = "Standard, straight `Y`, with serif at bottom"
selector.Y = "straightBaseSerifed"
selector.'grek/upsilonHookedSymbolShape' = "straightBaseSerifed"
selector."Y/sansSerif" = "straightSerifless"

[prime.capital-y.variants.curly-base-serifed]
rank = 4
description = "Slightly curly `Y`, like Iosevka 2.x, with serif at bottom"
selector.Y = "curlyBaseSerifed"
selector.'grek/upsilonHookedSymbolShape' = "straightBaseSerifed"
selector."Y/sansSerif" = "curlySerifless"

[prime.capital-y.variants.straight-motion-serifed]
rank = 5
description = "Standard, straight `Y`, with motion serifs"
selector.Y = "straightMotionSerifed"
selector.'grek/upsilonHookedSymbolShape' = "straightSerifless"
selector."Y/sansSerif" = "straightSerifless"

[prime.capital-y.variants.curly-motion-serifed]
rank = 6
description = "Slightly curly `Y`, like Iosevka 2.x, with motion serifs"
selector.Y = "curlyMotionSerifed"
selector.'grek/upsilonHookedSymbolShape' = "straightSerifless"
selector."Y/sansSerif" = "curlySerifless"

[prime.capital-y.variants.straight-serifed]
rank = 7
description = "Standard, straight `Y`, with serifs"
selector.Y = "straightSerifed"
selector.'grek/upsilonHookedSymbolShape' = "straightBaseSerifed"
selector."Y/sansSerif" = "straightSerifless"

[prime.capital-y.variants.curly-serifed]
rank = 8
description = "Slightly curly `Y`, like Iosevka 2.x, with serifs"
selector.Y = "curlySerifed"
selector.'grek/upsilonHookedSymbolShape' = "straightBaseSerifed"
selector."Y/sansSerif" = "curlySerifless"



[prime.capital-z]
sampler = "Z"
tag = "cv25"

[prime.capital-z.variants.straight-serifless]
rank = 1
description = "Straight `Z` without serifs"
selector.Z = "straightSerifless"
selector."Z/sansSerif" = "straightSerifless"
selector."Z/reduced" = "straightSerifless"
selector."Z/reduced/sansSerif" = "straightSerifless"
selector.ZDesc = "straightSerifless"

[prime.capital-z.variants.straight-serifless-with-crossbar]
rank = 2
description = "Straight `Z` with a diagonal crossbar, and without serifs"
selector.Z = "straightSeriflessWithCrossBar"
selector."Z/sansSerif" = "straightSeriflessWithCrossBar"
selector."Z/reduced" = "straightSerifless"
selector."Z/reduced/sansSerif" = "straightSerifless"
selector.ZDesc = "straightSeriflessWithCrossBar"

[prime.capital-z.variants.straight-serifless-with-horizontal-crossbar]
rank = 3
description = "Straight `Z` with a horizontal crossbar, and without serifs"
selector.Z = "straightSeriflessWithHorizontalCrossBar"
selector."Z/sansSerif" = "straightSeriflessWithHorizontalCrossBar"
selector."Z/reduced" = "straightSerifless"
selector."Z/reduced/sansSerif" = "straightSerifless"
selector.ZDesc = "straightSeriflessWithHorizontalCrossBar"

[prime.capital-z.variants.curly-serifless]
rank = 4
description = "Curly `Z` without serifs"
selector.Z = "curlySerifless"
selector."Z/sansSerif" = "curlySerifless"
selector."Z/reduced" = "curlySerifless"
selector."Z/reduced/sansSerif" = "curlySerifless"
selector.ZDesc = "curlySerifless"

[prime.capital-z.variants.curly-serifless-with-crossbar]
rank = 5
description = "Curly `Z` with a diagonal crossbar, and without serifs"
selector.Z = "curlySeriflessWithCrossBar"
selector."Z/sansSerif" = "curlySeriflessWithCrossBar"
selector."Z/reduced" = "curlySerifless"
selector."Z/reduced/sansSerif" = "curlySerifless"
selector.ZDesc = "curlySeriflessWithCrossBar"

[prime.capital-z.variants.curly-serifless-with-horizontal-crossbar]
rank = 6
description = "Curly `Z` with a horizontal crossbar, and without serifs"
selector.Z = "curlySeriflessWithHorizontalCrossBar"
selector."Z/sansSerif" = "curlySeriflessWithHorizontalCrossBar"
selector."Z/reduced" = "curlySerifless"
selector."Z/reduced/sansSerif" = "curlySerifless"
selector.ZDesc = "curlySeriflessWithHorizontalCrossBar"

[prime.capital-z.variants.straight-serifed]
rank = 7
description = "Straight `Z` with top and bottom serifs"
selector.Z = "straightSerifed"
selector."Z/sansSerif" = "straightSerifless"
selector."Z/reduced" = "straightSerifed"
selector."Z/reduced/sansSerif" = "straightSerifless"
selector.ZDesc = "straightTopSerifed"

[prime.capital-z.variants.straight-serifed-with-crossbar]
rank = 8
description = "Straight `Z` with a diagonal crossbar and serifs"
selector.Z = "straightSerifedWithCrossBar"
selector."Z/sansSerif" = "straightSeriflessWithCrossBar"
selector."Z/reduced" = "straightSerifed"
selector."Z/reduced/sansSerif" = "straightSerifless"
selector.ZDesc = "straightTopSerifedWithCrossbar"

[prime.capital-z.variants.straight-serifed-with-horizontal-crossbar]
rank = 9
description = "Straight `Z` with a horizontal crossbar and serifs"
selector.Z = "straightSerifedWithHorizontalCrossBar"
selector."Z/sansSerif" = "straightSeriflessWithHorizontalCrossBar"
selector."Z/reduced" = "straightSerifed"
selector."Z/reduced/sansSerif" = "straightSerifless"
selector.ZDesc = "straightTopSerifedWithHorizontalCrossBar"

[prime.capital-z.variants.curly-serifed]
rank = 10
description = "Curly `Z` with top and bottom serifs"
selector.Z = "curlySerifed"
selector."Z/sansSerif" = "curlySerifless"
selector."Z/reduced" = "curlySerifed"
selector."Z/reduced/sansSerif" = "curlySerifless"
selector.ZDesc = "curlyTopSerifed"

[prime.capital-z.variants.curly-serifed-with-crossbar]
rank = 11
description = "Curly `Z` with a diagonal crossbar and serifs"
selector.Z = "curlySerifedWithCrossBar"
selector."Z/sansSerif" = "curlySeriflessWithCrossBar"
selector."Z/reduced" = "curlySerifed"
selector."Z/reduced/sansSerif" = "curlySerifless"
selector.ZDesc = "curlyTopSerifedWithCrossbar"

[prime.capital-z.variants.curly-serifed-with-horizontal-crossbar]
rank = 12
description = "Curly `Z` with a horizontal crossbar and serifs"
selector.Z = "curlySerifedWithHorizontalCrossBar"
selector."Z/sansSerif" = "curlySeriflessWithHorizontalCrossBar"
selector."Z/reduced" = "curlySerifed"
selector."Z/reduced/sansSerif" = "curlySerifless"
selector.ZDesc = "curlyTopSerifedWithHorizontalCrossBar"

[prime.capital-z.variants.straight-bottom-serifed]
rank = 13
description = "Standard `Z` with serif at bottom"
selector.Z = "straightBottomSerifed"
selector."Z/sansSerif" = "straightSerifless"
selector."Z/reduced" = "straightBottomSerifed"
selector."Z/reduced/sansSerif" = "straightSerifless"
selector.ZDesc = "straightSerifless"

[prime.capital-z.variants.straight-bottom-serifed-with-crossbar]
rank = 14
description = "Standard `Z` with a diagonal crossbar and serif at bottom"
selector.Z = "straightBottomSerifedWithCrossbar"
selector."Z/sansSerif" = "straightSeriflessWithCrossBar"
selector."Z/reduced" = "straightBottomSerifed"
selector."Z/reduced/sansSerif" = "straightSerifless"
selector.ZDesc = "straightSeriflessWithCrossBar"

[prime.capital-z.variants.straight-bottom-serifed-with-horizontal-crossbar]
rank = 15
description = "Standard `Z` with a horizontal crossbar and serif at bottom"
selector.Z = "straightBottomSerifedWithHorizontalCrossBar"
selector."Z/sansSerif" = "straightSeriflessWithHorizontalCrossBar"
selector."Z/reduced" = "straightBottomSerifed"
selector."Z/reduced/sansSerif" = "straightSerifless"
selector.ZDesc = "straightSeriflessWithHorizontalCrossBar"

[prime.capital-z.variants.curly-bottom-serifed-with-crossbar]
rank = 16
description = "Curly `Z` with serif at bottom"
selector.Z = "curlyBottomSerifed"
selector."Z/sansSerif" = "curlySerifless"
selector."Z/reduced" = "curlyBottomSerifed"
selector."Z/reduced/sansSerif" = "curlySerifless"
selector.ZDesc = "curlySerifless"

[prime.capital-z.variants.curly-bottom-serifed-with-horizontal-crossbar]
rank = 17
description = "Curly `Z` with a diagonal crossbar and serif at bottom"
selector.Z = "curlyBottomSerifedWithCrossbar"
selector."Z/sansSerif" = "curlySeriflessWithCrossBar"
selector."Z/reduced" = "curlyBottomSerifed"
selector."Z/reduced/sansSerif" = "curlySerifless"
selector.ZDesc = "curlySeriflessWithCrossBar"

[prime.capital-z.variants.curly-bottom-serifed]
rank = 18
description = "Curly `Z` with a horizontal crossbar and serif at bottom"
selector.Z = "curlyBottomSerifedWithHorizontalCrossBar"
selector."Z/sansSerif" = "curlySeriflessWithHorizontalCrossBar"
selector."Z/reduced" = "curlyBottomSerifed"
selector."Z/reduced/sansSerif" = "curlySerifless"
selector.ZDesc = "curlySeriflessWithHorizontalCrossBar"

[prime.capital-z.variants.straight-top-serifed]
rank = 19
description = "Standard `Z` with serif at top"
selector.Z = "straightTopSerifed"
selector."Z/sansSerif" = "straightSerifless"
selector."Z/reduced" = "straightTopSerifed"
selector."Z/reduced/sansSerif" = "straightSerifless"
selector.ZDesc = "straightTopSerifed"

[prime.capital-z.variants.straight-top-serifed-with-crossbar]
rank = 20
description = "Standard `Z` with a diagonal crossbar and serif at top"
selector.Z = "straightTopSerifedWithCrossbar"
selector."Z/sansSerif" = "straightSeriflessWithCrossBar"
selector."Z/reduced" = "straightTopSerifed"
selector."Z/reduced/sansSerif" = "straightSerifless"
selector.ZDesc = "straightTopSerifedWithCrossbar"

[prime.capital-z.variants.straight-top-serifed-with-horizontal-crossbar]
rank = 21
description = "Standard `Z` with a horizontal crossbar and serif at top"
selector.Z = "straightTopSerifedWithHorizontalCrossBar"
selector."Z/sansSerif" = "straightSeriflessWithHorizontalCrossBar"
selector."Z/reduced" = "straightTopSerifed"
selector."Z/reduced/sansSerif" = "straightSerifless"
selector.ZDesc = "straightTopSerifedWithHorizontalCrossBar"

[prime.capital-z.variants.curly-top-serifed]
rank = 22
description = "Curly `Z` with serif at top"
selector.Z = "curlyTopSerifed"
selector."Z/sansSerif" = "curlySerifless"
selector."Z/reduced" = "curlyTopSerifed"
selector."Z/reduced/sansSerif" = "curlySerifless"
selector.ZDesc = "curlyTopSerifed"

[prime.capital-z.variants.curly-top-serifed-with-crossbar]
rank = 23
description = "Curly `Z` with a diagonal crossbar and serif at top"
selector.Z = "curlyTopSerifedWithCrossbar"
selector."Z/sansSerif" = "curlySeriflessWithCrossBar"
selector."Z/reduced" = "curlyTopSerifed"
selector."Z/reduced/sansSerif" = "curlySerifless"
selector.ZDesc = "curlyTopSerifedWithCrossbar"

[prime.capital-z.variants.curly-top-serifed-with-horizontal-crossbar]
rank = 24
description = "Curly `Z` with a horizontal crossbar and serif at top"
selector.Z = "curlyTopSerifedWithHorizontalCrossBar"
selector."Z/sansSerif" = "curlySeriflessWithHorizontalCrossBar"
selector."Z/reduced" = "curlyTopSerifed"
selector."Z/reduced/sansSerif" = "curlySerifless"
selector.ZDesc = "curlyTopSerifedWithHorizontalCrossBar"

[prime.capital-z.variants.cursive]
rank = 25
description = "Cursive `Z`"
selector.Z = "cursive"
selector."Z/sansSerif" = "cursive"
selector."Z/reduced" = "cursive"
selector."Z/reduced/sansSerif" = "cursive"
selector.ZDesc = "cursive"

[prime.capital-z.variants.cursive-with-crossbar]
rank = 26
description = "Cursive `Z` with a diagonal cross bar"
selector.Z = "cursiveWithCrossBar"
selector."Z/sansSerif" = "cursiveWithCrossBar"
selector."Z/reduced" = "cursive"
selector."Z/reduced/sansSerif" = "cursive"
selector.ZDesc = "cursiveWithCrossBar"

[prime.capital-z.variants.cursive-with-horizontal-crossbar]
rank = 27
description = "Cursive `Z` with a horizontal cross bar"
selector.Z = "cursiveWithHorizontalCrossBar"
selector."Z/sansSerif" = "cursiveWithHorizontalCrossBar"
selector."Z/reduced" = "cursive"
selector."Z/reduced/sansSerif" = "cursive"
selector.ZDesc = "cursiveWithHorizontalCrossBar"




[prime.a]
sampler = "a"
tag = "cv26"

[prime.a.variants.double-storey-serifless]
rank = 1
description = "Double-storey `a` without serifs"
selector.a = "doubleStoreySerifless"
selector."a/sansSerif" = "doubleStoreySerifless"
selector."a/rtailBase" = "doubleStoreySerifless"
selector."a/turnABase" = "doubleStoreySerifless"

[prime.a.variants.double-storey-tailed]
rank = 2
description = "Double-storey `a` with curly tail"
selector.a = "doubleStoreyTailed"
selector."a/sansSerif" = "doubleStoreyTailed"
selector."a/rtailBase" = "doubleStoreySerifless"
selector."a/turnABase" = "doubleStoreyTailed"

[prime.a.variants.double-storey-toothless-corner]
rank = 3
description = "Toothless (cornered bottom-right) double-storey `a`"
selector.a = "doubleStoreyToothlessCorner"
selector."a/sansSerif" = "doubleStoreyToothlessCorner"
selector."a/rtailBase" = "doubleStoreySerifless"
selector."a/turnABase" = "doubleStoreyToothlessCorner"

[prime.a.variants.double-storey-toothless-rounded]
rank = 4
description = "Toothless (rounded bottom-right) double-storey `a`"
selector.a = "doubleStoreyToothlessRounded"
selector."a/sansSerif" = "doubleStoreyToothlessRounded"
selector."a/rtailBase" = "doubleStoreySerifless"
selector."a/turnABase" = "doubleStoreyToothlessRounded"

[prime.a.variants.double-storey-serifed]
rank = 5
description = "Double-storey `a` with serif at bottom right"
selector.a = "doubleStoreySerifed"
selector."a/sansSerif" = "doubleStoreySerifless"
selector."a/rtailBase" = "doubleStoreySerifless"
selector."a/turnABase" = "doubleStoreySerifed"

[prime.a.variants.single-storey-serifless]
rank = 6
description = "Single-storey `a` without serifs"
selector.a = "singleStoreySerifless"
selector."a/sansSerif" = "singleStoreySerifless"
selector."a/rtailBase" = "singleStoreySerifless"
selector."a/turnABase" = "doubleStoreySerifless"

[prime.a.variants.single-storey-earless-corner-serifless]
rank = 7
description = "Earless (cornered top-right) single-storey `a` without serifs"
selector.a = "singleStoreyEarlessCornerSerifless"
selector."a/sansSerif" = "singleStoreyEarlessCornerSerifless"
selector."a/rtailBase" = "singleStoreyEarlessCornerSerifless"
selector."a/turnABase" = "doubleStoreySerifless"

[prime.a.variants.single-storey-earless-rounded-serifless]
rank = 8
description = "Earless (rounded top-right) single-storey `a` without serifs"
selector.a = "singleStoreyEarlessRoundedSerifless"
selector."a/sansSerif" = "singleStoreyEarlessRoundedSerifless"
selector."a/rtailBase" = "singleStoreyEarlessRoundedSerifless"
selector."a/turnABase" = "doubleStoreySerifless"

[prime.a.variants.single-storey-tailed]
rank = 9
description = "Single-storey `a` with curly tail"
selector.a = "singleStoreyTailed"
selector."a/sansSerif" = "singleStoreyTailed"
selector."a/rtailBase" = "singleStoreySerifless"
selector."a/turnABase" = "doubleStoreyTailed"

[prime.a.variants.single-storey-earless-corner-tailed]
rank = 10
description = "Earless (cornered top-right) single-storey `a` with curly tail"
selector.a = "singleStoreyEarlessCornerTailed"
selector."a/sansSerif" = "singleStoreyEarlessCornerTailed"
selector."a/rtailBase" = "singleStoreyEarlessCornerSerifless"
selector."a/turnABase" = "doubleStoreyTailed"

[prime.a.variants.single-storey-earless-rounded-tailed]
rank = 11
description = "Earless (rounded top-right) single-storey `a` with curly tail"
selector.a = "singleStoreyEarlessRoundedTailed"
selector."a/sansSerif" = "singleStoreyEarlessRoundedTailed"
selector."a/rtailBase" = "singleStoreyEarlessRoundedSerifless"
selector."a/turnABase" = "doubleStoreyTailed"

[prime.a.variants.single-storey-serifed]
rank = 12
description = "Single-storey `a` with serif at bottom right"
selector.a = "singleStoreySerifed"
selector."a/sansSerif" = "singleStoreySerifless"
selector."a/rtailBase" = "singleStoreySerifless"
selector."a/turnABase" = "doubleStoreySerifed"

[prime.a.variants.single-storey-earless-corner-serifed]
rank = 13
description = "Earless (cornered top-right) single-storey `a` with serif at bottom right"
selector.a = "singleStoreyEarlessCornerSerifed"
selector."a/sansSerif" = "singleStoreyEarlessCornerSerifless"
selector."a/rtailBase" = "singleStoreyEarlessCornerSerifless"
selector."a/turnABase" = "doubleStoreySerifed"

[prime.a.variants.single-storey-earless-rounded-serifed]
rank = 14
description = "Earless (rounded top-right) single-storey `a` with serif at bottom right"
selector.a = "singleStoreyEarlessRoundedSerifed"
selector."a/sansSerif" = "singleStoreyEarlessRoundedSerifless"
selector."a/rtailBase" = "singleStoreyEarlessRoundedSerifless"
selector."a/turnABase" = "doubleStoreySerifed"


[prime.b]
sampler = "b"
tag = "cv27"

[prime.b.variants.toothed]
rank = 1
description = "`b` with bottom-left tooth"
selector.b = "toothed"
selector."b/sansSerif" = "toothed"
selector."b/zhuangToneSixBase" = "toothed"
selector.bHookTop = "toothed"

[prime.b.variants.toothless-corner]
rank = 2
description = "`b` without bottom-left tooth, with a corner transition"
selector.b = "toothlessCorner"
selector."b/sansSerif" = "toothlessCorner"
selector."b/zhuangToneSixBase" = "toothlessCorner"
selector.bHookTop = "toothlessCorner"

[prime.b.variants.toothless-rounded]
rank = 3
description = "`b` without bottom-left tooth, with a rounded transition"
selector.b = "toothlessRounded"
selector."b/sansSerif" = "toothlessRounded"
selector."b/zhuangToneSixBase" = "toothlessRounded"
selector.bHookTop = "toothlessRounded"

[prime.b.variants.toothed-motion-serifed]
rank = 4
description = "`b` with motion serif, and with bottom-left tooth"
selector.b = "toothedMotionSerifed"
selector."b/sansSerif" = "toothed"
selector."b/zhuangToneSixBase" = "toothed"
selector.bHookTop = "toothed"

[prime.b.variants.toothless-corner-motion-serifed]
rank = 5
description = "`b` with motion serif, and without bottom-left tooth, with a corner transition"
selector.b = "toothlessCornerMotionSerifed"
selector."b/sansSerif" = "toothlessCorner"
selector."b/zhuangToneSixBase" = "toothlessCorner"
selector.bHookTop = "toothlessCorner"

[prime.b.variants.toothless-rounded-motion-serifed]
rank = 6
description = "`b` with motion serif, and without bottom-left tooth, with a rounded transition"
selector.b = "toothlessRoundedMotionSerifed"
selector."b/sansSerif" = "toothlessRounded"
selector."b/zhuangToneSixBase" = "toothlessRounded"
selector.bHookTop = "toothlessRounded"



[prime.c]
sampler = "c"
tag = "cv28"

[prime.c.variants.serifless]
rank = 1
description = "Serifless `c`"
selector.c = "serifless"
selector."c/sansSerif" = "serifless"
selector.cCurlyTail = "serifless"
selector.cHookTop = "unilateralSerifed"
selector.cTopSerifOnly = "serifless"

[prime.c.variants.unilateral-serifed]
rank = 2
description = "`c` with serif at top"
selector.c = "unilateralSerifed"
selector."c/sansSerif" = "serifless"
selector.cCurlyTail = "unilateralSerifed"
selector.cHookTop = "unilateralSerifed"
selector.cTopSerifOnly = "unilateralSerifed"

[prime.c.variants.bilateral-serifed]
rank = 3
description = "`c` with serifs at both top and bottom"
selector.c = "bilateralSerifed"
selector."c/sansSerif" = "serifless"
selector.cCurlyTail = "unilateralSerifed"
selector.cHookTop = "bilateralSerifed"
selector.cTopSerifOnly = "unilateralSerifed"

[prime.c.variants.unilateral-inward-serifed]
rank = 4
description = "`c` with inward serif at top"
selector.c = "unilateralInwardSerifed"
selector."c/sansSerif" = "serifless"
selector.cCurlyTail = "unilateralInwardSerifed"
selector.cHookTop = "unilateralInwardSerifed"
selector.cTopSerifOnly = "unilateralInwardSerifed"

[prime.c.variants.bilateral-inward-serifed]
rank = 5
description = "`c` with inward serif at both top and bottom"
selector.c = "bilateralInwardSerifed"
selector."c/sansSerif" = "serifless"
selector.cCurlyTail = "unilateralInwardSerifed"
selector.cHookTop = "bilateralInwardSerifed"
selector.cTopSerifOnly = "unilateralInwardSerifed"



[prime.d]
sampler = "d"
tag = "cv29"

[prime.d.variants.toothed-serifless]
rank = 1
description = "`d` with bottom-right tooth, and without serifs"
selector.d = "toothedSerifless"
selector."d/sansSerif" = "toothedSerifless"
selector."d/phoneticLeft" = "toothedSerifless"
selector."d/hookBottomBase" = "toothedSerifless"
selector.dCurlyTail = "toothedSerifless"
selector.dHookTop = "toothedSerifless"
selector."dHookTop/hookBottomBase" = "toothedSerifless"

[prime.d.variants.toothless-corner-serifless]
rank = 2
description = "`d` without bottom-right tooth, with a corner transition, and without serif"
selector.d = "toothlessCornerSerifless"
selector."d/sansSerif" = "toothlessCornerSerifless"
selector."d/phoneticLeft" = "toothedSerifless"
selector."d/hookBottomBase" = "toothlessCornerSeriflessHBB"
selector.dCurlyTail = "toothedSerifless"
selector.dHookTop = "toothlessCornerSerifless"
selector."dHookTop/hookBottomBase" = "toothlessCornerSeriflessHBB"

[prime.d.variants.toothless-rounded-serifless]
rank = 3
description = "`d` without bottom-right tooth, with a rounded transition, and without serif"
selector.d = "toothlessRoundedSerifless"
selector."d/sansSerif" = "toothlessRoundedSerifless"
selector."d/phoneticLeft" = "toothedSerifless"
selector."d/hookBottomBase" = "toothlessRoundedSeriflessHBB"
selector.dCurlyTail = "toothedSerifless"
selector.dHookTop = "toothlessRoundedSerifless"
selector."dHookTop/hookBottomBase" = "toothlessRoundedSeriflessHBB"

[prime.d.variants.tailed-serifless]
rank = 4
description = "`d` with a bottom-right tail, and without serif"
selector.d = "tailedSerifless"
selector."d/sansSerif" = "tailedSerifless"
selector."d/phoneticLeft" = "toothedSerifless"
selector."d/hookBottomBase" = "toothedSerifless"
selector.dCurlyTail = "toothedSerifless"
selector.dHookTop = "tailedSerifless"
selector."dHookTop/hookBottomBase" = "toothedSerifless"

[prime.d.variants.toothed-top-serifed]
rank = 5
description = "`d` with bottom-right tooth and top serif"
selector.d = "toothedTopSerifed"
selector."d/sansSerif" = "toothedSerifless"
selector."d/phoneticLeft" = "toothedTopSerifed"
selector."d/hookBottomBase" = "toothedTopSerifed"
selector.dCurlyTail = "toothedTopSerifed"
selector.dHookTop = "toothedSerifless"
selector."dHookTop/hookBottomBase" = "toothedSerifless"

[prime.d.variants.toothed-serifed]
rank = 6
description = "`d` with serifs"
selector.d = "toothedSerifed"
selector."d/sansSerif" = "toothedSerifless"
selector."d/phoneticLeft" = "toothedTopSerifed"
selector."d/hookBottomBase" = "toothedTopSerifed"
selector.dCurlyTail = "toothedTopSerifed"
selector.dHookTop = "toothedBottomSerifed"
selector."dHookTop/hookBottomBase" = "toothedSerifless"

[prime.d.variants.toothless-corner-serifed]
rank = 7
description = "`d` without bottom-right tooth, with a corner transition and top serif"
selector.d = "toothlessCornerSerifed"
selector."d/sansSerif" = "toothlessCornerSerifless"
selector."d/phoneticLeft" = "toothedTopSerifed"
selector."d/hookBottomBase" = "toothlessCornerSerifedHBB"
selector.dCurlyTail = "toothedTopSerifed"
selector.dHookTop = "toothlessCornerSerifless"
selector."dHookTop/hookBottomBase" = "toothlessCornerSeriflessHBB"

[prime.d.variants.toothless-rounded-serifed]
rank = 8
description = "`d` without bottom-right tooth, with a rounded transition and top serif"
selector.d = "toothlessRoundedSerifed"
selector."d/sansSerif" = "toothlessRoundedSerifless"
selector."d/phoneticLeft" = "toothedTopSerifed"
selector."d/hookBottomBase" = "toothlessRoundedSerifedHBB"
selector.dCurlyTail = "toothedTopSerifed"
selector.dHookTop = "toothlessRoundedSerifless"
selector."dHookTop/hookBottomBase" = "toothlessRoundedSeriflessHBB"

[prime.d.variants.tailed-serifed]
rank = 9
description = "`d` with a bottom-right tail and top serif"
selector.d = "tailedSerifed"
selector."d/sansSerif" = "tailedSerifless"
selector."d/phoneticLeft" = "toothedTopSerifed"
selector."d/hookBottomBase" = "toothedTopSerifed"
selector.dCurlyTail = "toothedTopSerifed"
selector.dHookTop = "tailedSerifless"
selector."dHookTop/hookBottomBase" = "toothedSerifless"



[prime.e]
sampler = "e"
tag = "cv30"

[prime.e.variants.flat-crossbar]
rank = 1
description = "`e` with flat crossbar"
selector.e = "flatCrossbar"
selector.ae = "flatCrossbar"
selector.oe = "flatCrossbar"
selector."ue/e" = "flatCrossbar"
selector.Schwa = "flatCrossbar"
selector.schwa = "flatCrossbar"

[prime.e.variants.rounded]
rank = 2
description = "`e` with more rounded shape"
selector.e = "rounded"
selector.ae = "rounded"
selector.oe = "rounded"
selector."ue/e" = "rounded"
selector.Schwa = "rounded"
selector.schwa = "rounded"



[prime.f]
sampler = "f"
tag = "cv31"

[prime.f.variants.serifless]
rank = 1
description = "`f` without bottom serif, hook or extension"
selector.f = "serifless"
selector."f/sansSerif" = "serifless"
selector."f/compLigLeft1" = "flatHookCLC1"
selector."f/compLigLeft2" = "flatHookCLC2"
selector."f/phoneticLeft" = "seriflessCrossbarAtXHeight"
selector.fLenis = "serifless"
selector.fLTail = "tailed"
selector.dotlessjWithStrokeAndHook = "tailed"

[prime.f.variants.serifed]
rank = 2
description = "`f` with bottom serif"
selector.f = "serifed"
selector."f/sansSerif" = "serifless"
selector."f/compLigLeft1" = "flatHookSerifedCLC1"
selector."f/compLigLeft2" = "flatHookSerifedCLC2"
selector."f/phoneticLeft" = "serifedCrossbarAtXHeight"
selector.fLenis = "serifless"
selector.fLTail = "tailed"
selector.dotlessjWithStrokeAndHook = "tailed"

[prime.f.variants.tailed]
rank = 3
description = "`f` with bottom hook"
selector.f = "tailed"
selector."f/sansSerif" = "tailed"
selector."f/compLigLeft1" = "flatHookTailedCLC1"
selector."f/compLigLeft2" = "flatHookTailedCLC2"
selector."f/phoneticLeft" = "tailedCrossbarAtXHeight"
selector.fLenis = "serifless"
selector.fLTail = "tailed"
selector.dotlessjWithStrokeAndHook = "tailed"

[prime.f.variants.extended]
rank = 4
description = "`f` with bar extended to descender"
selector.f = "extended"
selector."f/sansSerif" = "extended"
selector."f/compLigLeft1" = "flatHookExtendedCLC1"
selector."f/compLigLeft2" = "flatHookExtendedCLC2"
selector."f/phoneticLeft" = "extendedCrossbarAtXHeight"
selector.fLenis = "serifless"
selector.fLTail = "tailed"
selector.dotlessjWithStrokeAndHook = "tailed"

[prime.f.variants.diagonal-tailed]
rank = 5
description = "`f` with bottom diagonal tail"
selector.f = "diagonalTailed"
selector."f/sansSerif" = "diagonalTailed"
selector."f/compLigLeft1" = "flatHookDiagonalTailedCLC1"
selector."f/compLigLeft2" = "flatHookDiagonalTailedCLC2"
selector."f/phoneticLeft" = "diagonalTailedCrossbarAtXHeight"
selector.fLenis = "serifless"
selector.fLTail = "tailed"
selector.dotlessjWithStrokeAndHook = "tailed"

[prime.f.variants.serifless-crossbar-at-x-height]
rank = 6
description = "`f` without bottom serif, hook or extension; crossbar is placed right at X-height"
selector.f = "seriflessCrossbarAtXHeight"
selector."f/sansSerif" = "seriflessCrossbarAtXHeight"
selector."f/compLigLeft1" = "flatHookCLC1"
selector."f/compLigLeft2" = "flatHookCLC2"
selector."f/phoneticLeft" = "seriflessCrossbarAtXHeight"
selector.fLenis = "seriflessCrossbarAtXHeight"
selector.fLTail = "tailedCrossbarAtXHeight"
selector.dotlessjWithStrokeAndHook = "tailedCrossbarAtXHeight"

[prime.f.variants.serifed-crossbar-at-x-height]
rank = 7
description = "`f` with bottom serif; crossbar is placed right at X-height"
selector.f = "serifedCrossbarAtXHeight"
selector."f/sansSerif" = "seriflessCrossbarAtXHeight"
selector."f/compLigLeft1" = "flatHookSerifedCLC1"
selector."f/compLigLeft2" = "flatHookSerifedCLC2"
selector."f/phoneticLeft" = "serifedCrossbarAtXHeight"
selector.fLenis = "seriflessCrossbarAtXHeight"
selector.fLTail = "tailedCrossbarAtXHeight"
selector.dotlessjWithStrokeAndHook = "tailedCrossbarAtXHeight"

[prime.f.variants.tailed-crossbar-at-x-height]
rank = 8
description = "`f` with bottom hook; crossbar is placed right at X-height"
selector.f = "tailedCrossbarAtXHeight"
selector."f/sansSerif" = "tailedCrossbarAtXHeight"
selector."f/compLigLeft1" = "flatHookTailedCLC1"
selector."f/compLigLeft2" = "flatHookTailedCLC2"
selector."f/phoneticLeft" = "tailedCrossbarAtXHeight"
selector.fLenis = "seriflessCrossbarAtXHeight"
selector.fLTail = "tailedCrossbarAtXHeight"
selector.dotlessjWithStrokeAndHook = "tailedCrossbarAtXHeight"

[prime.f.variants.extended-crossbar-at-x-height]
rank = 9
description = "`f` with bar extended to descender; crossbar is placed right at X-height"
selector.f = "extendedCrossbarAtXHeight"
selector."f/sansSerif" = "extendedCrossbarAtXHeight"
selector."f/compLigLeft1" = "flatHookExtendedCLC1"
selector."f/compLigLeft2" = "flatHookExtendedCLC2"
selector."f/phoneticLeft" = "extendedCrossbarAtXHeight"
selector.fLenis = "seriflessCrossbarAtXHeight"
selector.fLTail = "tailedCrossbarAtXHeight"
selector.dotlessjWithStrokeAndHook = "tailedCrossbarAtXHeight"

[prime.f.variants.diagonal-tailed-crossbar-at-x-height]
rank = 10
description = "`f` with bottom diagonal tail; crossbar is placed right at X-height"
selector.f = "diagonalTailedCrossbarAtXHeight"
selector."f/sansSerif" = "diagonalTailedCrossbarAtXHeight"
selector."f/compLigLeft1" = "flatHookDiagonalTailedCLC1"
selector."f/compLigLeft2" = "flatHookDiagonalTailedCLC2"
selector."f/phoneticLeft" = "diagonalTailedCrossbarAtXHeight"
selector.fLenis = "seriflessCrossbarAtXHeight"
selector.fLTail = "tailedCrossbarAtXHeight"
selector.dotlessjWithStrokeAndHook = "tailedCrossbarAtXHeight"

[prime.f.variants.flat-hook]
rank = 11
description = "`f` with flat top hook, without bottom serif, hook or extension"
selector.f = "flatHook"
selector."f/sansSerif" = "flatHook"
selector."f/compLigLeft1" = "flatHookCLC1"
selector."f/compLigLeft2" = "flatHookCLC2"
selector."f/phoneticLeft" = "flatHookCrossbarAtXHeight"
selector.fLenis = "flatHook"
selector.fLTail = "flatHookTailed"
selector.dotlessjWithStrokeAndHook = "flatHookTailed"

[prime.f.variants.flat-hook-serifed]
rank = 12
description = "`f` with flat top hook and bottom serif"
selector.f = "flatHookSerifed"
selector."f/sansSerif" = "flatHook"
selector."f/compLigLeft1" = "flatHookSerifedCLC1"
selector."f/compLigLeft2" = "flatHookSerifedCLC2"
selector."f/phoneticLeft" = "flatHookSerifedCrossbarAtXHeight"
selector.fLenis = "flatHook"
selector.fLTail = "flatHookTailed"
selector.dotlessjWithStrokeAndHook = "flatHookTailed"

[prime.f.variants.flat-hook-tailed]
rank = 13
description = "`f` with flat top hook and bottom hook"
selector.f = "flatHookTailed"
selector."f/sansSerif" = "flatHookTailed"
selector."f/compLigLeft1" = "flatHookTailedCLC1"
selector."f/compLigLeft2" = "flatHookTailedCLC2"
selector."f/phoneticLeft" = "flatHookTailedCrossbarAtXHeight"
selector.fLenis = "flatHook"
selector.fLTail = "flatHookTailed"
selector.dotlessjWithStrokeAndHook = "flatHookTailed"

[prime.f.variants.flat-hook-extended]
rank = 14
description = "`f` with flat top hook and bar extended to descender"
selector.f = "flatHookExtended"
selector."f/sansSerif" = "flatHookExtended"
selector."f/compLigLeft1" = "flatHookExtendedCLC1"
selector."f/compLigLeft2" = "flatHookExtendedCLC2"
selector."f/phoneticLeft" = "flatHookExtendedCrossbarAtXHeight"
selector.fLenis = "flatHook"
selector.fLTail = "flatHookTailed"
selector.dotlessjWithStrokeAndHook = "flatHookTailed"

[prime.f.variants.flat-hook-diagonal-tailed]
rank = 15
description = "`f` with flat hook and bottom diagonal tail"
selector.f = "flatHookDiagonalTailed"
selector."f/sansSerif" = "flatHookDiagonalTailed"
selector."f/compLigLeft1" = "flatHookDiagonalTailedCLC1"
selector."f/compLigLeft2" = "flatHookDiagonalTailedCLC2"
selector."f/phoneticLeft" = "flatHookDiagonalTailedCrossbarAtXHeight"
selector.fLenis = "flatHook"
selector.fLTail = "flatHookTailed"
selector.dotlessjWithStrokeAndHook = "flatHookTailed"

[prime.f.variants.flat-hook-crossbar-at-x-height]
rank = 16
description = "`f` with flat top hook, without bottom serif, hook or extension; crossbar is placed right at X-height"
selector.f = "flatHookCrossbarAtXHeight"
selector."f/sansSerif" = "flatHookCrossbarAtXHeight"
selector."f/compLigLeft1" = "flatHookCLC1"
selector."f/compLigLeft2" = "flatHookCLC2"
selector."f/phoneticLeft" = "flatHookCrossbarAtXHeight"
selector.fLenis = "flatHookCrossbarAtXHeight"
selector.fLTail = "flatHookTailedCrossbarAtXHeight"
selector.dotlessjWithStrokeAndHook = "flatHookTailedCrossbarAtXHeight"

[prime.f.variants.flat-hook-serifed-crossbar-at-x-height]
rank = 17
description = "`f` with flat top hook, bottom serif; crossbar is placed right at X-height"
selector.f = "flatHookSerifedCrossbarAtXHeight"
selector."f/sansSerif" = "flatHookCrossbarAtXHeight"
selector."f/compLigLeft1" = "flatHookSerifedCLC1"
selector."f/compLigLeft2" = "flatHookSerifedCLC2"
selector."f/phoneticLeft" = "flatHookSerifedCrossbarAtXHeight"
selector.fLenis = "flatHookCrossbarAtXHeight"
selector.fLTail = "flatHookTailedCrossbarAtXHeight"
selector.dotlessjWithStrokeAndHook = "flatHookTailedCrossbarAtXHeight"

[prime.f.variants.flat-hook-tailed-crossbar-at-x-height]
rank = 18
description = "`f` with flat top hook, bottom hook; crossbar is placed right at X-height"
selector.f = "flatHookTailedCrossbarAtXHeight"
selector."f/sansSerif" = "flatHookTailedCrossbarAtXHeight"
selector."f/compLigLeft1" = "flatHookTailedCLC1"
selector."f/compLigLeft2" = "flatHookTailedCLC2"
selector."f/phoneticLeft" = "flatHookTailedCrossbarAtXHeight"
selector.fLenis = "flatHookCrossbarAtXHeight"
selector.fLTail = "flatHookTailedCrossbarAtXHeight"
selector.dotlessjWithStrokeAndHook = "flatHookTailedCrossbarAtXHeight"

[prime.f.variants.flat-hook-extended-crossbar-at-x-height]
rank = 19
description = "`f` with flat top hook, bar extended to descender; crossbar is placed right at X-height"
selector.f = "flatHookExtendedCrossbarAtXHeight"
selector."f/sansSerif" = "flatHookExtendedCrossbarAtXHeight"
selector."f/compLigLeft1" = "flatHookExtendedCLC1"
selector."f/compLigLeft2" = "flatHookExtendedCLC2"
selector."f/phoneticLeft" = "flatHookExtendedCrossbarAtXHeight"
selector.fLenis = "flatHookCrossbarAtXHeight"
selector.fLTail = "flatHookTailedCrossbarAtXHeight"
selector.dotlessjWithStrokeAndHook = "flatHookTailedCrossbarAtXHeight"

[prime.f.variants.flat-hook-diagonal-tailed-crossbar-at-x-height]
rank = 20
description = "`f` with flat hook and bottom diagonal tail; crossbar is placed right at X-height"
selector.f = "flatHookDiagonalTailedCrossbarAtXHeight"
selector."f/sansSerif" = "flatHookDiagonalTailedCrossbarAtXHeight"
selector."f/compLigLeft1" = "flatHookDiagonalTailedCLC1"
selector."f/compLigLeft2" = "flatHookDiagonalTailedCLC2"
selector."f/phoneticLeft" = "flatHookDiagonalTailedCrossbarAtXHeight"
selector.fLenis = "flatHookCrossbarAtXHeight"
selector.fLTail = "flatHookTailedCrossbarAtXHeight"
selector.dotlessjWithStrokeAndHook = "flatHookTailedCrossbarAtXHeight"



[prime.g]
sampler = "g"
tag = "cv32"

[prime.g.variants.double-storey]
rank = 1
description = "Double-storey `g`"
selector.g = "doubleStorey"
selector."g/sansSerif" = "doubleStorey"
selector."gScript/sansSerif" = "singleStoreySerifless"
selector."gScript/slabSerif" = "singleStoreySerifed"
selector."gScript/hookTopBase" = "singleStoreySerifless"

[prime.g.variants.double-storey-open]
rank = 2
description = "Open Double-storey `g`, like Trebuchet MS or Fira Code"
selector.g = "openDoubleStorey"
selector."g/sansSerif" = "openDoubleStorey"
selector."gScript/sansSerif" = "singleStoreySerifless"
selector."gScript/slabSerif" = "singleStoreySerifed"
selector."gScript/hookTopBase" = "singleStoreySerifless"

[prime.g.variants.single-storey-serifless]
rank = 3
description = "Single-storey `g` without serifs"
selector.g = "singleStoreySerifless"
selector."g/sansSerif" = "singleStoreySerifless"
selector."gScript/sansSerif" = "singleStoreySerifless"
selector."gScript/slabSerif" = "singleStoreySerifless"
selector."gScript/hookTopBase" = "singleStoreySerifless"

[prime.g.variants.single-storey-serifed]
rank = 4
description = "Single-storey `g` with serif at top right"
selector.g = "singleStoreySerifed"
selector."g/sansSerif" = "singleStoreySerifless"
selector."gScript/sansSerif" = "singleStoreySerifed"
selector."gScript/slabSerif" = "singleStoreySerifed"
selector."gScript/hookTopBase" = "singleStoreySerifless"

[prime.g.variants.earless-corner]
rank = 5
description = "Earless (cornered top-right) single-storey `g`"
selector.g = "singleStoreyEarlessCorner"
selector."g/sansSerif" = "singleStoreyEarlessCorner"
selector."gScript/sansSerif" = "singleStoreyEarlessCorner"
selector."gScript/slabSerif" = "singleStoreyEarlessCorner"
selector."gScript/hookTopBase" = "singleStoreyEarlessCornerHTB"

[prime.g.variants.earless-rounded]
rank = 6
description = "Earless (rounded top-right) single-storey `g`"
selector.g = "singleStoreyEarlessRounded"
selector."g/sansSerif" = "singleStoreyEarlessRounded"
selector."gScript/sansSerif" = "singleStoreyEarlessRounded"
selector."gScript/slabSerif" = "singleStoreyEarlessRounded"
selector."gScript/hookTopBase" = "singleStoreyEarlessRoundedHTB"

[prime.g.variants.single-storey-flat-hook-serifless]
rank = 7
description = "Single-storey `g` with flat terminal hook and without serifs"
selector.g = "singleStoreyFlatHookSerifless"
selector."g/sansSerif" = "singleStoreyFlatHookSerifless"
selector."gScript/sansSerif" = "singleStoreyFlatHookSerifless"
selector."gScript/slabSerif" = "singleStoreyFlatHookSerifless"
selector."gScript/hookTopBase" = "singleStoreyFlatHookSerifless"

[prime.g.variants.single-storey-flat-hook-serifed]
rank = 8
description = "Single-storey `g` with top-right serif and flat terminal hook"
selector.g = "singleStoreyFlatHookSerifed"
selector."g/sansSerif" = "singleStoreyFlatHookSerifless"
selector."gScript/sansSerif" = "singleStoreyFlatHookSerifed"
selector."gScript/slabSerif" = "singleStoreyFlatHookSerifed"
selector."gScript/hookTopBase" = "singleStoreyFlatHookSerifless"

[prime.g.variants.single-storey-earless-corner-flat-hook]
rank = 9
description = "Earless (cornered top-right) single-storey `g` with flat terminal hook"
selector.g = "singleStoreyEarlessCornerFlatHook"
selector."g/sansSerif" = "singleStoreyEarlessCornerFlatHook"
selector."gScript/sansSerif" = "singleStoreyEarlessCornerFlatHook"
selector."gScript/slabSerif" = "singleStoreyEarlessCornerFlatHook"
selector."gScript/hookTopBase" = "singleStoreyEarlessCornerFlatHookHTB"

[prime.g.variants.single-storey-earless-rounded-flat-hook]
rank = 10
description = "Earless (rounded top-right) single-storey `g` with flat terminal hook"
selector.g = "singleStoreyEarlessRoundedFlatHook"
selector."g/sansSerif" = "singleStoreyEarlessRoundedFlatHook"
selector."gScript/sansSerif" = "singleStoreyEarlessRoundedFlatHook"
selector."gScript/slabSerif" = "singleStoreyEarlessRoundedFlatHook"
selector."gScript/hookTopBase" = "singleStoreyEarlessRoundedFlatHookHTB"



[prime.h]
sampler = "h"
tag = "cv33"

[prime.h.variants.straight]
rank = 1
description = "`h` with straight ending"
selector.h = "straight"
selector."h/sansSerif" = "straight"
selector.hHookTop = "straight"
selector.hHookTopLTail = "straight"
selector.heng = "straight"
selector."cyrl/shha" = "straight"

[prime.h.variants.tailed]
rank = 2
description = "`h` with curly tailed ending"
selector.h = "tailed"
selector."h/sansSerif" = "tailed"
selector.hHookTop = "tailed"
selector.hHookTopLTail = "straight"
selector.heng = "straight"
selector."cyrl/shha" = "straight"

[prime.h.variants.straight-motion-serifed]
rank = 3
description = "`h` with straight ending and motion serifs"
selector.h = "straightMotionSerifed"
selector."h/sansSerif" = "straight"
selector.hHookTop = "straightMotionSerifed"
selector.hHookTopLTail = "straightMotionSerifed"
selector.heng = "straightTopLeftSerifed"
selector."cyrl/shha" = "straightTopLeftSerifed"

[prime.h.variants.tailed-motion-serifed]
rank = 4
description = "`h` with curly tailed ending and motion serifs"
selector.h = "tailedMotionSerifed"
selector."h/sansSerif" = "tailed"
selector.hHookTop = "tailedMotionSerifed"
selector.heng = "straightTopLeftSerifed"
selector.hengLTail = "straightTopLeftSerifed"
selector."cyrl/shha" = "straightTopLeftSerifed"

[prime.h.variants.straight-top-left-serifed]
rank = 5
description = "`h` with straight ending and serif at top left"
selector.h = "straightTopLeftSerifed"
selector."h/sansSerif" = "straight"
selector.hHookTop = "straightTopLeftSerifed"
selector.hHookTopLTail = "straightTopLeftSerifed"
selector.heng = "straightTopLeftSerifed"
selector."cyrl/shha" = "straightTopLeftSerifed"



[prime.i]
sampler = "i"
tag = "cv34"

[prime.i.variants.serifed]
rank = 1
description = "Serifed `i`"
selector.dotlessi = "serifed"
selector."dotlessi/sansSerif" = "serifless"
selector."dotlessi/compLigRight" = "serifed"
selector."dotlessi/ital" = "tailedSerifed"

[prime.i.variants.zshaped]
rank = 2
description = "Z-shaped `i`"
selector.dotlessi = "zshaped"
selector."dotlessi/sansSerif" = "serifless"
selector."dotlessi/compLigRight" = "zshaped"
selector."dotlessi/ital" = "tailedSerifed"

[prime.i.variants.serifless]
rank = 3
description = "`i` like a straight line"
selector.dotlessi = "serifless"
selector."dotlessi/sansSerif" = "serifless"
selector."dotlessi/compLigRight" = "hooky"
selector."dotlessi/ital" = "tailed"

[prime.i.variants.hooky]
rank = 4
description = "Hooky `i`"
selector.dotlessi = "hooky"
selector."dotlessi/sansSerif" = "serifless"
selector."dotlessi/compLigRight" = "hooky"
selector."dotlessi/ital" = "tailedSerifed"

[prime.i.variants.hooky-bottom]
rank = 5
description = "`i` with a sharp-turning horizontal tail"
selector.dotlessi = "hookyBottom"
selector."dotlessi/sansSerif" = "serifless"
selector."dotlessi/compLigRight" = "zshaped"
selector."dotlessi/ital" = "tailed"

[prime.i.variants.serifed-asymmetric]
rank = 6
description = "`i` with shorter top serif and full bottom serif"
selector.dotlessi = "serifedAsymmetric"
selector."dotlessi/sansSerif" = "serifless"
selector."dotlessi/compLigRight" = "serifed"
selector."dotlessi/ital" = "tailedSerifed"

[prime.i.variants.tailed]
rank = 7
description = "`i` with curly tail"
selector.dotlessi = "tailed"
selector."dotlessi/sansSerif" = "tailed"
selector."dotlessi/compLigRight" = "tailedSerifed"
selector."dotlessi/ital" = "tailed"

[prime.i.variants.tailed-serifed]
rank = 8
description = "`i` with top serif and curly tail"
selector.dotlessi = "tailedSerifed"
selector."dotlessi/sansSerif" = "tailed"
selector."dotlessi/compLigRight" = "tailedSerifed"
selector."dotlessi/ital" = "tailedSerifed"

[prime.i.variants.flat-tailed]
rank = 9
description = "`i` with curly-then-flat tail"
selector.dotlessi = "flatTailed"
selector."dotlessi/sansSerif" = "flatTailed"
selector."dotlessi/compLigRight" = "serifedFlatTailed"
selector."dotlessi/ital" = "flatTailed"

[prime.i.variants.serifed-flat-tailed]
rank = 10
description = "`i` with top serif and curly-then-flat tail"
selector.dotlessi = "serifedFlatTailed"
selector."dotlessi/sansSerif" = "flatTailed"
selector."dotlessi/compLigRight" = "serifedFlatTailed"
selector."dotlessi/ital" = "serifedFlatTailed"

[prime.i.variants.diagonal-tailed]
rank = 11
description = "`i` with diagonal tail"
selector.dotlessi = "diagonalTailed"
selector."dotlessi/sansSerif" = "diagonalTailed"
selector."dotlessi/compLigRight" = "serifedDiagonalTailed"
selector."dotlessi/ital" = "diagonalTailed"

[prime.i.variants.serifed-diagonal-tailed]
rank = 12
description = "`i` with top serif and diagonal tail"
selector.dotlessi = "serifedDiagonalTailed"
selector."dotlessi/sansSerif" = "diagonalTailed"
selector."dotlessi/compLigRight" = "serifedDiagonalTailed"
selector."dotlessi/ital" = "serifedDiagonalTailed"



[prime.j]
sampler = "j"
tag = "cv35"

[prime.j.variants.serifless]
rank = 1
description = "`j` without serif"
selector.dotlessj = "serifless"
selector."dotlessj/sansSerif" = "serifless"
selector.dotlessjCurlyTail = "serifless"

[prime.j.variants.serifed]
rank = 2
description = "`j` with top serif"
selector.dotlessj = "serifed"
selector."dotlessj/sansSerif" = "serifless"
selector.dotlessjCurlyTail = "serifed"

[prime.j.variants.straight-line]
rank = 3
description = "`j` like a straight line"
selector.dotlessj = "straightLine"
selector."dotlessj/sansSerif" = "straightLine"
selector.dotlessjCurlyTail = "serifless"

[prime.j.variants.hooky]
rank = 4
description = "`j` like a straight line with top serif"
selector.dotlessj = "hooky"
selector."dotlessj/sansSerif" = "straightLine"
selector.dotlessjCurlyTail = "serifed"

[prime.j.variants.flat-hook-serifless]
rank = 5
description = "`j` with flat terminal hook"
selector.dotlessj = "flatHookSerifless"
selector."dotlessj/sansSerif" = "flatHookSerifless"
selector.dotlessjCurlyTail = "serifless"

[prime.j.variants.flat-hook-serifed]
rank = 6
description = "`j` with flat terminal hook and top serif"
selector.dotlessj = "flatHookSerifed"
selector."dotlessj/sansSerif" = "flatHookSerifless"
selector.dotlessjCurlyTail = "serifed"

[prime.j.variants.diagonal-tailed-serifless]
rank = 7
description = "`j` with diagonal tail"
selector.dotlessj = "diagonalTailedSerifless"
selector."dotlessj/sansSerif" = "diagonalTailedSerifless"
selector.dotlessjCurlyTail = "serifless"

[prime.j.variants.diagonal-tailed-serifed]
rank = 8
description = "`j` with top serif and diagonal tail"
selector.dotlessj = "diagonalTailedSerifed"
selector."dotlessj/sansSerif" = "diagonalTailedSerifless"
selector.dotlessjCurlyTail = "serifed"



[prime.k]
sampler = "k"
tag = "cv36"

[prime.k.variants.straight-serifless]
rank = 1
rankGroup = 1
description = "`k` with standard shape, and without serifs"
selector.k = "straightSerifless"
selector."k/sansSerif" = "straightSerifless"
selector.kHookTop = "straightSerifless"
selector.kDescender = "straightSerifless"

[prime.k.variants.curly-serifless]
rank = 2
rankGroup = 1
description = "Slightly curly `k`, like Iosevka 2.x, and without serifs"
selector.k = "curlySerifless"
selector."k/sansSerif" = "curlySerifless"
selector.kHookTop = "curlySerifless"
selector.kDescender = "curlySerifless"

[prime.k.variants.cursive-serifless]
rank = 3
rankGroup = 1
description = "`k` with a cursive loop, and without serifs"
selector.k = "cursiveSerifless"
selector."k/sansSerif" = "cursiveSerifless"
selector.kHookTop = "cursiveSerifless"
selector.kDescender = "cursiveSerifless"

[prime.k.variants.diagonal-tailed-cursive-serifless]
rank = 4
rankGroup = 1
description = "`k` with a cursive loop and diagonal tail, and without serifs"
selector.k = "diagonalTailedSerifedCursiveSerifless"
selector."k/sansSerif" = "diagonalTailedSerifedCursiveSerifless"
selector.kHookTop = "diagonalTailedSerifedCursiveSerifless"
selector.kDescender = "cursiveSerifless"

[prime.k.variants.symmetric-touching-serifless]
rank = 5
rankGroup = 1
description = "`k` with symmetric legs disconnected to the vertical bar, and without serifs"
selector.k = "symmetricTouchingSerifless"
selector."k/sansSerif" = "symmetricTouchingSerifless"
selector.kHookTop = "symmetricTouchingSerifless"
selector.kDescender = "symmetricTouchingSerifless"

[prime.k.variants.symmetric-connected-serifless]
rank = 6
rankGroup = 1
description = "`k` with symmetric legs connected to the vertical bar, and without serifs"
selector.k = "symmetricConnectedSerifless"
selector."k/sansSerif" = "symmetricConnectedSerifless"
selector.kHookTop = "symmetricConnectedSerifless"
selector.kDescender = "symmetricConnectedSerifless"

[prime.k.variants.straight-top-left-serifed]
rank = 7
rankGroup = 2
description = "`k` with serifs at top left"
selector.k = "straightTopLeftSerifed"
selector."k/sansSerif" = "straightSerifless"
selector.kHookTop = "straightSerifless"
selector.kDescender = "straightTopLeftSerifed"

[prime.k.variants.curly-top-left-serifed]
rank = 8
rankGroup = 2
description = "Slightly curly `k`, like Iosevka 2.x, with serifs at top left"
selector.k = "curlyTopLeftSerifed"
selector."k/sansSerif" = "curlySerifless"
selector.kHookTop = "curlySerifless"
selector.kDescender = "curlyTopLeftSerifed"

[prime.k.variants.cursive-top-left-serifed]
rank = 9
rankGroup = 2
description = "`k` with a cursive loop and serifs at top left"
selector.k = "cursiveTopLeftSerifed"
selector."k/sansSerif" = "cursiveSerifless"
selector.kHookTop = "cursiveSerifless"
selector.kDescender = "cursiveTopLeftSerifed"

[prime.k.variants.diagonal-tailed-cursive-top-left-serifed]
rank = 10
rankGroup = 2
description = "`k` with a cursive loop, diagonal tail and serifs at top left"
selector.k = "diagonalTailedSerifedCursiveTopLeftSerifed"
selector."k/sansSerif" = "diagonalTailedSerifedCursiveSerifless"
selector.kHookTop = "diagonalTailedSerifedCursiveSerifless"
selector.kDescender = "cursiveTopLeftSerifed"

[prime.k.variants.symmetric-touching-top-left-serifed]
rank = 11
rankGroup = 2
description = "`k` with symmetric legs disconnected to the vertical bar and serifs at top left"
selector.k = "symmetricTouchingTopLeftSerifed"
selector."k/sansSerif" = "symmetricTouchingSerifless"
selector.kHookTop = "symmetricTouchingSerifless"
selector.kDescender = "symmetricTouchingTopLeftSerifed"

[prime.k.variants.symmetric-connected-top-left-serifed]
rank = 12
rankGroup = 2
description = "`k` with symmetric legs connected to the vertical bar and serifs at top left"
selector.k = "symmetricConnectedTopLeftSerifed"
selector."k/sansSerif" = "symmetricConnectedSerifless"
selector.kHookTop = "symmetricConnectedSerifless"
selector.kDescender = "symmetricConnectedTopLeftSerifed"

[prime.k.variants.straight-bottom-right-serifed]
rank = 13
rankGroup = 3
description = "`k` with serifs at bottom right"
selector.k = "straightBottomRightSerifed"
selector."k/sansSerif" = "straightSerifless"
selector.kHookTop = "straightBottomRightSerifed"
selector.kDescender = "straightBottomRightSerifed"

[prime.k.variants.curly-bottom-right-serifed]
rank = 14
rankGroup = 3
description = "Slightly curly `k`, like Iosevka 2.x, with serifs at bottom right"
selector.k = "curlyBottomRightSerifed"
selector."k/sansSerif" = "curlySerifless"
selector.kHookTop = "curlyBottomRightSerifed"
selector.kDescender = "curlyBottomRightSerifed"

[prime.k.variants.cursive-bottom-right-serifed]
rank = 15
rankGroup = 3
description = "`k` with a cursive loop and serifs at bottom right"
selector.k = "cursiveBottomRightSerifed"
selector."k/sansSerif" = "cursiveSerifless"
selector.kHookTop = "cursiveBottomRightSerifed"
selector.kDescender = "cursiveBottomRightSerifed"

[prime.k.variants.symmetric-touching-bottom-right-serifed]
rank = 16
rankGroup = 3
description = "`k` with symmetric legs disconnected to the vertical bar and serifs at bottom right"
selector.k = "symmetricTouchingBottomRightSerifed"
selector."k/sansSerif" = "symmetricTouchingSerifless"
selector.kHookTop = "symmetricTouchingBottomRightSerifed"
selector.kDescender = "symmetricTouchingBottomRightSerifed"

[prime.k.variants.symmetric-connected-bottom-right-serifed]
rank = 17
rankGroup = 3
description = "`k` with symmetric legs connected to the vertical bar and serifs at bottom right"
selector.k = "symmetricConnectedBottomRightSerifed"
selector."k/sansSerif" = "symmetricConnectedSerifless"
selector.kHookTop = "symmetricConnectedBottomRightSerifed"
selector.kDescender = "symmetricConnectedBottomRightSerifed"

[prime.k.variants.straight-top-left-and-bottom-right-serifed]
rank = 18
rankGroup = 4
description = "`k` with serifs at top left and bottom right"
selector.k = "straightTopLeftAndBottomRightSerifed"
selector."k/sansSerif" = "straightSerifless"
selector.kHookTop = "straightBottomRightSerifed"
selector.kDescender = "straightTopLeftAndBottomRightSerifed"

[prime.k.variants.curly-top-left-and-bottom-right-serifed]
rank = 19
rankGroup = 4
description = "Slightly curly `k`, like Iosevka 2.x, with serifs at top left and bottom right"
selector.k = "curlyTopLeftAndBottomRightSerifed"
selector."k/sansSerif" = "curlySerifless"
selector.kHookTop = "curlyBottomRightSerifed"
selector.kDescender = "curlyTopLeftAndBottomRightSerifed"

[prime.k.variants.cursive-top-left-and-bottom-right-serifed]
rank = 20
rankGroup = 4
description = "`k` with a cursive loop and serifs at top left and bottom right"
selector.k = "cursiveTopLeftAndBottomRightSerifed"
selector."k/sansSerif" = "cursiveSerifless"
selector.kHookTop = "cursiveBottomRightSerifed"
selector.kDescender = "cursiveTopLeftAndBottomRightSerifed"

[prime.k.variants.symmetric-touching-top-left-and-bottom-right-serifed]
rank = 21
rankGroup = 4
description = "`k` with symmetric legs disconnected to the vertical bar and serifs at top left and bottom right"
selector.k = "symmetricTouchingTopLeftAndBottomRightSerifed"
selector."k/sansSerif" = "symmetricTouchingSerifless"
selector.kHookTop = "symmetricTouchingBottomRightSerifed"
selector.kDescender = "symmetricTouchingTopLeftAndBottomRightSerifed"

[prime.k.variants.symmetric-connected-top-left-and-bottom-right-serifed]
rank = 22
rankGroup = 4
description = "`k` with symmetric legs connected to the vertical bar and serifs at top left and bottom right"
selector.k = "symmetricConnectedTopLeftAndBottomRightSerifed"
selector."k/sansSerif" = "symmetricConnectedSerifless"
selector.kHookTop = "symmetricConnectedBottomRightSerifed"
selector.kDescender = "symmetricConnectedTopLeftAndBottomRightSerifed"

[prime.k.variants.straight-serifed]
rank = 23
rankGroup = 4
description = "`k` with serifs"
selector.k = "straightSerifed"
selector."k/sansSerif" = "straightSerifless"
selector.kHookTop = "straightSerifed"
selector.kDescender = "straightSerifed"

[prime.k.variants.curly-serifed]
rank = 24
rankGroup = 4
description = "Slightly curly `k`, like Iosevka 2.x, with serifs"
selector.k = "curlySerifed"
selector."k/sansSerif" = "curlySerifless"
selector.kHookTop = "curlySerifed"
selector.kDescender = "curlySerifed"

[prime.k.variants.cursive-serifed]
rank = 25
rankGroup = 4
description = "`k` with a cursive loop and serifs"
selector.k = "cursiveSerifed"
selector."k/sansSerif" = "cursiveSerifless"
selector.kHookTop = "cursiveSerifed"
selector.kDescender = "cursiveSerifed"

[prime.k.variants.symmetric-touching-serifed]
rank = 26
rankGroup = 4
description = "`k` with symmetric legs disconnected to the vertical bar and serifs"
selector.k = "symmetricTouchingSerifed"
selector."k/sansSerif" = "symmetricTouchingSerifless"
selector.kHookTop = "symmetricTouchingSerifed"
selector.kDescender = "symmetricTouchingSerifed"

[prime.k.variants.symmetric-connected-serifed]
rank = 27
rankGroup = 4
description = "`k` with symmetric legs connected to the vertical bar and serifs"
selector.k = "symmetricConnectedSerifed"
selector."k/sansSerif" = "symmetricConnectedSerifless"
selector.kHookTop = "symmetricConnectedSerifed"
selector.kDescender = "symmetricConnectedSerifed"



[prime.l]
sampler = "l"
tag = "cv37"

[prime.l.variants.serifed]
rank = 1
description = "Serifed `l`"
selector.l = "serifed"
selector."l/sansSerif" = "serifless"
selector."l/compLigRight" = "serifed"
selector."l/reduced/decompress" = "serifed"
selector."l/reduced/rtail" = "hookyRTail"
selector."l/reduced/rtailDec" = "hookyRTailDec"
selector."l/phoneticLeft" = "hookyPL"
selector.lCurlyTail = "hooky"
selector.lyogh = "hooky"

[prime.l.variants.serifless]
rank = 2
description = "`l` like a straight line"
selector.l = "serifless"
selector."l/sansSerif" = "serifless"
selector."l/compLigRight" = "hooky"
selector."l/reduced/decompress" = "seriflessDec"
selector."l/reduced/rtail" = "seriflessRTail"
selector."l/reduced/rtailDec" = "seriflessRTailDec"
selector."l/phoneticLeft" = "seriflessPL"
selector.lCurlyTail = "serifless"
selector.lyogh = "serifless"

[prime.l.variants.hooky]
rank = 3
description = "Hooky `l`"
selector.l = "hooky"
selector."l/sansSerif" = "serifless"
selector."l/compLigRight" = "hooky"
selector."l/reduced/decompress" = "hookyDec"
selector."l/reduced/rtail" = "hookyRTail"
selector."l/reduced/rtailDec" = "hookyRTailDec"
selector."l/phoneticLeft" = "hookyPL"
selector.lCurlyTail = "hooky"
selector.lyogh = "hooky"

[prime.l.variants.zshaped]
rank = 4
description = "Z-shaped `l`"
selector.l = "zshaped"
selector."l/sansSerif" = "serifless"
selector."l/compLigRight" = "zshaped"
selector."l/reduced/decompress" = "zshaped"
selector."l/reduced/rtail" = "hookyRTail"
selector."l/reduced/rtailDec" = "hookyRTailDec"
selector."l/phoneticLeft" = "hookyPL"
selector.lCurlyTail = "hooky"
selector.lyogh = "hooky"

[prime.l.variants.hooky-bottom]
rank = 5
description = "`l` with a straight sharp-turning horizontal tail"
selector.l = "hookyBottom"
selector."l/sansSerif" = "serifless"
selector."l/compLigRight" = "zshaped"
selector."l/reduced/decompress" = "hookyBottomDec"
selector."l/reduced/rtail" = "seriflessRTail"
selector."l/reduced/rtailDec" = "seriflessRTailDec"
selector."l/phoneticLeft" = "seriflessPL"
selector.lCurlyTail = "serifless"
selector.lyogh = "serifless"

[prime.l.variants.serifed-asymmetric]
rank = 6
description = "`l` with shorter top serif and full bottom serif"
selector.l = "serifedAsymmetric"
selector."l/sansSerif" = "serifless"
selector."l/compLigRight" = "serifed"
selector."l/reduced/decompress" = "serifedAsymmetric"
selector."l/reduced/rtail" = "hookyRTail"
selector."l/reduced/rtailDec" = "hookyRTailDec"
selector."l/phoneticLeft" = "hookyPL"
selector.lCurlyTail = "hooky"
selector.lyogh = "hooky"

[prime.l.variants.tailed]
rank = 7
description = "`l` with curly tail"
selector.l = "tailed"
selector."l/sansSerif" = "tailed"
selector."l/compLigRight" = "tailedSerifed"
selector."l/reduced/decompress" = "tailedDec"
selector."l/reduced/rtail" = "seriflessRTail"
selector."l/reduced/rtailDec" = "seriflessRTailDec"
selector."l/phoneticLeft" = "seriflessPL"
selector.lCurlyTail = "serifless"
selector.lyogh = "serifless"

[prime.l.variants.tailed-serifed]
rank = 8
description = "`l` with top serif and curly tail"
selector.l = "tailedSerifed"
selector."l/sansSerif" = "tailed"
selector."l/compLigRight" = "tailedSerifed"
selector."l/reduced/decompress" = "tailedSerifed"
selector."l/reduced/rtail" = "hookyRTail"
selector."l/reduced/rtailDec" = "hookyRTailDec"
selector."l/phoneticLeft" = "hookyPL"
selector.lCurlyTail = "hooky"
selector.lyogh = "hooky"

[prime.l.variants.flat-tailed]
rank = 9
description = "`l` with curly-then-flat tail"
selector.l = "flatTailed"
selector."l/sansSerif" = "flatTailed"
selector."l/compLigRight" = "serifedFlatTailed"
selector."l/reduced/decompress" = "flatTailedDec"
selector."l/reduced/rtail" = "seriflessRTail"
selector."l/reduced/rtailDec" = "seriflessRTailDec"
selector."l/phoneticLeft" = "seriflessPL"
selector.lCurlyTail = "serifless"
selector.lyogh = "serifless"

[prime.l.variants.serifed-flat-tailed]
rank = 10
description = "`l` with top serif and curly-then-flat tail"
selector.l = "serifedFlatTailed"
selector."l/sansSerif" = "flatTailed"
selector."l/compLigRight" = "serifedFlatTailed"
selector."l/reduced/decompress" = "serifedFlatTailed"
selector."l/reduced/rtail" = "hookyRTail"
selector."l/reduced/rtailDec" = "hookyRTailDec"
selector."l/phoneticLeft" = "hookyPL"
selector.lCurlyTail = "hooky"
selector.lyogh = "hooky"

[prime.l.variants.diagonal-tailed]
rank = 11
description = "`l` with diagonal tail"
selector.l = "diagonalTailed"
selector."l/sansSerif" = "diagonalTailed"
selector."l/compLigRight" = "serifedDiagonalTailed"
selector."l/reduced/decompress" = "diagonalTailedDec"
selector."l/reduced/rtail" = "seriflessRTail"
selector."l/reduced/rtailDec" = "seriflessRTailDec"
selector."l/phoneticLeft" = "seriflessPL"
selector.lCurlyTail = "serifless"
selector.lyogh = "serifless"

[prime.l.variants.serifed-diagonal-tailed]
rank = 12
description = "`l` with top serif and diagonal tail"
selector.l = "serifedDiagonalTailed"
selector."l/sansSerif" = "diagonalTailed"
selector."l/compLigRight" = "serifedDiagonalTailed"
selector."l/reduced/decompress" = "serifedDiagonalTailed"
selector."l/reduced/rtail" = "hookyRTail"
selector."l/reduced/rtailDec" = "hookyRTailDec"
selector."l/phoneticLeft" = "hookyPL"
selector.lCurlyTail = "hooky"
selector.lyogh = "hooky"


[prime.m]
sampler = "m"
tag = "cv38"

[prime.m.variants.normal]
rank = 1
description = "`m` with normal middle leg, touching the baseline"
selector.m = "normal"
selector."m/sansSerif" = "normal"
selector."cyrl/te.italic" = "normal"
selector.mLTail = "normal"

[prime.m.variants.short-leg]
rank = 2
description = "`m` with shorter middle leg, like Ubuntu Mono"
selector.m = "shortLeg"
selector."m/sansSerif" = "shortLeg"
selector."cyrl/te.italic" = "normal"
selector.mLTail = "shortLeg"

[prime.m.variants.tailed]
rank = 3
description = "`m` with normal middle leg, touching the baseline, and a curly tail"
selector.m = "tailed"
selector."m/sansSerif" = "tailed"
selector."cyrl/te.italic" = "tailed"
selector.mLTail = "normal"

[prime.m.variants.short-leg-tailed]
rank = 4
description = "`m` with shorter middle leg, like Ubuntu Mono, and a curly tail"
selector.m = "shortLegTailed"
selector."m/sansSerif" = "shortLegTailed"
selector."cyrl/te.italic" = "tailed"
selector.mLTail = "shortLeg"

[prime.m.variants.earless-corner-double-arch]
rank = 5
description = "Earless (corner top-left) `m` with normal middle leg touching baseline"
selector.m = "earlessCornerDoubleArch"
selector."m/sansSerif" = "earlessCornerDoubleArch"
selector."cyrl/te.italic" = "normal"
selector.mLTail = "earlessCornerDoubleArch"

[prime.m.variants.earless-corner-double-arch-short-leg]
rank = 6
description = "Earless (corner top-left) `m` with a shorter middle leg like Ubuntu Mono"
selector.m = "earlessCornerDoubleArchShortLeg"
selector."m/sansSerif" = "earlessCornerDoubleArchShortLeg"
selector."cyrl/te.italic" = "shortLeg"
selector.mLTail = "earlessCornerDoubleArchShortLeg"

[prime.m.variants.earless-corner-double-arch-tailed]
rank = 7
description = "Earless (corner top-left) `m` with normal middle leg touching baseline, and a curly tail"
selector.m = "earlessCornerDoubleArchTailed"
selector."m/sansSerif" = "earlessCornerDoubleArchTailed"
selector."cyrl/te.italic" = "tailed"
selector.mLTail = "earlessCornerDoubleArch"

[prime.m.variants.earless-corner-double-arch-short-leg-tailed]
rank = 8
description = "Earless (corner top-left) `m` with a shorter middle leg like Ubuntu Mono, and a curly tail"
selector.m = "earlessCornerDoubleArchShortLegTailed"
selector."m/sansSerif" = "earlessCornerDoubleArchShortLegTailed"
selector."cyrl/te.italic" = "shortLeg"
selector.mLTail = "earlessCornerDoubleArchShortLeg"

[prime.m.variants.earless-rounded-double-arch]
rank = 9
description = "Earless (rounded top-left) `m` with normal middle leg touching baseline"
selector.m = "earlessRoundedDoubleArch"
selector."m/sansSerif" = "earlessRoundedDoubleArch"
selector."cyrl/te.italic" = "normal"
selector.mLTail = "earlessRoundedDoubleArch"

[prime.m.variants.earless-rounded-double-arch-short-leg]
rank = 10
description = "Earless (rounded top-left) `m` with a shorter middle leg like Ubuntu Mono"
selector.m = "earlessRoundedDoubleArchShortLeg"
selector."m/sansSerif" = "earlessRoundedDoubleArchShortLeg"
selector."cyrl/te.italic" = "shortLeg"
selector.mLTail = "earlessRoundedDoubleArchShortLeg"

[prime.m.variants.earless-rounded-double-arch-tailed]
rank = 11
description = "Earless (rounded top-left) `m` with normal middle leg touching baseline, and a curly tail"
selector.m = "earlessRoundedDoubleArchTailed"
selector."m/sansSerif" = "earlessRoundedDoubleArchTailed"
selector."cyrl/te.italic" = "tailed"
selector.mLTail = "earlessRoundedDoubleArch"

[prime.m.variants.earless-rounded-double-arch-short-leg-tailed]
rank = 12
description = "Earless (rounded top-left) `m` with a shorter middle leg like Ubuntu Mono, and a curly tail"
selector.m = "earlessRoundedDoubleArchShortLegTailed"
selector."m/sansSerif" = "earlessRoundedDoubleArchShortLegTailed"
selector."cyrl/te.italic" = "shortLeg"
selector.mLTail = "earlessRoundedDoubleArchShortLeg"

[prime.m.variants.earless-single-arch]
rank = 13
description = "Earless (single-arch) `m` with normal middle leg touching baseline"
selector.m = "earlessSingleArch"
selector."m/sansSerif" = "earlessSingleArch"
selector."cyrl/te.italic" = "normal"
selector.mLTail = "earlessSingleArch"

[prime.m.variants.earless-single-arch-short-leg]
rank = 14
description = "Earless (single-arch) `m` with a shorter middle leg like Ubuntu Mono"
selector.m = "earlessSingleArchShortLeg"
selector."m/sansSerif" = "earlessSingleArchShortLeg"
selector."cyrl/te.italic" = "shortLeg"
selector.mLTail = "earlessSingleArchShortLeg"

[prime.m.variants.earless-single-arch-tailed]
rank = 15
description = "Earless (single-arch) `m` with normal middle leg touching baseline, and a curly tail"
selector.m = "earlessSingleArchTailed"
selector."m/sansSerif" = "earlessSingleArchTailed"
selector."cyrl/te.italic" = "tailed"
selector.mLTail = "earlessSingleArch"

[prime.m.variants.earless-single-arch-short-leg-tailed]
rank = 16
description = "Earless (single-arch) `m` with a shorter middle leg like Ubuntu Mono, and a curly tail"
selector.m = "earlessSingleArchShortLegTailed"
selector."m/sansSerif" = "earlessSingleArchShortLegTailed"
selector."cyrl/te.italic" = "shortLeg"
selector.mLTail = "earlessSingleArchShortLeg"

[prime.m.variants.top-left-serifed]
rank = 17
description = "`m` with serif at top left, normal middle leg touching baseline"
selector.m = "topLeftSerifed"
selector."m/sansSerif" = "normal"
selector."cyrl/te.italic" = "topLeftSerifed"
selector.mLTail = "topLeftSerifed"

[prime.m.variants.short-leg-top-left-serifed]
rank = 18
description = "`m` with serif at top left, a shorter middle leg like Ubuntu Mono"
selector.m = "shortLegTopLeftSerifed"
selector."m/sansSerif" = "shortLeg"
selector."cyrl/te.italic" = "topLeftSerifed"
selector.mLTail = "shortLegTopLeftSerifed"

[prime.m.variants.tailed-top-left-serifed]
rank = 19
description = "`m` with serif at top left, normal middle leg touching baseline, and a curly tail"
selector.m = "tailedTopLeftSerifed"
selector."m/sansSerif" = "tailed"
selector."cyrl/te.italic" = "tailedTopLeftSerifed"
selector.mLTail = "topLeftSerifed"

[prime.m.variants.short-leg-tailed-top-left-serifed]
rank = 20
description = "`m` with serif at top left, a shorter middle leg like Ubuntu Mono, and a curly tail"
selector.m = "shortLegTopLeftSerifedTailed"
selector."m/sansSerif" = "shortLegTailed"
selector."cyrl/te.italic" = "tailedTopLeftSerifed"
selector.mLTail = "shortLegTopLeftSerifed"

[prime.m.variants.top-left-and-bottom-right-serifed]
rank = 21
description = "`m` with serifs at top left and bottom right, normal middle leg touching baseline"
selector.m = "topLeftAndBottomRightSerifed"
selector."m/sansSerif" = "normal"
selector."cyrl/te.italic" = "topLeftAndBottomRightSerifed"
selector.mLTail = "topLeftSerifed"

[prime.m.variants.short-leg-top-left-and-bottom-right-serifed]
rank = 22
description = "`m` with serifs at top left and bottom right, a shorter middle leg like Ubuntu Mono"
selector.m = "shortLegTopLeftAndBottomRightSerifed"
selector."m/sansSerif" = "shortLeg"
selector."cyrl/te.italic" = "topLeftAndBottomRightSerifed"
selector.mLTail = "shortLegTopLeftSerifed"



[prime.n]
sampler = "n"
tag = "cv39"

[prime.n.variants.straight]
rank = 1
description = "`n` with straight ending"
selector.n = "straight"
selector."n/sansSerif" = "straight"
selector.eng = "straight"
selector."eng/phoneticRight" = "straight"
selector."cyrl/pe.italic" = "straight"
selector."cyrl/peItalicDescBase" = "straight"

[prime.n.variants.tailed]
rank = 2
description = "`n` with a curly tail"
selector.n = "tailed"
selector."n/sansSerif" = "tailed"
selector.eng = "straight"
selector."eng/phoneticRight" = "straight"
selector."cyrl/pe.italic" = "tailed"
selector."cyrl/peItalicDescBase" = "straight"

[prime.n.variants.earless-corner-straight]
rank = 3
description = "Earless (corner top-left) `n` with straight ending"
selector.n = "earlessCornerStraight"
selector."n/sansSerif" = "earlessCornerStraight"
selector.eng = "earlessCornerStraight"
selector."eng/phoneticRight" = "earlessCornerStraightHTB"
selector."cyrl/pe.italic" = "straight"
selector."cyrl/peItalicDescBase" = "straight"

[prime.n.variants.earless-corner-tailed]
rank = 4
description = "Earless (corner top-left) `n` with a curly tail"
selector.n = "earlessCornerTailed"
selector."n/sansSerif" = "earlessCornerTailed"
selector.eng = "earlessCornerStraight"
selector."eng/phoneticRight" = "earlessCornerStraightHTB"
selector."cyrl/pe.italic" = "tailed"
selector."cyrl/peItalicDescBase" = "straight"

[prime.n.variants.earless-rounded-straight]
rank = 5
description = "Earless (rounded top-left) `n` with straight ending"
selector.n = "earlessRoundedStraight"
selector."n/sansSerif" = "earlessRoundedStraight"
selector.eng = "earlessRoundedStraight"
selector."eng/phoneticRight" = "earlessRoundedStraightHTB"
selector."cyrl/pe.italic" = "straight"
selector."cyrl/peItalicDescBase" = "straight"

[prime.n.variants.earless-rounded-tailed]
rank = 6
description = "Earless (rounded top-left) `n` with a curly tail"
selector.n = "earlessRoundedTailed"
selector."n/sansSerif" = "earlessRoundedTailed"
selector.eng = "earlessRoundedStraight"
selector."eng/phoneticRight" = "earlessRoundedStraightHTB"
selector."cyrl/pe.italic" = "tailed"
selector."cyrl/peItalicDescBase" = "straight"

[prime.n.variants.straight-motion-serifed]
rank = 7
description = "`n` with motion serifs and straight ending"
selector.n = "straightMotionSerifed"
selector."n/sansSerif" = "straight"
selector.eng = "straightTopLeftSerifed"
selector."eng/phoneticRight" = "straightTopLeftSerifed"
selector."cyrl/pe.italic" = "straightMotionSerifed"
selector."cyrl/peItalicDescBase" = "straightMotionSerifed"

[prime.n.variants.tailed-motion-serifed]
rank = 8
description = "`n` with motion serifs and a curly tail"
selector.n = "tailedMotionSerifed"
selector."n/sansSerif" = "tailed"
selector.eng = "straightTopLeftSerifed"
selector."eng/phoneticRight" = "straightTopLeftSerifed"
selector."cyrl/pe.italic" = "tailedMotionSerifed"
selector."cyrl/peItalicDescBase" = "straightMotionSerifed"

[prime.n.variants.straight-top-left-serifed]
rank = 9
description = "`n` with motion serifs at top left and straight ending"
selector.n = "straightTopLeftSerifed"
selector."n/sansSerif" = "straight"
selector.eng = "straightTopLeftSerifed"
selector."eng/phoneticRight" = "straightTopLeftSerifed"
selector."cyrl/pe.italic" = "straightTopLeftSerifed"
selector."cyrl/peItalicDescBase" = "straightMotionSerifed"



[prime.p]
sampler = "p"
tag = "cv40"

[prime.p.variants.eared]
rank = 1
description = "`p` with top-left ear"
selector.p = "eared"
selector."p/sansSerif" = "eared"
selector."p/hookTopBase" = "eared"
selector."cyrl/er" = "eared"

[prime.p.variants.earless-corner]
rank = 2
description = "`p` without top-left ear (corner)"
selector.p = "earlessCorner"
selector."p/sansSerif" = "earlessCorner"
selector."p/hookTopBase" = "earlessCorner"
selector."cyrl/er" = "eared"

[prime.p.variants.earless-rounded]
rank = 3
description = "`p` without top-left ear (rounded)"
selector.p = "earlessRounded"
selector."p/sansSerif" = "earlessRounded"
selector."p/hookTopBase" = "earlessRounded"
selector."cyrl/er" = "eared"

[prime.p.variants.motion-serifed]
rank = 4
description = "`p` with motion serifs"
selector.p = "motionSerifed"
selector."p/sansSerif" = "eared"
selector."p/hookTopBase" = "eared"
selector."cyrl/er" = "motionSerifed"


[prime.q]
sampler = "q"
tag = "cv41"

[prime.q.variants.straight]
rank = 1
description = "`q` with straight bar"
selector.q = "straight"
selector."q/sansSerif" = "straight"
selector.qRTail = "straight"
selector.qHookTop = "straight"

[prime.q.variants.earless-corner]
rank = 2
description = "Earless (cornered top-left) single-storey `q`"
selector.q = "earlessCorner"
selector."q/sansSerif" = "earlessCorner"
selector.qRTail = "earlessCorner"
selector.qHookTop = "straight"

[prime.q.variants.earless-rounded]
rank = 3
description = "Earless (rounded top-left) single-storey `q`"
selector.q = "earlessRounded"
selector."q/sansSerif" = "earlessRounded"
selector.qRTail = "earlessRounded"
selector.qHookTop = "straight"

[prime.q.variants.straight-motion-serifed]
rank = 4
description = "`q` with straight bar and motion serifs"
selector.q = "straightMotionSerifed"
selector."q/sansSerif" = "straight"
selector.qRTail = "straightMotionSerifed"
selector.qHookTop = "straight"

[prime.q.variants.tailed]
rank = 5
description = "`q` with tail"
selector.q = "tailed"
selector."q/sansSerif" = "tailed"
selector.qRTail = "straight"
selector.qHookTop = "tailed"

[prime.q.variants.earless-corner-tailed]
rank = 6
description = "Earless (cornered top-left) single-storey `q` with curly tail"
selector.q = "earlessCornerTailed"
selector."q/sansSerif" = "earlessCornerTailed"
selector.qRTail = "earlessCorner"
selector.qHookTop = "tailed"

[prime.q.variants.earless-rounded-tailed]
rank = 7
description = "Earless (rounded top-left) single-storey `q` with curly tail"
selector.q = "earlessRoundedTailed"
selector."q/sansSerif" = "earlessRoundedTailed"
selector.qRTail = "earlessRounded"
selector.qHookTop = "tailed"

[prime.q.variants.tailed-motion-serifed]
rank = 8
description = "`q` with tail and motion serifs"
selector.q = "tailedMotionSerifed"
selector."q/sansSerif" = "tailed"
selector.qRTail = "straightMotionSerifed"
selector.qHookTop = "tailed"

[prime.q.variants.diagonal-tailed]
rank = 9
description = "`q` with diagonal tail"
selector.q = "diagonalTailed"
selector."q/sansSerif" = "diagonalTailed"
selector.qRTail = "straight"
selector.qHookTop = "diagonalTailed"

[prime.q.variants.earless-corner-diagonal-tailed]
rank = 10
description = "Earless (cornered top-left) single-storey `q` with curly diagonal tail"
selector.q = "earlessCornerDiagonalTailed"
selector."q/sansSerif" = "earlessCornerDiagonalTailed"
selector.qRTail = "earlessCorner"
selector.qHookTop = "diagonalTailed"

[prime.q.variants.earless-rounded-diagonal-tailed]
rank = 11
description = "Earless (rounded top-left) single-storey `q` with curly diagonal tail"
selector.q = "earlessRoundedDiagonalTailed"
selector."q/sansSerif" = "earlessRoundedDiagonalTailed"
selector.qRTail = "earlessRounded"
selector.qHookTop = "diagonalTailed"

[prime.q.variants.diagonal-tailed-motion-serifed]
rank = 12
description = "`q` with diagonal tail and motion serifs"
selector.q = "diagonalTailedMotionSerifed"
selector."q/sansSerif" = "diagonalTailed"
selector.qRTail = "straightMotionSerifed"
selector.qHookTop = "diagonalTailed"


[prime.r]
sampler = "r"
tag = "cv42"

[prime.r.variants.serifless]
rank = 1
description = "Straight, serif-less `r`"
selector.r = "serifless"
selector."r/sansSerif" = "serifless"
selector.rRTail = "serifless"
selector."rTurnRTail" = "serifless"
selector."rFlap" = "serifless"

[prime.r.variants.serifed]
rank = 2
description = "`r` with serif at both top and bottom"
selector.r = "serifed"
selector."r/sansSerif" = "serifless"
selector.rRTail = "topSerifed"
selector."rTurnRTail" = "serifed"
selector."rFlap" = "serifed"

[prime.r.variants.top-serifed]
rank = 3
description = "`r` with serifs at top-left only"
selector.r = "topSerifed"
selector."r/sansSerif" = "serifless"
selector.rRTail = "topSerifed"
selector."rTurnRTail" = "topSerifed"
selector."rFlap" = "serifless"

[prime.r.variants.base-serifed]
rank = 4
description = "`r` with serifs at top-left only"
selector.r = "baseSerifed"
selector."r/sansSerif" = "serifless"
selector.rRTail = "serifless"
selector."rTurnRTail" = "serifed"
selector."rFlap" = "serifed"

[prime.r.variants.earless-corner]
rank = 5
description = "Earless (corner top-left), serif-less `r`"
selector.r = "earlessCorner"
selector."r/sansSerif" = "earlessCorner"
selector.rRTail = "earlessCorner"
selector."rTurnRTail" = "serifless"
selector."rFlap" = "serifless"

[prime.r.variants.earless-corner-serifed]
rank = 6
description = "Earless (corner top-left), serifed `r`"
selector.r = "earlessCornerSerifed"
selector."r/sansSerif" = "earlessCorner"
selector.rRTail = "earlessCorner"
selector."rTurnRTail" = "serifed"
selector."rFlap" = "serifed"

[prime.r.variants.earless-rounded]
rank = 7
description = "Earless (rounded top-left), serif-less `r`"
selector.r = "earlessRounded"
selector."r/sansSerif" = "earlessRounded"
selector.rRTail = "earlessRounded"
selector."rTurnRTail" = "serifless"
selector."rFlap" = "serifless"

[prime.r.variants.earless-rounded-serifed]
rank = 8
description = "Earless (rounded top-left), serifed `r`"
selector.r = "earlessRoundedSerifed"
selector."r/sansSerif" = "earlessRounded"
selector.rRTail = "earlessRounded"
selector."rTurnRTail" = "serifed"
selector."rFlap" = "serifed"

[prime.r.variants.hookless]
rank = 9
description = "Hookless, serifless `r`"
selector.r = "hookless"
selector."r/sansSerif" = "hookless"
selector.rRTail = "hookless"
selector."rTurnRTail" = "hookless"
selector."rFlap" = "hookless"

[prime.r.variants.hookless-serifed]
rank = 10
description = "Hookless `r` with top and bottom serifs"
selector.r = "hooklessSerifed"
selector."r/sansSerif" = "hookless"
selector.rRTail = "hooklessSerifed"
selector."rTurnRTail" = "hooklessSerifed"
selector."rFlap" = "hookless"

[prime.r.variants.hookless-top-serifed]
rank = 11
description = "Hookless `r` with top serif"
selector.r = "hooklessTopSerifed"
selector."r/sansSerif" = "hookless"
selector.rRTail = "hooklessSerifed"
selector."rTurnRTail" = "hooklessSerifed"
selector."rFlap" = "hookless"

[prime.r.variants.hookless-base-serifed]
rank = 12
description = "Hookless `r` with bottom serif"
selector.r = "hooklessBaseSerifed"
selector."r/sansSerif" = "hookless"
selector.rRTail = "hookless"
selector."rTurnRTail" = "hooklessSerifed"
selector."rFlap" = "hookless"

[prime.r.variants.corner-hooked]
rank = 13
description = "`r` with vertical corner hook downwards"
selector.r = "cornerHooked"
selector."r/sansSerif" = "compact"
selector.rRTail = "cornerHooked"
selector."rTurnRTail" = "cornerHooked"
selector."rFlap" = "serifless"

[prime.r.variants.corner-hooked-serifed]
rank = 14
description = "`r` with vertical corner hook downwards, top and bottom serifs"
selector.r = "cornerHookedSerifed"
selector."r/sansSerif" = "compact"
selector.rRTail = "cornerHookedSerifed"
selector."rTurnRTail" = "cornerHookedSerifed"
selector."rFlap" = "serifed"

[prime.r.variants.corner-hooked-top-serifed]
rank = 15
description = "`r` with vertical corner hook downwards and top serif"
selector.r = "cornerHookedTopSerifed"
selector."r/sansSerif" = "compact"
selector.rRTail = "cornerHookedSerifed"
selector."rTurnRTail" = "cornerHookedSerifed"
selector."rFlap" = "serifless"

[prime.r.variants.corner-hooked-base-serifed]
rank = 16
description = "`r` with vertical corner hook downwards and bottom serif"
selector.r = "cornerHookedBaseSerifed"
selector."r/sansSerif" = "compact"
selector.rRTail = "cornerHooked"
selector."rTurnRTail" = "cornerHookedSerifed"
selector."rFlap" = "serifed"

[prime.r.variants.compact]
rank = 17
description = "Hookless and compact, serifless `r`. Identical to `compact` for monospace fonts"
selector.r = "compact"
selector."r/sansSerif" = "compact"
selector.rRTail = "compact"
selector."rTurnRTail" = "compact"
selector."rFlap" = "compact"

[prime.r.variants.compact-serifed]
rank = 18
description = "Hookless and compact `r` with top and bottom serifs. Identical to `compact-serifed` for monospace fonts"
selector.r = "compactSerifed"
selector."r/sansSerif" = "compact"
selector.rRTail = "compactSerifed"
selector."rTurnRTail" = "compactSerifed"
selector."rFlap" = "compact"

[prime.r.variants.compact-top-serifed]
rank = 19
description = "Hookless and compact `r` with top serif. Identical to `compact-top-serifed` for monospace fonts"
selector.r = "compactTopSerifed"
selector."r/sansSerif" = "compact"
selector.rRTail = "compactSerifed"
selector."rTurnRTail" = "compactSerifed"
selector."rFlap" = "compact"

[prime.r.variants.compact-base-serifed]
rank = 20
description = "Hookless and compact `r` with bottom serif. Identical to `compact-base-serifed` for monospace fonts"
selector.r = "compactBaseSerifed"
selector."r/sansSerif" = "compact"
selector.rRTail = "compact"
selector."rTurnRTail" = "compactSerifed"
selector."rFlap" = "compact"


[prime.s]
sampler = "s"
tag = "cv43"

[prime.s.variants.serifless]
rank = 1
description = "Serifless `s`"
selector.s = "serifless"
selector."s/sansSerif" = "serifless"
selector."cyrl/ge.italic" = "serifless"
selector."tsLig/lowerHalf" = "serifless"
selector.sSwash = "serifless"
selector."s/phoneticRight" = "serifless"

[prime.s.variants.unilateral-serifed]
rank = 2
description = "`s` with single serif at top"
selector.s = "unilateralSerifed"
selector."s/sansSerif" = "serifless"
selector."cyrl/ge.italic" = "serifless"
selector."tsLig/lowerHalf" = "serifless"
selector.sSwash = "unilateralSerifed"
selector."s/phoneticRight" = "unilateralSerifed"

[prime.s.variants.bilateral-serifed]
rank = 3
description = "`s` with serifs at both end"
selector.s = "bilateralSerifed"
selector."s/sansSerif" = "serifless"
selector."cyrl/ge.italic" = "bilateralSerifed"
selector."tsLig/lowerHalf" = "bilateralSerifed"
selector.sSwash = "unilateralSerifed"
selector."s/phoneticRight" = "unilateralSerifed"

[prime.s.variants.unilateral-inward-serifed]
rank = 4
description = "`s` with single inward serif at top"
selector.s = "unilateralInwardSerifed"
selector."s/sansSerif" = "serifless"
selector."cyrl/ge.italic" = "serifless"
selector."tsLig/lowerHalf" = "serifless"
selector.sSwash = "unilateralInwardSerifed"
selector."s/phoneticRight" = "unilateralInwardSerifed"

[prime.s.variants.bilateral-inward-serifed]
rank = 5
description = "`s` with inward serifs at both end"
selector.s = "bilateralInwardSerifed"
selector."s/sansSerif" = "serifless"
selector."cyrl/ge.italic" = "bilateralInwardSerifed"
selector."tsLig/lowerHalf" = "bilateralInwardSerifed"
selector.sSwash = "unilateralInwardSerifed"
selector."s/phoneticRight" = "unilateralInwardSerifed"



[prime.t]
sampler = "t"
tag = "cv44"

[prime.t.variants.standard]
rank = 1
description = "Standard `t` shape"
selector.t = "standard"
selector."t/phoneticLeft1" = "phoneticLeft"
selector."t/phoneticLeft2" = "phoneticLeft"
selector.tHookTop = "standard"
selector.tRTail = "retroflexHookBase"
selector.tLTail = "standard"
selector."tsLig/upperHalf" = "standard"

[prime.t.variants.flat-hook]
rank = 2
description = "`t` with flat hook"
selector.t = "flatHook"
selector."t/phoneticLeft1" = "phoneticLeft"
selector."t/phoneticLeft2" = "phoneticLeft"
selector.tHookTop = "flatHook"
selector.tRTail = "retroflexHookBase"
selector.tLTail = "standard"
selector."tsLig/upperHalf" = "standard"

[prime.t.variants.diagonal-tailed]
rank = 3
description = "`t` with diagonal tail"
selector.t = "diagonalTailed"
selector."t/phoneticLeft1" = "phoneticLeft"
selector."t/phoneticLeft2" = "phoneticLeft"
selector.tHookTop = "diagonalTailed"
selector.tRTail = "retroflexHookBase"
selector.tLTail = "standard"
selector."tsLig/upperHalf" = "standard"

[prime.t.variants.cross]
rank = 4
description = "Futura-like `t` shape"
selector.t = "cross"
selector."t/phoneticLeft1" = "cross"
selector."t/phoneticLeft2" = "crossPL"
selector.tHookTop = "cross"
selector.tRTail = "retroflexHookBase"
selector.tLTail = "standard"
selector."tsLig/upperHalf" = "standard"

[prime.t.variants.hookless-asymmetric]
rank = 5
description = "`t` without hook and with ony half the cross bar"
selector.t = "hooklessAsymmetric"
selector."t/phoneticLeft1" = "hooklessAsymmetric"
selector."t/phoneticLeft2" = "hooklessAsymmetricPL"
selector.tHookTop = "hooklessAsymmetric"
selector.tRTail = "retroflexHookBase"
selector.tLTail = "standard"
selector."tsLig/upperHalf" = "standard"

[prime.t.variants.standard-short-neck]
rank = 6
description = "Standard `t` shape with a shorter neck"
selector.t = "standardShortNeck"
selector."t/phoneticLeft1" = "phoneticLeftShortNeck"
selector."t/phoneticLeft2" = "phoneticLeftShortNeck"
selector.tHookTop = "standard"
selector.tRTail = "retroflexHookBaseShortNeck"
selector.tLTail = "standardShortNeck"
selector."tsLig/upperHalf" = "standardShortNeck"

[prime.t.variants.flat-hook-short-neck]
rank = 7
description = "`t` with flat hook and a slightly shorter neck"
selector.t = "flatHookShortNeck"
selector."t/phoneticLeft1" = "phoneticLeftShortNeck"
selector."t/phoneticLeft2" = "phoneticLeftShortNeck"
selector.tHookTop = "flatHook"
selector.tRTail = "retroflexHookBaseShortNeck"
selector.tLTail = "standardShortNeck"
selector."tsLig/upperHalf" = "standardShortNeck"

[prime.t.variants.diagonal-tailed-short-neck]
rank = 8
description = "`t` with diagonal tail and a shorter neck"
selector.t = "diagonalTailedShortNeck"
selector."t/phoneticLeft1" = "phoneticLeftShortNeck"
selector."t/phoneticLeft2" = "phoneticLeftShortNeck"
selector.tHookTop = "diagonalTailed"
selector.tRTail = "retroflexHookBaseShortNeck"
selector.tLTail = "standardShortNeck"
selector."tsLig/upperHalf" = "standardShortNeck"

[prime.t.variants.cross-short-neck]
rank = 9
description = "Futura-like `t` shape with a shorter neck"
selector.t = "crossShortNeck"
selector."t/phoneticLeft1" = "crossShortNeck"
selector."t/phoneticLeft2" = "crossPLShortNeck"
selector.tHookTop = "cross"
selector.tRTail = "retroflexHookBaseShortNeck"
selector.tLTail = "standardShortNeck"
selector."tsLig/upperHalf" = "standardShortNeck"

[prime.t.variants.hookless-asymmetric-short-neck]
rank = 10
description = "`t` without hook, with ony half the cross bar and a shorter neck"
selector.t = "hooklessAsymmetricShortNeck"
selector."t/phoneticLeft1" = "hooklessAsymmetricShortNeck"
selector."t/phoneticLeft2" = "hooklessAsymmetricPLShortNeck"
selector.tHookTop = "hooklessAsymmetric"
selector.tRTail = "retroflexHookBaseShortNeck"
selector.tLTail = "standardShortNeck"
selector."tsLig/upperHalf" = "standardShortNeck"

[prime.t.variants.standard-short-neck2]
rank = 11
description = "Standard `t` shape with a more shorter neck"
selector.t = "standardShortNeck2"
selector."t/phoneticLeft1" = "phoneticLeftShortNeck2"
selector."t/phoneticLeft2" = "phoneticLeftShortNeck2"
selector.tHookTop = "standard"
selector.tRTail = "retroflexHookBaseShortNeck2"
selector.tLTail = "standardShortNeck2"
selector."tsLig/upperHalf" = "standardShortNeck2"

[prime.t.variants.flat-hook-short-neck2]
rank = 12
description = "`t` with flat hook and a more shorter neck"
selector.t = "flatHookShortNeck2"
selector."t/phoneticLeft1" = "phoneticLeftShortNeck2"
selector."t/phoneticLeft2" = "phoneticLeftShortNeck2"
selector.tHookTop = "flatHook"
selector.tRTail = "retroflexHookBaseShortNeck2"
selector.tLTail = "standardShortNeck2"
selector."tsLig/upperHalf" = "standardShortNeck2"

[prime.t.variants.diagonal-tailed-short-neck2]
rank = 13
description = "`t` with diagonal tail and a more shorter neck"
selector.t = "diagonalTailedShortNeck2"
selector."t/phoneticLeft1" = "phoneticLeftShortNeck2"
selector."t/phoneticLeft2" = "phoneticLeftShortNeck2"
selector.tHookTop = "diagonalTailed"
selector.tRTail = "retroflexHookBaseShortNeck2"
selector.tLTail = "standardShortNeck2"
selector."tsLig/upperHalf" = "standardShortNeck2"

[prime.t.variants.cross-short-neck2]
rank = 14
description = "Futura-like `t` shape with a more shorter neck"
selector.t = "crossShortNeck2"
selector."t/phoneticLeft1" = "crossShortNeck2"
selector."t/phoneticLeft2" = "crossPLShortNeck2"
selector.tHookTop = "cross"
selector.tRTail = "retroflexHookBaseShortNeck2"
selector.tLTail = "standardShortNeck2"
selector."tsLig/upperHalf" = "standardShortNeck2"

[prime.t.variants.hookless-asymmetric-short-neck2]
rank = 15
description = "`t` without hook, with ony half the cross bar and a more shorter neck"
selector.t = "hooklessAsymmetricShortNeck2"
selector."t/phoneticLeft1" = "hooklessAsymmetricShortNeck2"
selector."t/phoneticLeft2" = "hooklessAsymmetricPLShortNeck2"
selector.tHookTop = "hooklessAsymmetric"
selector.tRTail = "retroflexHookBaseShortNeck2"
selector.tLTail = "standardShortNeck2"
selector."tsLig/upperHalf" = "standardShortNeck2"



[prime.u]
sampler = "u"
tag = "cv45"

[prime.u.variants.toothed]
rank = 1
description = "Normal `u` with bottom-right tooth"
selector.u = "toothed"
selector."u/sansSerif" = "toothed"
selector."u/uRTailBase" = "urtBase"
selector."cyrl/i.italic" = "toothed"
selector."cyrl/sha.italic" = "toothed"
selector."cyrl/shcha.italic" = "toothed"
selector."cyrl/i.italic.reduced" = "toothed"
selector."cyrl/dzhe.italic" = "toothed"
selector."cyrl/tse.italic" = "toothed"
selector."ue/u" = "toothed"

[prime.u.variants.toothless-corner]
rank = 2
description = "Toothless (corner bottom-right) `u`"
selector.u = "toothlessCorner"
selector."u/sansSerif" = "toothlessCorner"
selector."u/uRTailBase" = "urtBase"
selector."cyrl/i.italic" = "toothed"
selector."cyrl/sha.italic" = "toothed"
selector."cyrl/shcha.italic" = "toothed"
selector."cyrl/i.italic.reduced" = "toothed"
selector."cyrl/dzhe.italic" = "toothed"
selector."cyrl/tse.italic" = "toothed"
selector."ue/u" = "toothed"

[prime.u.variants.toothless-rounded]
rank = 3
description = "Toothless (rounded) `u`, like a smaller uppercase `U`"
selector.u = "toothlessRounded"
selector."u/sansSerif" = "toothlessRounded"
selector."u/uRTailBase" = "urtBase"
selector."cyrl/i.italic" = "toothed"
selector."cyrl/sha.italic" = "toothed"
selector."cyrl/shcha.italic" = "toothed"
selector."cyrl/i.italic.reduced" = "toothed"
selector."cyrl/dzhe.italic" = "toothed"
selector."cyrl/tse.italic" = "toothed"
selector."ue/u" = "toothed"

[prime.u.variants.tailed]
rank = 4
description = "`u` with right bar and a slightly curly tail"
selector.u = "tailed"
selector."u/sansSerif" = "tailed"
selector."u/uRTailBase" = "urtBase"
selector."cyrl/i.italic" = "tailed"
selector."cyrl/sha.italic" = "tailed"
selector."cyrl/shcha.italic" = "toothed"
selector."cyrl/i.italic.reduced" = "toothed"
selector."cyrl/dzhe.italic" = "tailed"
selector."cyrl/tse.italic" = "toothed"
selector."ue/u" = "toothed"

[prime.u.variants.motion-serifed]
rank = 5
description = "Normal `u` with right bar and motion serifs"
selector.u = "motionSerifed"
selector."u/sansSerif" = "toothed"
selector."u/uRTailBase" = "urtBaseMotionSerifed"
selector."cyrl/i.italic" = "motionSerifed"
selector."cyrl/sha.italic" = "motionSerifed"
selector."cyrl/shcha.italic" = "motionSerifed"
selector."cyrl/i.italic.reduced" = "motionSerifed"
selector."cyrl/dzhe.italic" = "motionSerifed"
selector."cyrl/tse.italic" = "motionSerifed"
selector."ue/u" = "motionSerifed"

[prime.u.variants.tailed-motion-serifed]
rank = 6
description = "`u` with right bar, motion serifs and a slightly curly tail"
selector.u = "tailedMotionSerifed"
selector."u/sansSerif" = "tailed"
selector."u/uRTailBase" = "urtBaseMotionSerifed"
selector."cyrl/i.italic" = "tailedMotionSerifed"
selector."cyrl/sha.italic" = "tailedMotionSerifed"
selector."cyrl/shcha.italic" = "motionSerifed"
selector."cyrl/i.italic.reduced" = "motionSerifed"
selector."cyrl/dzhe.italic" = "tailedMotionSerifed"
selector."cyrl/tse.italic" = "motionSerifed"
selector."ue/u" = "motionSerifed"

[prime.u.variants.toothless-corner-motion-serifed]
rank = 7
description = "Toothless (corner bottom-right) `u` with motion serifs"
selector.u = "toothlessCornerMotionSerifed"
selector."u/sansSerif" = "toothlessCorner"
selector."u/uRTailBase" = "urtBaseMotionSerifed"
selector."cyrl/i.italic" = "motionSerifed"
selector."cyrl/sha.italic" = "motionSerifed"
selector."cyrl/shcha.italic" = "motionSerifed"
selector."cyrl/i.italic.reduced" = "motionSerifed"
selector."cyrl/dzhe.italic" = "motionSerifed"
selector."cyrl/tse.italic" = "motionSerifed"
selector."ue/u" = "motionSerifed"

[prime.u.variants.toothless-rounded-motion-serifed]
rank = 8
description = "Toothless (rounded) `u` with motion serifs"
selector.u = "toothlessRoundedMotionSerifed"
selector."u/sansSerif" = "toothlessRounded"
selector."u/uRTailBase" = "urtBaseMotionSerifed"
selector."cyrl/i.italic" = "motionSerifed"
selector."cyrl/sha.italic" = "motionSerifed"
selector."cyrl/shcha.italic" = "motionSerifed"
selector."cyrl/i.italic.reduced" = "motionSerifed"
selector."cyrl/dzhe.italic" = "motionSerifed"
selector."cyrl/tse.italic" = "motionSerifed"
selector."ue/u" = "motionSerifed"

[prime.u.variants.bottom-right-serifed]
rank = 9
description = "`u` with right bar and a slightly curly tail"
selector.u = "bottomRightSerifed"
selector."u/sansSerif" = "toothed"
selector."u/uRTailBase" = "urtBaseSerifless"
selector."cyrl/i.italic" = "bottomRightSerifed"
selector."cyrl/sha.italic" = "bottomRightSerifed"
selector."cyrl/shcha.italic" = "toothed"
selector."cyrl/i.italic.reduced" = "toothed"
selector."cyrl/dzhe.italic" = "bottomRightSerifed"
selector."cyrl/tse.italic" = "toothed"
selector."ue/u" = "serifless"



[prime.v]
sampler = "v"
tag = "cv46"

[prime.v.variants.straight]
rank = 1
description = "Standard, straight `v`"
selector.v = "straight"
selector."v/sansSerif" = "straight"
selector.vHookTop = "straight"

[prime.v.variants.curly]
rank = 2
description = "Slightly curly `v`, like Iosevka 2.x"
selector.v = "curly"
selector."v/sansSerif" = "curly"
selector.vHookTop = "curly"

[prime.v.variants.cursive]
rank = 3
description = "Cursive `v`"
selector.v = "cursive"
selector."v/sansSerif" = "cursive"
selector.vHookTop = "straight"

[prime.v.variants.straight-motion-serifed]
rank = 4
description = "Standard, straight `v`, with motion serifs"
selector.v = "straightMotionSerifed"
selector."v/sansSerif" = "straight"
selector.vHookTop = "straightMotionSerifed"

[prime.v.variants.curly-motion-serifed]
rank = 5
description = "Slightly curly `v`, like Iosevka 2.x, with motion serifs"
selector.v = "curlyMotionSerifed"
selector."v/sansSerif" = "curly"
selector.vHookTop = "curlyMotionSerifed"

[prime.v.variants.cursive-serifed]
rank = 6
description = "Cursive `v` with motion serifs"
selector.v = "cursiveMotionSerifed"
selector."v/sansSerif" = "cursive"
selector.vHookTop = "straightMotionSerifed"



[prime.w]
sampler = "w"
tag = "cv47"

[prime.w.variants.straight]
rank = 1
description = "Standard, straight `w`"
selector.w = "straight"
selector."w/sansSerif" = "straight"
selector.wHookTop = "straight"

[prime.w.variants.curly]
rank = 2
description = "Slightly curly `w`, like Iosevka 2.x"
selector.w = "curly"
selector."w/sansSerif" = "curly"
selector.wHookTop = "curly"

[prime.w.variants.straight-flat-top]
rank = 3
description = "Standard, straight `w`, and the middle is forced to be aligned the top"
selector.w = "straightFlatTop"
selector."w/sansSerif" = "straightFlatTop"
selector.wHookTop = "straightFlatTop"

[prime.w.variants.straight-double-v]
rank = 4
description = "Straight `w` looks like double V"
selector.w = "straightDoubleV"
selector."w/sansSerif" = "straightDoubleV"
selector.wHookTop = "straightDoubleV"

[prime.w.variants.straight-asymmetric]
rank = 5
description = "Straight `w` looks asymmetric"
selector.w = "straightAsymmetric"
selector."w/sansSerif" = "straightAsymmetric"
selector.wHookTop = "straightAsymmetric"

[prime.w.variants.straight-vertical-sides]
rank = 6
description = "Straight `w` with vertical sides"
selector.w = "straightVerticalSides"
selector."w/sansSerif" = "straightVerticalSides"
selector.wHookTop = "straightVerticalSides"

[prime.w.variants.cursive]
rank = 7
description = "Cursive `w`"
selector.w = "cursive"
selector."w/sansSerif" = "cursive"
selector.wHookTop = "cursive"

[prime.w.variants.straight-motion-serifed]
rank = 8
description = "Standard, straight `w`, with motion serifs"
selector.w = "straightMotionSerifed"
selector."w/sansSerif" = "straight"
selector.wHookTop = "straightMotionSerifed"

[prime.w.variants.curly-motion-serifed]
rank = 9
description = "Slightly curly `w`, like Iosevka 2.x, with motion serifs"
selector.w = "curlyMotionSerifed"
selector."w/sansSerif" = "curly"
selector.wHookTop = "curlyMotionSerifed"

[prime.w.variants.straight-flat-top-motion-serifed]
rank = 10
description = "Standard, straight `w`, and the middle is forced to be aligned the top, with motion serifs"
selector.w = "straightFlatTopMotionSerifed"
selector."w/sansSerif" = "straightFlatTop"
selector.wHookTop = "straightFlatTopMotionSerifed"

[prime.w.variants.straight-double-v-motion-serifed]
rank = 11
description = "Straight `w` looks like double V, with motion serifs"
selector.w = "straightDoubleVMotionSerifed"
selector."w/sansSerif" = "straightDoubleV"
selector.wHookTop = "straightDoubleVMotionSerifed"

[prime.w.variants.straight-asymmetric-motion-serifed]
rank = 12
description = "Straight `w` looks asymmetric, with motion serifs"
selector.w = "straightAsymmetricMotionSerifed"
selector."w/sansSerif" = "straightAsymmetric"
selector.wHookTop = "straightAsymmetricMotionSerifed"

[prime.w.variants.straight-vertical-sides-motion-serifed]
rank = 13
description = "Straight `w` with vertical sides and motion serifs"
selector.w = "straightVerticalSidesMotionSerifed"
selector."w/sansSerif" = "straightVerticalSides"
selector.wHookTop = "straightVerticalSidesMotionSerifed"

[prime.w.variants.cursive-motion-serifed]
rank = 14
description = "Cursive `w` with motion serifs"
selector.w = "cursiveMotionSerifed"
selector."w/sansSerif" = "cursive"
selector.wHookTop = "cursiveMotionSerifed"



[prime.x]
sampler = "x"
tag = "cv48"

[prime.x.variants.straight-serifless]
rank = 1
description = "Serifless, straight `x`"
selector.x = "straightSerifless"
selector."x/sansSerif" = "straightSerifless"
selector.xCyrlHaDescenderBase = "straightSerifless"
selector."cyrl/ha" = "straightSerifless"
selector."grek/chi" = "straightSerifless"

[prime.x.variants.curly-serifless]
rank = 2
description = "Serifless, slightly curly `x`, like Iosevka 2.x"
selector.x = "curlySerifless"
selector."x/sansSerif" = "curlySerifless"
selector.xCyrlHaDescenderBase = "curlySerifless"
selector."cyrl/ha" = "curlySerifless"
selector."grek/chi" = "curlySerifless"

[prime.x.variants.straight-motion-serifed]
rank = 3
description = "Straight `x` with motion serifs"
selector.x = "straightMotionSerifed"
selector."x/sansSerif" = "straightSerifless"
selector.xCyrlHaDescenderBase = "straightMotionSerifed"
selector."cyrl/ha" = "straightMotionSerifed"
selector."grek/chi" = "straightMotionSerifed"

[prime.x.variants.curly-motion-serifed]
rank = 4
description = "Slightly curly `x`, like Iosevka 2.x, with motion serifs"
selector.x = "curlyMotionSerifed"
selector."x/sansSerif" = "curlySerifless"
selector.xCyrlHaDescenderBase = "curlyMotionSerifed"
selector."cyrl/ha" = "curlyMotionSerifed"
selector."grek/chi" = "curlyMotionSerifed"

[prime.x.variants.straight-serifed]
rank = 5
description = "Straight `x` with full serifs"
selector.x = "straightSerifed"
selector."x/sansSerif" = "straightSerifless"
selector.xCyrlHaDescenderBase = "straightSerifed"
selector."cyrl/ha" = "straightSerifed"
selector."grek/chi" = "straightBilateralMotionSerifed"

[prime.x.variants.curly-serifed]
rank = 6
description = "Slightly curly `x`, like Iosevka 2.x, with full serifs"
selector.x = "curlySerifed"
selector."x/sansSerif" = "curlySerifless"
selector.xCyrlHaDescenderBase = "curlySerifed"
selector."cyrl/ha" = "curlySerifed"
selector."grek/chi" = "curlyBilateralMotionSerifed"

[prime.x.variants.cursive]
rank = 7
description = "Cursive `x`"
selector.x = "cursive"
selector."x/sansSerif" = "cursive"
selector.xCyrlHaDescenderBase = "cursiveCyrlHaDescenderBase"
selector."cyrl/ha" = "cursive"
selector."grek/chi" = "curlySerifless"



[prime.y]
sampler = "y"
tag = "cv49"

[prime.y.variants.straight]
rank = 1
description = "Letter `y` that is fully straight"
selector.y = "straight"
selector."y/sansSerif" = "straight"
selector.yHookTop = "straight"

[prime.y.variants.straight-turn]
rank = 2
description = "Letter `y` with straight upper and a tail turns leftward"
selector.y = "straightTurn"
selector."y/sansSerif" = "straightTurn"
selector.yHookTop = "straightTurn"

[prime.y.variants.curly]
rank = 3
description = "More curly letter `y`, like Iosevka 2.x"
selector.y = "curly"
selector."y/sansSerif" = "curly"
selector.yHookTop = "curly"

[prime.y.variants.curly-turn]
rank = 4
description = "More curly letter `y`, like Iosevka 2.x, with a tail turns leftward"
selector.y = "curlyTurn"
selector."y/sansSerif" = "curlyTurn"
selector.yHookTop = "curlyTurn"

[prime.y.variants.cursive]
rank = 5
description = "Cursive-like `y`"
selector.y = "cursive"
selector."y/sansSerif" = "cursive"
selector.yHookTop = "cursive"

[prime.y.variants.cursive-flat-hook]
rank = 6
description = "Cursive-like `y` with flat terminal hook"
selector.y = "cursiveFlatHook"
selector."y/sansSerif" = "cursiveFlatHook"
selector.yHookTop = "cursiveFlatHook"

[prime.y.variants.straight-motion-serifed]
rank = 7
description = "Letter `y` that is fully straight, with motion serifs"
selector.y = "straightMotionSerifed"
selector."y/sansSerif" = "straight"
selector.yHookTop = "straight"

[prime.y.variants.straight-turn-motion-serifed]
rank = 8
description = "Letter `y` with straight upper and a tail turns leftward, and motion serifs"
selector.y = "straightTurnMotionSerifed"
selector."y/sansSerif" = "straightTurn"
selector.yHookTop = "straightTurn"

[prime.y.variants.curly-motion-serifed]
rank = 9
description = "More curly letter `y`, like Iosevka 2.x, with motion serifs"
selector.y = "curlyMotionSerifed"
selector."y/sansSerif" = "curly"
selector.yHookTop = "curly"

[prime.y.variants.curly-turn-motion-serifed]
rank = 10
description = "More curly letter `y`, like Iosevka 2.x, with a tail turns leftward and motion serifs"
selector.y = "curlyTurnMotionSerifed"
selector."y/sansSerif" = "curlyTurn"
selector.yHookTop = "curlyTurn"

[prime.y.variants.cursive-motion-serifed]
rank = 11
description = "Cursive-like `y`, with motion serifs"
selector.y = "cursiveMotionSerifed"
selector."y/sansSerif" = "cursive"
selector.yHookTop = "cursive"

[prime.y.variants.cursive-flat-hook-motion-serifed]
rank = 12
description = "Cursive-like `y` with flat terminal hook, and motion serifs"
selector.y = "cursiveFlatHookMotionSerifed"
selector."y/sansSerif" = "cursiveFlatHook"
selector.yHookTop = "cursiveFlatHook"



[prime.z]
sampler = "z"
tag = "cv50"

[prime.z.variants.straight-serifless]
rank = 1
description = "Straight `z` without serifs"
selector.z = "straightSerifless"
selector."z/sansSerif" = "straightSerifless"
selector."z/reduced" = "straightSerifless"
selector.zDesc = "straightSerifless"

[prime.z.variants.straight-serifless-with-crossbar]
rank = 2
description = "Straight `z` with a diagonal crossbar, and without serifs"
selector.z = "straightSeriflessWithCrossBar"
selector."z/sansSerif" = "straightSeriflessWithCrossBar"
selector."z/reduced" = "straightSerifless"
selector.zDesc = "straightSeriflessWithCrossBar"

[prime.z.variants.straight-serifless-with-horizontal-crossbar]
rank = 3
description = "Straight `z` with a horizontal crossbar, and without serifs"
selector.z = "straightSeriflessWithHorizontalCrossBar"
selector."z/sansSerif" = "straightSeriflessWithHorizontalCrossBar"
selector."z/reduced" = "straightSerifless"
selector.zDesc = "straightSeriflessWithHorizontalCrossBar"

[prime.z.variants.curly-serifless]
rank = 4
description = "Curly `z` without serifs"
selector.z = "curlySerifless"
selector."z/sansSerif" = "curlySerifless"
selector."z/reduced" = "curlySerifless"
selector.zDesc = "curlySerifless"

[prime.z.variants.curly-serifless-with-crossbar]
rank = 5
description = "Curly `z` with a diagonal crossbar, and without serifs"
selector.z = "curlySeriflessWithCrossBar"
selector."z/sansSerif" = "curlySeriflessWithCrossBar"
selector."z/reduced" = "curlySerifless"
selector.zDesc = "curlySeriflessWithCrossBar"

[prime.z.variants.curly-serifless-with-horizontal-crossbar]
rank = 6
description = "Curly `z` with a horizontal crossbar, and without serifs"
selector.z = "curlySeriflessWithHorizontalCrossBar"
selector."z/sansSerif" = "curlySeriflessWithHorizontalCrossBar"
selector."z/reduced" = "curlySerifless"
selector.zDesc = "curlySeriflessWithHorizontalCrossBar"

[prime.z.variants.straight-serifed]
rank = 7
description = "Straight `z` with top and bottom serifs"
selector.z = "straightSerifed"
selector."z/sansSerif" = "straightSerifless"
selector."z/reduced" = "straightSerifed"
selector.zDesc = "straightTopSerifed"

[prime.z.variants.straight-serifed-with-crossbar]
rank = 8
description = "Straight `z` with a diagonal crossbar and serifs"
selector.z = "straightSerifedWithCrossBar"
selector."z/sansSerif" = "straightSeriflessWithCrossBar"
selector."z/reduced" = "straightSerifed"
selector.zDesc = "straightTopSerifedWithCrossbar"

[prime.z.variants.straight-serifed-with-horizontal-crossbar]
rank = 9
description = "Straight `z` with a horizontal crossbar and serifs"
selector.z = "straightSerifedWithHorizontalCrossBar"
selector."z/sansSerif" = "straightSeriflessWithHorizontalCrossBar"
selector."z/reduced" = "straightSerifed"
selector.zDesc = "straightTopSerifedWithHorizontalCrossBar"

[prime.z.variants.curly-serifed]
rank = 10
description = "Curly `z` with top and bottom serifs"
selector.z = "curlySerifed"
selector."z/sansSerif" = "curlySerifless"
selector."z/reduced" = "curlySerifed"
selector.zDesc = "curlyTopSerifed"

[prime.z.variants.curly-serifed-with-crossbar]
rank = 11
description = "Curly `z` with a diagonal crossbar and serifs"
selector.z = "curlySerifedWithCrossBar"
selector."z/sansSerif" = "curlySeriflessWithCrossBar"
selector."z/reduced" = "curlySerifed"
selector.zDesc = "curlyTopSerifedWithCrossbar"

[prime.z.variants.curly-serifed-with-horizontal-crossbar]
rank = 12
description = "Curly `z` with a horizontal crossbar and serifs"
selector.z = "curlySerifedWithHorizontalCrossBar"
selector."z/sansSerif" = "curlySeriflessWithHorizontalCrossBar"
selector."z/reduced" = "curlySerifed"
selector.zDesc = "curlyTopSerifedWithHorizontalCrossBar"

[prime.z.variants.straight-bottom-serifed]
rank = 13
description = "Standard `z` with serif at bottom"
selector.z = "straightBottomSerifed"
selector."z/sansSerif" = "straightSerifless"
selector."z/reduced" = "straightBottomSerifed"
selector.zDesc = "straightSerifless"

[prime.z.variants.straight-bottom-serifed-with-crossbar]
rank = 14
description = "Standard `z` with a diagonal crossbar and serif at bottom"
selector.z = "straightBottomSerifedWithCrossbar"
selector."z/sansSerif" = "straightSeriflessWithCrossBar"
selector."z/reduced" = "straightBottomSerifed"
selector.zDesc = "straightSeriflessWithCrossBar"

[prime.z.variants.straight-bottom-serifed-with-horizontal-crossbar]
rank = 15
description = "Standard `z` with a horizontal crossbar and serif at bottom"
selector.z = "straightBottomSerifedWithHorizontalCrossBar"
selector."z/sansSerif" = "straightSeriflessWithHorizontalCrossBar"
selector."z/reduced" = "straightBottomSerifed"
selector.zDesc = "straightSeriflessWithHorizontalCrossBar"

[prime.z.variants.curly-bottom-serifed-with-crossbar]
rank = 16
description = "Curly `z` with serif at bottom"
selector.z = "curlyBottomSerifed"
selector."z/sansSerif" = "curlySerifless"
selector."z/reduced" = "curlyBottomSerifed"
selector.zDesc = "curlySerifless"

[prime.z.variants.curly-bottom-serifed-with-horizontal-crossbar]
rank = 17
description = "Curly `z` with a diagonal crossbar and serif at bottom"
selector.z = "curlyBottomSerifedWithCrossbar"
selector."z/sansSerif" = "curlySeriflessWithCrossBar"
selector."z/reduced" = "curlyBottomSerifed"
selector.zDesc = "curlySeriflessWithCrossBar"

[prime.z.variants.curly-bottom-serifed]
rank = 18
description = "Curly `z` with a horizontal crossbar and serif at bottom"
selector.z = "curlyBottomSerifedWithHorizontalCrossBar"
selector."z/sansSerif" = "curlySeriflessWithHorizontalCrossBar"
selector."z/reduced" = "curlyBottomSerifed"
selector.zDesc = "curlySeriflessWithHorizontalCrossBar"

[prime.z.variants.straight-top-serifed]
rank = 19
description = "Standard `z` with serif at top"
selector.z = "straightTopSerifed"
selector."z/sansSerif" = "straightSerifless"
selector."z/reduced" = "straightTopSerifed"
selector.zDesc = "straightTopSerifed"

[prime.z.variants.straight-top-serifed-with-crossbar]
rank = 20
description = "Standard `z` with a diagonal crossbar and serif at top"
selector.z = "straightTopSerifedWithCrossbar"
selector."z/sansSerif" = "straightSeriflessWithCrossBar"
selector."z/reduced" = "straightTopSerifed"
selector.zDesc = "straightTopSerifedWithCrossbar"

[prime.z.variants.straight-top-serifed-with-horizontal-crossbar]
rank = 21
description = "Standard `z` with a horizontal crossbar and serif at top"
selector.z = "straightTopSerifedWithHorizontalCrossBar"
selector."z/sansSerif" = "straightSeriflessWithHorizontalCrossBar"
selector."z/reduced" = "straightTopSerifed"
selector.zDesc = "straightTopSerifedWithHorizontalCrossBar"

[prime.z.variants.curly-top-serifed]
rank = 22
description = "Curly `z` with serif at top"
selector.z = "curlyTopSerifed"
selector."z/sansSerif" = "curlySerifless"
selector."z/reduced" = "curlyTopSerifed"
selector.zDesc = "curlyTopSerifed"

[prime.z.variants.curly-top-serifed-with-crossbar]
rank = 23
description = "Curly `z` with a diagonal crossbar and serif at top"
selector.z = "curlyTopSerifedWithCrossbar"
selector."z/sansSerif" = "curlySeriflessWithCrossBar"
selector."z/reduced" = "curlyTopSerifed"
selector.zDesc = "curlyTopSerifedWithCrossbar"

[prime.z.variants.curly-top-serifed-with-horizontal-crossbar]
rank = 24
description = "Curly `z` with a horizontal crossbar and serif at top"
selector.z = "curlyTopSerifedWithHorizontalCrossBar"
selector."z/sansSerif" = "curlySeriflessWithHorizontalCrossBar"
selector."z/reduced" = "curlyTopSerifed"
selector.zDesc = "curlyTopSerifedWithHorizontalCrossBar"

[prime.z.variants.cursive]
rank = 25
description = "Cursive `z`"
selector.z = "cursive"
selector."z/sansSerif" = "cursive"
selector."z/reduced" = "cursive"
selector.zDesc = "cursive"

[prime.z.variants.cursive-with-crossbar]
rank = 26
description = "Cursive `z` with a diagonal cross bar"
selector.z = "cursiveWithCrossBar"
selector."z/sansSerif" = "cursiveWithCrossBar"
selector."z/reduced" = "cursive"
selector.zDesc = "cursiveWithCrossBar"

[prime.z.variants.cursive-with-horizontal-crossbar]
rank = 27
description = "Cursive `z` with a horizontal cross bar"
selector.z = "cursiveWithHorizontalCrossBar"
selector."z/sansSerif" = "cursiveWithHorizontalCrossBar"
selector."z/reduced" = "cursive"
selector.zDesc = "cursiveWithHorizontalCrossBar"



[prime.long-s]
sampler = "ſ"
samplerExplain = "Long-S"
tag = "cv51"

[prime.long-s.variants.bent-hook]
rank = 1
description = "Long-S with standard bending hook"
selector."longs" = "bentHook"

[prime.long-s.variants.flat-hook]
rank = 2
description = "Long-S with flat hook"
selector."longs" = "flatHook"

[prime.long-s.variants.bent-hook-descending]
rank = 3
description = "Long-S with standard bending hook and descends baseline"
selector."longs" = "bentHookDescending"

[prime.long-s.variants.flat-hook-descending]
rank = 4
description = "Long-S with flat hook and descends baseline"
selector."longs" = "flatHookDescending"

[prime.long-s.variants.bent-hook-tailed]
rank = 5
description = "Long-S with standard bending hook and tail"
selector."longs" = "bentHookTailed"

[prime.long-s.variants.flat-hook-tailed]
rank = 6
description = "Long-S with flat hook and tail"
selector."longs" = "flatHookTailed"



[prime.eszet]
sampler = "ß"
samplerExplain = "Eszet"
tag = "cv52"

[prime.eszet.variants.traditional]
rank = 1
description = "Traditional, Fraktur-like Eszet (`ß`)"
selector.eszet = "traditional"

[prime.eszet.variants.traditional-descending]
rank = 2
description = "Traditional, Fraktur-like Eszet (`ß`) with descending bar"
selector.eszet = "traditionalDescending"

[prime.eszet.variants.traditional-tailed]
rank = 3
description = "Traditional, Fraktur-like Eszet (`ß`) with descending tail"
selector.eszet = "traditionalTailed"

[prime.eszet.variants.traditional-flat-hook]
rank = 4
description = "Traditional, Fraktur-like Eszet (`ß`) with flat hook"
selector.eszet = "traditionalFlatHook"

[prime.eszet.variants.traditional-flat-hook-descending]
rank = 5
description = "Traditional, Fraktur-like Eszet (`ß`) with flat hook and descending bar"
selector.eszet = "traditionalFlatHookDescending"

[prime.eszet.variants.traditional-flat-hook-tailed]
rank = 6
description = "Traditional, Fraktur-like Eszet (`ß`) with flat hook and descending tail"
selector.eszet = "traditionalFlatHookTailed"

[prime.eszet.variants.sulzbacher]
rank = 7
description = "More modern, beta-like Eszet (`ß`)"
selector.eszet = "sulzbacher"

[prime.eszet.variants.sulzbacher-descending]
rank = 8
description = "More modern, beta-like Eszet (`ß`) with descending bar"
selector.eszet = "sulzbacherDescending"

[prime.eszet.variants.sulzbacher-tailed]
rank = 9
description = "More modern, beta-like Eszet (`ß`) with descending tail"
selector.eszet = "sulzbacherTailed"

[prime.eszet.variants.longs-s-lig]
rank = 10
description = "Eszet (`ß`) shown as a ligature of long-S (`ſ`) and `s`"
selector.eszet = "longSSLig"

[prime.eszet.variants.longs-s-lig-descending]
rank = 11
description = "Eszet (`ß`) shown as a ligature of long-S (`ſ`) and `s`, with descending bar"
selector.eszet = "longSSLigDescending"

[prime.eszet.variants.longs-s-lig-tailed]
rank = 12
description = "Eszet (`ß`) shown as a ligature of long-S (`ſ`) and `s`, with descending tail"
selector.eszet = "longSSLigTailed"



[prime.turn-v]
sampler = "ΛΔ"
samplerExplain = "Greek capital Lambda (`Λ`) and Greek capital Delta (`Δ`)"

tag = "cv53"

[prime.turn-v.variants.straight]
rank = 1
description = "Standard, straight Greek capital Lambda (`Λ`) and Greek capital Delta (`Δ`)"
selector."grek/Lambda" = "straight"
selector."grek/Delta" = "straight"

[prime.turn-v.variants.curly]
rank = 2
description = "Slightly curly Greek capital Lambda (`Λ`) and Greek capital Delta (`Δ`), like Iosevka 2.x"
selector."grek/Lambda" = "curly"
selector."grek/Delta" = "curly"



[prime.lower-alpha]
sampler = "α"
samplerExplain = "Greek lower Alpha"
tag = "cv54"

[prime.lower-alpha.variants.crossing]
rank = 1
description = "Greek lower Alpha (`α`) with a cross-like shape at right"
selector."grek/alpha" = "crossing"

[prime.lower-alpha.variants.tailed-barred]
rank = 2
description = "Greek lower Alpha (`α`) with a straight right bar and tail"
selector."grek/alpha" = "tailedBarred"



[prime.lower-delta]
sampler = "δ"
samplerExplain = "Greek lower Delta"
tag = "VXAA"

[prime.lower-delta.variants.rounded]
rank = 1
description = "Greek lower Delta (`δ`) with rounded top"
selector."grek/delta" = "rounded"

[prime.lower-delta.variants.flat-top]
rank = 2
description = "Greek lower Delta (`δ`) with flat top"
selector."grek/delta" = "flatTop"



[prime.capital-gamma]
sampler = "Γ"
samplerExplain = "Greek capital Gamma"
tag = "cv55"

[prime.capital-gamma.variants.serifless]
rank = 1
description = "Standard capital Gamma (`Γ`) without serifs"
selector."grek/Gamma" = "serifless"
selector."grek/Gamma/sansSerif" = "serifless"
selector."cyrl/Ghe" = "serifless"
selector."cyrl/Ge" = "serifless"
selector."cyrl/ghe.upright" = "serifless"
selector."cyrl/ge.upright" = "serifless"

[prime.capital-gamma.variants.top-right-serifed]
rank = 2
description = "Standard capital Gamma (`Γ`) with serifs at top right"
selector."grek/Gamma" = "topRightSerifed"
selector."grek/Gamma/sansSerif" = "serifless"
selector."cyrl/Ghe" = "topRightSerifed"
selector."cyrl/Ge" = "serifless"
selector."cyrl/ghe.upright" = "topRightSerifed"
selector."cyrl/ge.upright" = "serifless"

[prime.capital-gamma.variants.serifed]
rank = 3
description = "Standard capital Gamma (`Γ`) with motion serifs at top and bottom"
selector."grek/Gamma" = "serifed"
selector."grek/Gamma/sansSerif" = "serifless"
selector."cyrl/Ghe" = "serifed"
selector."cyrl/Ge" = "serifed"
selector."cyrl/ghe.upright" = "serifed"
selector."cyrl/ge.upright" = "serifed"



[prime.lower-iota]
sampler = "ι"
samplerExplain = "Greek lower Iota"
tag = "cv56"

[prime.lower-iota.variants.zshaped]
rank = 1
description = "Z-shaped Greek lower Iota (`ι`)"
selector."grek/iota" = "zshaped"

[prime.lower-iota.variants.hooky-bottom]
rank = 2
description = "Greek lower Iota (`ι`) with a sharp-turning horizontal tail"
selector."grek/iota" = "hookyBottom"

[prime.lower-iota.variants.tailed]
rank = 3
description = "Greek lower Iota (`ι`) with curly tail"
selector."grek/iota" = "tailed"

[prime.lower-iota.variants.tailed-serifed]
rank = 4
description = "Greek lower Iota (`ι`) with top serif and curly tail"
selector."grek/iota" = "tailedSerifed"

[prime.lower-iota.variants.flat-tailed]
rank = 5
description = "Greek lower Iota (`ι`) with a curly-then-flat tail"
selector."grek/iota" = "flatTailed"

[prime.lower-iota.variants.serifed-flat-tailed]
rank = 6
description = "Greek lower Iota (`ι`) with top serif and a curly-then-flat tail"
selector."grek/iota" = "serifedFlatTailed"



[prime.lower-lambda]
sampler = "λ"
samplerExplain = "Greek small Lambda"
tag = "cv57"

[prime.lower-lambda.variants.straight]
rank = 1
description = "More-straight Greek small Lambda (`λ`)"
selector."grek/lambda" = "straight"

[prime.lower-lambda.variants.straight-turn]
rank = 2
description = "Greek small Lambda (`λ`) with straight upper and a tail turns leftward"
selector."grek/lambda" = "straightTurn"

[prime.lower-lambda.variants.curly]
rank = 3
description = "More curly Greek small Lambda (`λ`), like Iosevka 2.x"
selector."grek/lambda" = "curly"

[prime.lower-lambda.variants.curly-turn]
rank = 4
description = "More curly Greek small Lambda (`λ`), like Iosevka 2.x, with a tail turns leftward"
selector."grek/lambda" = "curlyTurn"



[prime.lower-mu]
sampler = "μ"
samplerExplain = "Greek small Mu"
tag = "VXAC"

[prime.lower-mu.variants.tailless]
rank = 1
description = "Tailless Greek small Mu (`μ`)"
selector."grek/mu" = "tailless"

[prime.lower-mu.variants.tailed]
rank = 2
description = "Tailed Greek small Mu (`μ`)"
selector."grek/mu" = "tailed"



[prime.lower-xi]
sampler = "ξ"
samplerExplain = "Greek lower Xi"
tag = "VXAB"

[prime.lower-xi.variants.rounded]
rank = 1
description = "Greek lower Xi (`ξ`) with rounded top"
selector."grek/xi" = "rounded"

[prime.lower-xi.variants.flat-top]
rank = 2
description = "Greek lower Xi (`ξ`) with flat top"
selector."grek/xi" = "flatTop"



[prime.cyrl-capital-ze]
sampler = "З"
samplerExplain = "Cyrillic Capital Ze"
tag = "cv58"

[prime.cyrl-capital-ze.variants.serifless]
rank = 1
description = "Serifless Cyrillic Capital Ze (`З`)"
selector."latn/Epsilon" = "serifless"
selector."cyrl/Ze" = "serifless"
selector."cyrl/Ksi" = "serifless"

[prime.cyrl-capital-ze.variants.unilateral-serifed]
rank = 2
description = "Cyrillic Capital Ze (`З`) with serif"
selector."latn/Epsilon" = "unilateralSerifed"
selector."cyrl/Ze" = "unilateralSerifed"
selector."cyrl/Ksi" = "unilateralSerifed"

[prime.cyrl-capital-ze.variants.bilateral-serifed]
rank = 3
description = "Cyrillic Capital Ze (`З`) with serif"
selector."latn/Epsilon" = "bilateralSerifed"
selector."cyrl/Ze" = "bilateralSerifed"
selector."cyrl/Ksi" = "unilateralSerifed"

[prime.cyrl-capital-ze.variants.unilateral-inward-serifed]
rank = 4
description = "Cyrillic Capital Ze (`З`) with inward serif"
selector."latn/Epsilon" = "unilateralInwardSerifed"
selector."cyrl/Ze" = "unilateralInwardSerifed"
selector."cyrl/Ksi" = "unilateralInwardSerifed"

[prime.cyrl-capital-ze.variants.bilateral-inward-serifed]
rank = 5
description = "Cyrillic Capital Ze (`З`) with inward serif"
selector."latn/Epsilon" = "bilateralInwardSerifed"
selector."cyrl/Ze" = "bilateralInwardSerifed"
selector."cyrl/Ksi" = "unilateralInwardSerifed"



[prime.cyrl-ze]
sampler = "з"
samplerExplain = "Cyrillic Lower Ze"
tag = "cv59"

[prime.cyrl-ze.variants.serifless]
rank = 1
description = "Serifless Cyrillic Lower Ze (`з`)"
selector."latn/epsilon" = "serifless"
selector."cyrl/ze" = "serifless"
selector."cyrl/ksi" = "serifless"

[prime.cyrl-ze.variants.unilateral-serifed]
rank = 2
description = "Cyrillic Lower Ze (`з`) with serif"
selector."latn/epsilon" = "unilateralSerifed"
selector."cyrl/ze" = "unilateralSerifed"
selector."cyrl/ksi" = "unilateralSerifed"

[prime.cyrl-ze.variants.bilateral-serifed]
rank = 3
description = "Cyrillic Lower Ze (`з`) with serif"
selector."latn/epsilon" = "bilateralSerifed"
selector."cyrl/ze" = "bilateralSerifed"
selector."cyrl/ksi" = "unilateralSerifed"

[prime.cyrl-ze.variants.unilateral-inward-serifed]
rank = 4
description = "Cyrillic Lower Ze (`з`) with inward serif"
selector."latn/epsilon" = "unilateralInwardSerifed"
selector."cyrl/ze" = "unilateralInwardSerifed"
selector."cyrl/ksi" = "unilateralInwardSerifed"

[prime.cyrl-ze.variants.bilateral-inward-serifed]
rank = 5
description = "Cyrillic Lower Ze (`з`) with inward serif"
selector."latn/epsilon" = "bilateralInwardSerifed"
selector."cyrl/ze" = "bilateralInwardSerifed"
selector."cyrl/ksi" = "unilateralInwardSerifed"



[prime.cyrl-capital-ka]
sampler = "К"
samplerExplain = "Cyrillic Capital Ka"
tag = "cv60"

[prime.cyrl-capital-ka.variants.straight-serifless]
rank = 1
description = "Cyrillic Capital Ka (`К`) with standard shape"
selector."cyrl/Ka" = "straightSerifless"
selector."cyrl/KaDescender" = "straightSerifless"
selector."cyrl/KaVBar" = "symmetricConnectedSeriflessVB"
selector."cyrl/KaHook" = "symmetricConnectedSeriflessKH"

[prime.cyrl-capital-ka.variants.curly-serifless]
rank = 2
description = "Slightly curly Cyrillic Capital Ka (`К`) , like Iosevka 2.x"
selector."cyrl/Ka" = "curlySerifless"
selector."cyrl/KaDescender" = "curlySerifless"
selector."cyrl/KaVBar" = "symmetricConnectedSeriflessVB"
selector."cyrl/KaHook" = "symmetricConnectedSeriflessKH"

[prime.cyrl-capital-ka.variants.symmetric-touching-serifless]
rank = 3
description = "Cyrillic Capital Ka (`К`) with symmetric legs disconnected to the vertical bar"
selector."cyrl/Ka" = "symmetricTouchingSerifless"
selector."cyrl/KaDescender" = "symmetricTouchingSerifless"
selector."cyrl/KaVBar" = "symmetricConnectedSeriflessVB"
selector."cyrl/KaHook" = "symmetricConnectedSeriflessKH"

[prime.cyrl-capital-ka.variants.symmetric-connected-serifless]
rank = 4
description = "Cyrillic Capital Ka (`К`) with symmetric legs connected to the vertical bar"
selector."cyrl/Ka" = "symmetricConnectedSerifless"
selector."cyrl/KaDescender" = "symmetricConnectedSerifless"
selector."cyrl/KaVBar" = "symmetricConnectedSeriflessVB"
selector."cyrl/KaHook" = "symmetricConnectedSeriflessKH"

[prime.cyrl-capital-ka.variants.straight-top-left-serifed]
rank = 5
description = "Cyrillic Capital Ka (`К`) with standard shape and serifs at top left"
selector."cyrl/Ka" = "straightTopLeftSerifed"
selector."cyrl/KaDescender" = "straightTopLeftSerifed"
selector."cyrl/KaVBar" = "symmetricConnectedTopLeftSerifedVB"
selector."cyrl/KaHook" = "symmetricConnectedTopLeftSerifedKH"

[prime.cyrl-capital-ka.variants.curly-top-left-serifed]
rank = 6
description = "Slightly curly Cyrillic Capital Ka (`К`) , like Iosevka 2.x, with serifs at top left"
selector."cyrl/Ka" = "curlyTopLeftSerifed"
selector."cyrl/KaDescender" = "curlyTopLeftSerifed"
selector."cyrl/KaVBar" = "symmetricConnectedTopLeftSerifedVB"
selector."cyrl/KaHook" = "symmetricConnectedTopLeftSerifedKH"

[prime.cyrl-capital-ka.variants.symmetric-touching-top-left-serifed]
rank = 7
description = "Cyrillic Capital Ka (`К`) with symmetric legs disconnected to the vertical bar, and serifs at top left"
selector."cyrl/Ka" = "symmetricTouchingTopLeftSerifed"
selector."cyrl/KaDescender" = "symmetricTouchingTopLeftSerifed"
selector."cyrl/KaVBar" = "symmetricConnectedTopLeftSerifedVB"
selector."cyrl/KaHook" = "symmetricConnectedTopLeftSerifedKH"

[prime.cyrl-capital-ka.variants.symmetric-connected-top-left-serifed]
rank = 8
description = "Cyrillic Capital Ka (`К`) with symmetric legs connected to the vertical bar, and serifs at top left"
selector."cyrl/Ka" = "symmetricConnectedTopLeftSerifed"
selector."cyrl/KaDescender" = "symmetricConnectedTopLeftSerifed"
selector."cyrl/KaVBar" = "symmetricConnectedTopLeftSerifedVB"
selector."cyrl/KaHook" = "symmetricConnectedTopLeftSerifedKH"

[prime.cyrl-capital-ka.variants.straight-bottom-right-serifed]
rank = 9
description = "Cyrillic Capital Ka (`К`) with standard shape and serifs at bottom right"
selector."cyrl/Ka" = "straightBottomRightSerifed"
selector."cyrl/KaDescender" = "straightBottomRightSerifed"
selector."cyrl/KaVBar" = "symmetricConnectedBottomRightSerifedVB"
selector."cyrl/KaHook" = "symmetricConnectedSeriflessKH"

[prime.cyrl-capital-ka.variants.curly-bottom-right-serifed]
rank = 10
description = "Slightly curly Cyrillic Capital Ka (`К`) , like Iosevka 2.x, with serifs at bottom right"
selector."cyrl/Ka" = "curlyBottomRightSerifed"
selector."cyrl/KaDescender" = "curlyBottomRightSerifed"
selector."cyrl/KaVBar" = "symmetricConnectedBottomRightSerifedVB"
selector."cyrl/KaHook" = "symmetricConnectedSeriflessKH"

[prime.cyrl-capital-ka.variants.symmetric-touching-bottom-right-serifed]
rank = 11
description = "Cyrillic Capital Ka (`К`) with symmetric legs disconnected to the vertical bar, and serifs at bottom right"
selector."cyrl/Ka" = "symmetricTouchingBottomRightSerifed"
selector."cyrl/KaDescender" = "symmetricTouchingBottomRightSerifed"
selector."cyrl/KaVBar" = "symmetricConnectedBottomRightSerifedVB"
selector."cyrl/KaHook" = "symmetricConnectedSeriflessKH"

[prime.cyrl-capital-ka.variants.symmetric-connected-bottom-right-serifed]
rank = 12
description = "Cyrillic Capital Ka (`К`) with symmetric legs connected to the vertical bar, and serifs at bottom right"
selector."cyrl/Ka" = "symmetricConnectedBottomRightSerifed"
selector."cyrl/KaDescender" = "symmetricConnectedBottomRightSerifed"
selector."cyrl/KaVBar" = "symmetricConnectedBottomRightSerifedVB"
selector."cyrl/KaHook" = "symmetricConnectedSeriflessKH"

[prime.cyrl-capital-ka.variants.straight-serifed]
rank = 13
description = "Cyrillic Capital Ka (`К`) with standard shape and serifs"
selector."cyrl/Ka" = "straightSerifed"
selector."cyrl/KaDescender" = "straightSerifed"
selector."cyrl/KaVBar" = "symmetricConnectedSerifedVB"
selector."cyrl/KaHook" = "symmetricConnectedSerifedKH"

[prime.cyrl-capital-ka.variants.curly-serifed]
rank = 14
description = "Slightly curly Cyrillic Capital Ka (`К`) , like Iosevka 2.x, with serifs"
selector."cyrl/Ka" = "curlySerifed"
selector."cyrl/KaDescender" = "curlySerifed"
selector."cyrl/KaVBar" = "symmetricConnectedSerifedVB"
selector."cyrl/KaHook" = "symmetricConnectedSerifedKH"

[prime.cyrl-capital-ka.variants.symmetric-touching-serifed]
rank = 15
description = "Cyrillic Capital Ka (`К`) with symmetric legs disconnected to the vertical bar, and serifs"
selector."cyrl/Ka" = "symmetricTouchingSerifed"
selector."cyrl/KaDescender" = "symmetricTouchingSerifed"
selector."cyrl/KaVBar" = "symmetricConnectedSerifedVB"
selector."cyrl/KaHook" = "symmetricConnectedSerifedKH"

[prime.cyrl-capital-ka.variants.symmetric-connected-serifed]
rank = 16
description = "Cyrillic Capital Ka (`К`) with symmetric legs connected to the vertical bar, and serifs"
selector."cyrl/Ka" = "symmetricConnectedSerifed"
selector."cyrl/KaDescender" = "symmetricConnectedSerifed"
selector."cyrl/KaVBar" = "symmetricConnectedSerifedVB"
selector."cyrl/KaHook" = "symmetricConnectedSerifedKH"

[prime.cyrl-capital-ka.variants.straight-top-left-and-bottom-right-serifed]
rank = 17
description = "Cyrillic Capital Ka (`К`) with standard shape and serifs at top left and bottom right"
selector."cyrl/Ka" = "straightTopLeftAndBottomRightSerifed"
selector."cyrl/KaDescender" = "straightTopLeftSerifed"
selector."cyrl/KaVBar" = "symmetricConnectedTopLeftAndBottomRightSerifedVB"
selector."cyrl/KaHook" = "symmetricConnectedTopLeftSerifedKH"

[prime.cyrl-capital-ka.variants.curly-top-left-and-bottom-right-serifed]
rank = 18
description = "Slightly curly Cyrillic Capital Ka (`К`) , like Iosevka 2.x, with serifs at top left and bottom right"
selector."cyrl/Ka" = "curlyTopLeftAndBottomRightSerifed"
selector."cyrl/KaDescender" = "curlyTopLeftSerifed"
selector."cyrl/KaVBar" = "symmetricConnectedTopLeftAndBottomRightSerifedVB"
selector."cyrl/KaHook" = "symmetricConnectedTopLeftSerifedKH"

[prime.cyrl-capital-ka.variants.symmetric-touching-top-left-and-bottom-right-serifed]
rank = 19
description = "Cyrillic Capital Ka (`К`) with symmetric legs disconnected to the vertical bar, and serifs at top left and bottom right"
selector."cyrl/Ka" = "symmetricTouchingTopLeftAndBottomRightSerifed"
selector."cyrl/KaDescender" = "symmetricTouchingTopLeftSerifed"
selector."cyrl/KaVBar" = "symmetricConnectedTopLeftAndBottomRightSerifedVB"
selector."cyrl/KaHook" = "symmetricConnectedTopLeftSerifedKH"

[prime.cyrl-capital-ka.variants.symmetric-connected-top-left-and-bottom-right-serifed]
rank = 20
description = "Cyrillic Capital Ka (`К`) with symmetric legs connected to the vertical bar, and serifs at top left and bottom right"
selector."cyrl/Ka" = "symmetricConnectedTopLeftAndBottomRightSerifed"
selector."cyrl/KaDescender" = "symmetricConnectedTopLeftSerifed"
selector."cyrl/KaVBar" = "symmetricConnectedTopLeftAndBottomRightSerifedVB"
selector."cyrl/KaHook" = "symmetricConnectedTopLeftSerifedKH"



[prime.cyrl-ka]
sampler = "к"
samplerExplain = "Cyrillic Ka"
tag = "cv61"

[prime.cyrl-ka.variants.straight-serifless]
rank = 1
description = "Cyrillic Lower Ka (`к`) with standard shape, and without serifs"
selector."cyrl/ka" = "straightSerifless"
selector."cyrl/kaDescender" = "straightSerifless"
selector."cyrl/kaVBar" = "symmetricConnectedSeriflessVB"
selector."cyrl/kaHook" = "symmetricConnectedSeriflessKH"

[prime.cyrl-ka.variants.curly-serifless]
rank = 2
description = "Slightly curly Cyrillic Lower Ka (`к`) , like Iosevka 2.x, and without serifs"
selector."cyrl/ka" = "curlySerifless"
selector."cyrl/kaDescender" = "curlySerifless"
selector."cyrl/kaVBar" = "symmetricConnectedSeriflessVB"
selector."cyrl/kaHook" = "symmetricConnectedSeriflessKH"

[prime.cyrl-ka.variants.symmetric-touching-serifless]
rank = 3
description = "Cyrillic Lower Ka (`к`) with symmetric legs disconnected to the vertical bar, and without serifs"
selector."cyrl/ka" = "symmetricTouchingSerifless"
selector."cyrl/kaDescender" = "symmetricTouchingSerifless"
selector."cyrl/kaVBar" = "symmetricConnectedSeriflessVB"
selector."cyrl/kaHook" = "symmetricConnectedSeriflessKH"

[prime.cyrl-ka.variants.symmetric-connected-serifless]
rank = 4
description = "Cyrillic Lower Ka (`к`) with symmetric legs connected to the vertical bar, and without serifs"
selector."cyrl/ka" = "symmetricConnectedSerifless"
selector."cyrl/kaDescender" = "symmetricConnectedSerifless"
selector."cyrl/kaVBar" = "symmetricConnectedSeriflessVB"
selector."cyrl/kaHook" = "symmetricConnectedSeriflessKH"

[prime.cyrl-ka.variants.straight-top-left-serifed]
rank = 5
description = "Cyrillic Lower Ka (`к`) with standard shape and serifs at top left"
selector."cyrl/ka" = "straightTopLeftSerifed"
selector."cyrl/kaDescender" = "straightTopLeftSerifed"
selector."cyrl/kaVBar" = "symmetricConnectedTopLeftSerifedVB"
selector."cyrl/kaHook" = "symmetricConnectedTopLeftSerifedKH"

[prime.cyrl-ka.variants.curly-top-left-serifed]
rank = 6
description = "Slightly curly Cyrillic Lower Ka (`к`) , like Iosevka 2.x, with serifs at top left"
selector."cyrl/ka" = "curlyTopLeftSerifed"
selector."cyrl/kaDescender" = "curlyTopLeftSerifed"
selector."cyrl/kaVBar" = "symmetricConnectedTopLeftSerifedVB"
selector."cyrl/kaHook" = "symmetricConnectedTopLeftSerifedKH"

[prime.cyrl-ka.variants.symmetric-touching-top-left-serifed]
rank = 7
description = "Cyrillic Lower Ka (`к`) with symmetric legs disconnected to the vertical bar, and serifs at top left"
selector."cyrl/ka" = "symmetricTouchingTopLeftSerifed"
selector."cyrl/kaDescender" = "symmetricTouchingTopLeftSerifed"
selector."cyrl/kaVBar" = "symmetricConnectedTopLeftSerifedVB"
selector."cyrl/kaHook" = "symmetricConnectedTopLeftSerifedKH"

[prime.cyrl-ka.variants.symmetric-connected-top-left-serifed]
rank = 8
description = "Cyrillic Lower Ka (`к`) with symmetric legs connected to the vertical bar, and serifs at top left"
selector."cyrl/ka" = "symmetricConnectedTopLeftSerifed"
selector."cyrl/kaDescender" = "symmetricConnectedTopLeftSerifed"
selector."cyrl/kaVBar" = "symmetricConnectedTopLeftSerifedVB"
selector."cyrl/kaHook" = "symmetricConnectedTopLeftSerifedKH"

[prime.cyrl-ka.variants.straight-bottom-right-serifed]
rank = 9
description = "Cyrillic Lower Ka (`к`) with standard shape and serifs at bottom right"
selector."cyrl/ka" = "straightBottomRightSerifed"
selector."cyrl/kaDescender" = "straightBottomRightSerifed"
selector."cyrl/kaVBar" = "symmetricConnectedBottomRightSerifedVB"
selector."cyrl/kaHook" = "symmetricConnectedSeriflessKH"

[prime.cyrl-ka.variants.curly-bottom-right-serifed]
rank = 10
description = "Slightly curly Cyrillic Lower Ka (`к`) , like Iosevka 2.x, with serifs at bottom right"
selector."cyrl/ka" = "curlyBottomRightSerifed"
selector."cyrl/kaDescender" = "curlyBottomRightSerifed"
selector."cyrl/kaVBar" = "symmetricConnectedBottomRightSerifedVB"
selector."cyrl/kaHook" = "symmetricConnectedSeriflessKH"

[prime.cyrl-ka.variants.symmetric-touching-bottom-right-serifed]
rank = 11
description = "Cyrillic Lower Ka (`к`) with symmetric legs disconnected to the vertical bar, and serifs at bottom right"
selector."cyrl/ka" = "symmetricTouchingBottomRightSerifed"
selector."cyrl/kaDescender" = "symmetricTouchingBottomRightSerifed"
selector."cyrl/kaVBar" = "symmetricConnectedBottomRightSerifedVB"
selector."cyrl/kaHook" = "symmetricConnectedSeriflessKH"

[prime.cyrl-ka.variants.symmetric-connected-bottom-right-serifed]
rank = 12
description = "Cyrillic Lower Ka (`к`) with symmetric legs connected to the vertical bar, and serifs at bottom right"
selector."cyrl/ka" = "symmetricConnectedBottomRightSerifed"
selector."cyrl/kaDescender" = "symmetricConnectedBottomRightSerifed"
selector."cyrl/kaVBar" = "symmetricConnectedBottomRightSerifedVB"
selector."cyrl/kaHook" = "symmetricConnectedSeriflessKH"

[prime.cyrl-ka.variants.straight-serifed]
rank = 13
description = "Cyrillic Lower Ka (`к`) with standard shape and serifs"
selector."cyrl/ka" = "straightSerifed"
selector."cyrl/kaDescender" = "straightSerifed"
selector."cyrl/kaVBar" = "symmetricConnectedSerifedVB"
selector."cyrl/kaHook" = "symmetricConnectedSerifedKH"

[prime.cyrl-ka.variants.curly-serifed]
rank = 14
description = "Slightly curly Cyrillic Lower Ka (`к`) , like Iosevka 2.x, with serifs"
selector."cyrl/ka" = "curlySerifed"
selector."cyrl/kaDescender" = "curlySerifed"
selector."cyrl/kaVBar" = "symmetricConnectedSerifedVB"
selector."cyrl/kaHook" = "symmetricConnectedSerifedKH"

[prime.cyrl-ka.variants.symmetric-touching-serifed]
rank = 15
description = "Cyrillic Lower Ka (`к`) with symmetric legs disconnected to the vertical bar, and serifs"
selector."cyrl/ka" = "symmetricTouchingSerifed"
selector."cyrl/kaDescender" = "symmetricTouchingSerifed"
selector."cyrl/kaVBar" = "symmetricConnectedSerifedVB"
selector."cyrl/kaHook" = "symmetricConnectedSerifedKH"

[prime.cyrl-ka.variants.symmetric-connected-serifed]
rank = 16
description = "Cyrillic Lower Ka (`к`) with symmetric legs connected to the vertical bar, and serifs"
selector."cyrl/ka" = "symmetricConnectedSerifed"
selector."cyrl/kaDescender" = "symmetricConnectedSerifed"
selector."cyrl/kaVBar" = "symmetricConnectedSerifedVB"
selector."cyrl/kaHook" = "symmetricConnectedSerifedKH"

[prime.cyrl-ka.variants.straight-top-left-and-bottom-right-serifed]
rank = 17
description = "Cyrillic Lower Ka (`к`) with standard shape and serifs at top left and bottom right"
selector."cyrl/ka" = "straightTopLeftAndBottomRightSerifed"
selector."cyrl/kaDescender" = "straightTopLeftSerifed"
selector."cyrl/kaVBar" = "symmetricConnectedTopLeftAndBottomRightSerifedVB"
selector."cyrl/kaHook" = "symmetricConnectedTopLeftSerifedKH"

[prime.cyrl-ka.variants.curly-top-left-and-bottom-right-serifed]
rank = 18
description = "Slightly curly Cyrillic Lower Ka (`к`) , like Iosevka 2.x, with serifs at top left and bottom right"
selector."cyrl/ka" = "curlyTopLeftAndBottomRightSerifed"
selector."cyrl/kaDescender" = "curlyTopLeftSerifed"
selector."cyrl/kaVBar" = "symmetricConnectedTopLeftAndBottomRightSerifedVB"
selector."cyrl/kaHook" = "symmetricConnectedTopLeftSerifedKH"

[prime.cyrl-ka.variants.symmetric-touching-top-left-and-bottom-right-serifed]
rank = 19
description = "Cyrillic Lower Ka (`к`) with symmetric legs disconnected to the vertical bar, and serifs at top left and bottom right"
selector."cyrl/ka" = "symmetricTouchingTopLeftAndBottomRightSerifed"
selector."cyrl/kaDescender" = "symmetricTouchingTopLeftSerifed"
selector."cyrl/kaVBar" = "symmetricConnectedTopLeftAndBottomRightSerifedVB"
selector."cyrl/kaHook" = "symmetricConnectedTopLeftSerifedKH"

[prime.cyrl-ka.variants.symmetric-connected-top-left-and-bottom-right-serifed]
rank = 20
description = "Cyrillic Lower Ka (`к`) with symmetric legs connected to the vertical bar, and serifs at top left and bottom right"
selector."cyrl/ka" = "symmetricConnectedTopLeftAndBottomRightSerifed"
selector."cyrl/kaDescender" = "symmetricConnectedTopLeftSerifed"
selector."cyrl/kaVBar" = "symmetricConnectedTopLeftAndBottomRightSerifedVB"
selector."cyrl/kaHook" = "symmetricConnectedTopLeftSerifedKH"



[prime.cyrl-el]
sampler = "л"
samplerExplain = "Cyrillic Lower El"
tag = "cv62"

[prime.cyrl-el.variants.straight]
rank = 1
description = "Cyrillic Lower El (`л`) with standard shape"
selector."cyrl/el" = "straight"

[prime.cyrl-el.variants.tailed]
rank = 2
description = "Cyrillic Lower El (`л`) with tail shape"
selector."cyrl/el" = "tailed"



[prime.cyrl-en]
sampler = "н"
samplerExplain = "Cyrillic Lower En"
tag = "cv63"

[prime.cyrl-en.variants.serifless]
rank = 1
description = "Cyrillic Lower En (`н`) with standard shape"
selector."cyrl/en" = "serifless"
selector."cyrl/en.BGR" = "serifless"
selector."cyrl/en/descenderBase" = "serifless"
selector."cyrl/nje/leftHalf" = "serifless"

[prime.cyrl-en.variants.tailed-serifless]
rank = 2
description = "Cyrillic Lower En (`н`) with tail"
selector."cyrl/en" = "tailed"
selector."cyrl/en.BGR" = "tailed"
selector."cyrl/en/descenderBase" = "serifless"
selector."cyrl/nje/leftHalf" = "serifless"

[prime.cyrl-en.variants.top-left-serifed]
rank = 3
description = "Cyrillic Lower En (`н`) with outward serifs only at top left"
selector."cyrl/en" = "topLeftSerifed"
selector."cyrl/en.BGR" = "topLeftSerifed"
selector."cyrl/en/descenderBase" = "topLeftSerifed"
selector."cyrl/nje/leftHalf" = "topLeftSerifed"

[prime.cyrl-en.variants.tailed-top-left-serifed]
rank = 4
description = "Cyrillic Lower En (`н`) with tail and outward serifs only at top left"
selector."cyrl/en" = "tailedTopLeftSerifed"
selector."cyrl/en.BGR" = "tailedTopLeftSerifed"
selector."cyrl/en/descenderBase" = "topLeftSerifed"
selector."cyrl/nje/leftHalf" = "topLeftSerifed"

[prime.cyrl-en.variants.top-left-bottom-right-serifed]
rank = 5
description = "Cyrillic Lower En (`н`) with outward serifs only at top left and bottom right"
selector."cyrl/en" = "topLeftBottomRightSerifed"
selector."cyrl/en.BGR" = "topLeftBottomRightSerifed"
selector."cyrl/en/descenderBase" = "topLeftSerifed"
selector."cyrl/nje/leftHalf" = "topLeftSerifed"

[prime.cyrl-en.variants.serifed]
rank = 6
description = "Cyrillic Lower En (`н`) with full serifs"
selector."cyrl/en" = "serifed"
selector."cyrl/en.BGR" = "serifedBGR"
selector."cyrl/en/descenderBase" = "serifed"
selector."cyrl/nje/leftHalf" = "serifed"

[prime.cyrl-en.variants.tailed-serifed]
rank = 7
description = "Cyrillic Lower En (`н`) with tail and full serifs"
selector."cyrl/en" = "tailedSerifed"
selector."cyrl/en.BGR" = "tailedSerifedBGR"
selector."cyrl/en/descenderBase" = "serifed"
selector."cyrl/nje/leftHalf" = "serifed"



[prime.cyrl-ef]
sampler = "ф"
samplerExplain = "Cyrillic Lower Ef"
tag = "cv64"

[prime.cyrl-ef.variants.serifless]
rank = 1
description = "Cyrillic Lower Ef (`ф`) with standard shape and without serifs"
selector."cyrl/ef"  = "serifless"

[prime.cyrl-ef.variants.cursive]
rank = 2
description = "Cyrillic Lower Ef (`ф`) with cursive shape"
selector."cyrl/ef"  = "cursive"

[prime.cyrl-ef.variants.top-serifed]
rank = 3
description = "Cyrillic Lower Ef (`ф`) with standard shape and serif at top"
selector."cyrl/ef"  = "topSerifed"

[prime.cyrl-ef.variants.serifed]
rank = 4
description = "Cyrillic Lower Ef (`ф`) with standard shape and serifs at top and bottom"
selector."cyrl/ef"  = "serifed"



[prime.latn-phi]
# Untagged -- shape change only
[prime.latn-phi.variants.serifless]
rank = 1
selector."latn/phi"  = "serifless"

[prime.latn-phi.variants.top-serifed]
rank = 2
selector."latn/phi"  = "topSerifed"

[prime.latn-phi.variants.serifed]
rank = 3
selector."latn/phi"  = "serifed"



[prime.cyrl-che]
sampler = "ч"
samplerExplain = "Cyrillic Lower Che"
tag = "cv65"

[prime.cyrl-che.variants.standard]
rank = 1
description = "Cyrillic Lower Che (`ч`) with standard shape"
selector."cyrl/che" = "standard"

[prime.cyrl-che.variants.tailed]
rank = 2
description = "Cyrillic Lower Che (`ч`) with tail"
selector."cyrl/che" = "tailed"



[prime.cyrl-capital-u]
sampler = "У"
samplerExplain = "Cyrillic Capital U"
tag = "cv66"

[prime.cyrl-capital-u.variants.straight]
rank = 1
description = "Cyrillic capital U (`У`) that is fully straight"
selector."cyrl/U" = "straight"

[prime.cyrl-capital-u.variants.straight-turn]
rank = 2
description = "Cyrillic capital U (`У`) with straight upper and a tail turns leftward"
selector."cyrl/U" = "straightTurn"

[prime.cyrl-capital-u.variants.curly]
rank = 3
description = "More curly Cyrillic capital U (`У`), like Iosevka 2.x"
selector."cyrl/U" = "curly"

[prime.cyrl-capital-u.variants.curly-turn]
rank = 4
description = "More curly Cyrillic capital U (`У`), like Iosevka 2.x, with a tail turns leftward"
selector."cyrl/U" = "curlyTurn"

[prime.cyrl-capital-u.variants.cursive]
rank = 5
description = "Cursive-like Cyrillic capital U (`У`)"
selector."cyrl/U" = "cursive"

[prime.cyrl-capital-u.variants.cursive-flat-hook]
rank = 6
description = "Cursive-like Cyrillic capital U (`У`) with flat terminal hook"
selector."cyrl/U" = "cursiveFlatHook"



[prime.cyrl-capital-ya]
sampler = "Я"
samplerExplain = "Cyrillic Capital Ya"
tag = "cv67"

[prime.cyrl-capital-ya.variants.straight]
rank = 1
description = "Standard, straight-leg Cyrillic Capital Ya (`Я`)"
selector."cyrl/Ya" = "straight"

[prime.cyrl-capital-ya.variants.curly]
rank = 2
description = "Slightly curly-legged Cyrillic Capital Ya (`Я`), like Iosevka 2.x"
selector."cyrl/Ya" = "curly"

[prime.cyrl-capital-ya.variants.standing]
rank = 3
description = "Cyrillic Capital Ya (`Я`) with near-vertical standing leg"
selector."cyrl/Ya" = "standing"

[prime.cyrl-capital-ya.variants.straight-open]
rank = 4
description = "Standard, straight-leg Cyrillic Capital Ya (`Я`), with open contour at bottom"
selector."cyrl/Ya" = "straightOpen"

[prime.cyrl-capital-ya.variants.curly-open]
rank = 5
description = " Slightly curly-legged Cyrillic Capital Ya (`Я`), like Iosevka 2.x, with open contour at bottom"
selector."cyrl/Ya" = "curlyOpen"

[prime.cyrl-capital-ya.variants.standing-open]
rank = 6
description = "Cyrillic Capital Ya (`Я`) with near-vertical standing leg, with open contour at bottom"
selector."cyrl/Ya" = "standingOpen"



[prime.cyrl-ya]
sampler = "я"
samplerExplain = "Cyrillic Lower Ya"
tag = "cv68"

[prime.cyrl-ya.variants.straight]
rank = 1
description = "Standard, straight-leg Cyrillic Lower Ya (`я`)"
selector."cyrl/ya" = "straightSmallCyrl"

[prime.cyrl-ya.variants.curly]
rank = 2
description = "Slightly curly-legged Cyrillic Lower Ya (`я`), like Iosevka 2.x"
selector."cyrl/ya" = "curlySmallCyrl"

[prime.cyrl-ya.variants.standing]
rank = 3
description = "Cyrillic Lower Ya (`я`) with near-vertical standing leg"
selector."cyrl/ya" = "standingSmallCyrl"

[prime.cyrl-ya.variants.straight-open]
rank = 4
description = "Standard, straight-leg Cyrillic Lower Ya (`я`), with open contour at bottom"
selector."cyrl/ya" = "straightOpenSmallCyrl"

[prime.cyrl-ya.variants.curly-open]
rank = 5
description = " Slightly curly-legged Cyrillic Lower Ya (`я`), like Iosevka 2.x, with open contour at bottom"
selector."cyrl/ya" = "curlyOpenSmallCyrl"

[prime.cyrl-ya.variants.standing-open]
rank = 6
description = "Cyrillic Lower Ya (`я`) with near-vertical standing leg, with open contour at bottom"
selector."cyrl/ya" = "standingOpenSmallCyrl"

[prime.cyrl-ya.variants.straight-tailed]
rank = 7
description = "Standard, straight-leg Cyrillic Lower Ya (`я`), with tail"
selector."cyrl/ya" = "straightTailed"

[prime.cyrl-ya.variants.curly-tailed]
rank = 8
description = " Slightly curly-legged Cyrillic Lower Ya (`я`), like Iosevka 2.x, with tail"
selector."cyrl/ya" = "curlyTailed"

[prime.cyrl-ya.variants.standing-tailed]
rank = 9
description = "Cyrillic Lower Ya (`я`) with near-vertical standing leg"
selector."cyrl/ya" = "standingTailed"

[prime.cyrl-ya.variants.straight-open-tailed]
rank = 10
description = "Standard, straight-leg Cyrillic Lower Ya (`я`), with open contour at bottom and tail"
selector."cyrl/ya" = "straightOpenTailed"

[prime.cyrl-ya.variants.curly-open-tailed]
rank = 11
description = " Slightly curly-legged Cyrillic Lower Ya (`я`), like Iosevka 2.x, with open contour at bottom and tail"
selector."cyrl/ya" = "curlyOpenTailed"

[prime.cyrl-ya.variants.standing-open-tailed]
rank = 12
description = "Cyrillic Lower Ya (`я`) with near-vertical standing leg, with open contour at bottom and tail"
selector."cyrl/ya" = "standingOpenTailed"



[prime.cyrl-capital-yeri]
# No tags and sampler -- for style-driven variation

[prime.cyrl-capital-yeri.variants.corner]
rank = 1
selector."cyrl/Yer"  = "corner"
selector."cyrl/Yeri" = "corner"
selector."cyrl/YeriBar" = "corner"
selector."cyrl/Yery" = "corner"
selector."cyrl/Nje/rightHalf"  = "corner"
selector."cyrl/Lje"  = "corner"

[prime.cyrl-capital-yeri.variants.round]
rank = 2
selector."cyrl/Yer"  = "round"
selector."cyrl/Yeri" = "round"
selector."cyrl/YeriBar" = "round"
selector."cyrl/Yery" = "round"
selector."cyrl/Nje/rightHalf"  = "round"
selector."cyrl/Lje"  = "round"

[prime.cyrl-capital-yeri.variants.cursive]
rank = 3
selector."cyrl/Yer"  = "cursive"
selector."cyrl/Yeri" = "cursive"
selector."cyrl/YeriBar" = "cursive"
selector."cyrl/Yery" = "cursive"
selector."cyrl/Nje/rightHalf"  = "cursive"
selector."cyrl/Lje"  = "cursive"

[prime.cyrl-yeri]
sampler = "ь"
samplerExplain = "Cyrillic Lower Yeri and related letters"
tag = "cv69"

[prime.cyrl-yeri.variants.corner]
rank = 1
description = "Cyrillic Lower Yeri (`ь`) with corner at bottom left"
selector."cyrl/yer"  = "corner"
selector."cyrl/yer.BGR"  = "round" # Bulgarian
selector."cyrl/yeri" = "corner"
selector."cyrl/yeri.BGR" = "round" # Bulgarian
selector."cyrl/yeriBar" = "corner"
selector."cyrl/nje/rightHalf"  = "corner"
selector."cyrl/lje"  = "corner"

[prime.cyrl-yeri.variants.round]
rank = 2
description = "Cyrillic Lower Yeri (`ь`) with rounded shape"
selector."cyrl/yer"  = "round"
selector."cyrl/yer.BGR"  = "round"
selector."cyrl/yeri" = "round"
selector."cyrl/yeri.BGR" = "round"
selector."cyrl/yeriBar" = "round"
selector."cyrl/nje/rightHalf"  = "round"
selector."cyrl/lje"  = "round"

[prime.cyrl-yeri.variants.cursive]
rank = 3
description = "Cyrillic Lower Yeri (`ь`) with cursive shape"
selector."cyrl/yer"  = "cursive"
selector."cyrl/yer.BGR"  = "cursive"
selector."cyrl/yeri" = "cursive"
selector."cyrl/yeri.BGR" = "cursive"
selector."cyrl/yeriBar" = "cursive"
selector."cyrl/nje/rightHalf"  = "cursive"
selector."cyrl/lje"  = "cursive"



[prime.cyrl-yery]
sampler = "ы"
samplerExplain = "Cyrillic Lower Yery"
tag = "cv70"

[prime.cyrl-yery.variants.corner]
rank = 1
description = "Cyrillic Lower Yery (`ы`) with corner at bottom left"
selector."cyrl/yery" = "corner"

[prime.cyrl-yery.variants.round]
rank = 2
description = "Cyrillic Lower Yery (`ы`) with rounded shape"
selector."cyrl/yery" = "round"

[prime.cyrl-yery.variants.cursive]
rank = 3
description = "Cyrillic Lower Yery (`ы`) with cursive shape"
selector."cyrl/yery" = "cursive"

[prime.cyrl-yery.variants.corner-tailed]
rank = 4
description = "Cyrillic Lower Yery (`ы`) with corner at bottom left and tail"
selector."cyrl/yery" = "cornerTailed"

[prime.cyrl-yery.variants.round-tailed]
rank = 5
description = "Cyrillic Lower Yery (`ы`) with rounded shape and tail"
selector."cyrl/yery" = "roundTailed"

[prime.cyrl-yery.variants.cursive-tailed]
rank = 6
description = "Cyrillic Lower Yery (`ы`) with cursive shape and tail"
selector."cyrl/yery" = "cursiveTailed"



[prime.zero]
sampler = "0"
tag = "cv71"

[prime.zero.variants.unslashed]
rank = 1
description = "O-like Zero (`0`)"
selector.zero = "unslashed"
selector."zero/forceSlashed" = "slashed"
selector."zero/forceUnslashed" = "unslashed"

[prime.zero.variants.slashed]
rank = 2
description = "Slashed Zero (`0`)"
selector.zero = "slashed"
selector."zero/forceSlashed" = "slashed"
selector."zero/forceUnslashed" = "unslashed"

[prime.zero.variants.reverse-slashed]
rank = 3
description = "Reverse-slashed Zero (`0`)"
selector.zero = "reverseSlashed"
selector."zero/forceSlashed" = "slashed"
selector."zero/forceUnslashed" = "unslashed"

[prime.zero.variants.dotted]
rank = 4
description = "Dotted Zero (`0`)"
selector.zero = "dotted"
selector."zero/forceSlashed" = "slashed"
selector."zero/forceUnslashed" = "unslashed"

[prime.zero.variants.long-dotted]
rank = 5
description = "Long-dotted Zero (`0`) like Hack"
selector.zero = "longDotted"
selector."zero/forceSlashed" = "slashed"
selector."zero/forceUnslashed" = "unslashed"

[prime.zero.variants.slashed-split]
rank = 6
description = "Slashed Zero (`0`) with slash separated from the outline"
selector.zero = "slashedSplit"
selector."zero/forceSlashed" = "slashedSplit"
selector."zero/forceUnslashed" = "unslashed"

[prime.zero.variants.reverse-slashed-split]
rank = 7
description = "Reverse-slashed Zero (`0`) with slash separated from the outline"
selector.zero = "reverseSlashedSplit"
selector."zero/forceSlashed" = "slashedSplit"
selector."zero/forceUnslashed" = "unslashed"

[prime.zero.variants.unslashed-oval]
rank = 8
description = "O-like Zero (`0`) but more round"
selector.zero = "unslashedOval"
selector."zero/forceSlashed" = "slashedOval"
selector."zero/forceUnslashed" = "unslashedOval"

[prime.zero.variants.slashed-oval]
rank = 9
description = "Slashed Zero (`0`) but more round"
selector.zero = "slashedOval"
selector."zero/forceSlashed" = "slashedOval"
selector."zero/forceUnslashed" = "unslashedOval"

[prime.zero.variants.reverse-slashed-oval]
rank = 10
description = "Reverse-slashed Zero (`0`) but more round"
selector.zero = "reverseSlashedOval"
selector."zero/forceSlashed" = "slashedOval"
selector."zero/forceUnslashed" = "unslashedOval"

[prime.zero.variants.dotted-oval]
rank = 11
description = "Dotted Zero (`0`) but more round"
selector.zero = "dottedOval"
selector."zero/forceSlashed" = "slashedOval"
selector."zero/forceUnslashed" = "unslashedOval"

[prime.zero.variants.long-dotted-oval]
rank = 12
description = "Long-dotted Zero (`0`) like Hack but more round"
selector.zero = "longDottedOval"
selector."zero/forceSlashed" = "slashedOval"
selector."zero/forceUnslashed" = "unslashedOval"

[prime.zero.variants.slashed-split-oval]
rank = 13
description = "Slashed Zero (`0`) with slash separated from the outline and more round"
selector.zero = "slashedSplitOval"
selector."zero/forceSlashed" = "slashedSplitOval"
selector."zero/forceUnslashed" = "unslashedOval"

[prime.zero.variants.reverse-slashed-split-oval]
rank = 14
description = "Reverse-slashed Zero (`0`) with slash separated from the outline and more round"
selector.zero = "reverseSlashedSplitOval"
selector."zero/forceSlashed" = "slashedSplitOval"
selector."zero/forceUnslashed" = "unslashedOval"



[prime.one]
sampler = "1"
tag = "cv72"

[prime.one.variants.line]
rank = 1
description = "`1` drawn just like a straight line"
selector.one = "line"

[prime.one.variants.no-base]
rank = 2
description = "`1` without bottom serif"
selector.one = "noBase"

[prime.one.variants.base]
rank = 3
description = "`1` with bottom serif"
selector.one = "base"

[prime.one.variants.no-base-long-top-serif]
rank = 4
description = "`1` without bottom serif and with a long top serif"
selector.one = "noBaseLongTopSerif"

[prime.one.variants.base-long-top-serif]
rank = 5
description = "`1` with bottom serif and a long top serif"
selector.one = "baseLongTopSerif"

[prime.one.variants.no-base-flat-top-serif]
rank = 6
description = "`1` without bottom serif and with a flat top serif"
selector.one = "noBaseFlatTopSerif"

[prime.one.variants.base-flat-top-serif]
rank = 7
description = "`1` with bottom serif and a flat top serif"
selector.one = "baseFlatTopSerif"

[prime.one.variants.no-base-top-cut]
rank = 8
description = "`1` without bottom serif and with a diagonal cut at top"
selector.one = "noBaseTopCut"

[prime.one.variants.base-top-cut]
rank = 9
description = "`1` with bottom serif and a diagonal cut at top"
selector.one = "baseTopCut"



[prime.two]
sampler = "2"
tag = "cv73"

[prime.two.variants.straight-neck]
rank = 1
description = "`2` with straight neck"
selector.two = "straightNeck"

[prime.two.variants.curly-neck]
rank = 2
description = "`2` with curly neck"
selector.two = "curlyNeck"



[prime.three]
sampler = "3"
tag = "cv74"

[prime.three.variants.flat-top]
rank = 1
description = "Flat top `3` (Like Museo Sans / Montserrat)"
selector.three = "flatTop"

[prime.three.variants.two-arcs]
rank = 2
description = "Arched top `3`"
selector.three = "twoArcs"



[prime.four]
sampler = "4"
tag = "cv75"

[prime.four.variants.closed]
rank = 1
description = "`4` with closed contour"
selector.four = "closed"

[prime.four.variants.closed-non-crossing]
rank = 2
description = "`4` with closed contour but the horizontal bar does not overflow the vertical bar"
selector.four = "closedNonCrossing"

[prime.four.variants.semi-open]
rank = 3
description = "`4` with semi-open contour"
selector.four = "semiOpen"

[prime.four.variants.semi-open-non-crossing]
rank = 4
description = "`4` with semi-open contour but the horizontal bar does not overflow the vertical bar"
selector.four = "semiOpenNonCrossing"

[prime.four.variants.open]
rank = 5
description = "`4` with open contour"
selector.four = "open"

[prime.four.variants.open-non-crossing]
rank = 6
description = "`4` with open contour but the horizontal bar does not overflow the vertical bar"
selector.four = "openNonCrossing"



[prime.five]
sampler = "5"
tag = "cv76"

[prime.five.variants.vertical-upper-left-bar]
rank = 1
description = "`5` with a vertical upper-left bar"
selector.five = "verticalUpperLeftBar"

[prime.five.variants.oblique-upper-left-bar]
rank = 2
description = "`5` with an oblique upper-left bar"
selector.five = "obliqueUpperLeftBar"



[prime.six]
sampler = "6"
tag = "cv77"

[prime.six.variants.closed-contour]
rank = 1
description = "`6` with a more closed contour"
selector.six = "closedContour"

[prime.six.variants.open-contour]
rank = 2
description = "`6` with a more open contour"
selector.six = "openContour"

[prime.six.variants.straight-bar]
rank = 3
description = "`6` with a straight bar"
selector.six = "straightBar"



[prime.seven]
sampler = "7"
tag = "cv78"

[prime.seven.variants.straight-serifless]
rank = 1
description = "`7` with straight stem and without serif"
selector.seven = "straightSerfless"

[prime.seven.variants.straight-serifed]
rank = 2
description = "`7` with straight stem and initial serif"
selector.seven = "straightSerifed"

[prime.seven.variants.bend-serifless]
rank = 3
description = "`7` with bend stem and without serif"
selector.seven = "bendSerfless"

[prime.seven.variants.bend-serifed]
rank = 4
description = "`7` with bend stem and initial serif"
selector.seven = "bendSerifed"

[prime.seven.variants.curly-serifless]
rank = 5
description = "`7` with curly stem and without serif"
selector.seven = "curlySerfless"

[prime.seven.variants.curly-serifed]
rank = 6
description = "`7` with curly stem and initial serif"
selector.seven = "curlySerifed"

[prime.seven.variants.straight-crossbar]
rank = 7
description = "`7` with straight stem and crossbar"
selector.seven = "straightCrossbar"

[prime.seven.variants.straight-crossbar-serifed]
rank = 8
description = "`7` with straight stem, crossbar and initial serif"
selector.seven = "straightCrossbarSerifed"

[prime.seven.variants.bend-crossbar]
rank = 9
description = "`7` with bend stem and crossbar"
selector.seven = "bendCrossbar"

[prime.seven.variants.bend-crossbar-serifed]
rank = 10
description = "`7` with bend stem, crossbar and initial serif"
selector.seven = "bendCrossbarSerifed"

[prime.seven.variants.curly-crossbar]
rank = 11
description = "`7` with curly stem and crossbar"
selector.seven = "curlyCrossbar"

[prime.seven.variants.curly-crossbar-serifed]
rank = 12
description = "`7` with curly stem, crossbar and initial serif"
selector.seven = "curlyCrossbarSerifed"



[prime.eight]
sampler = "8"
tag = "cv79"

[prime.eight.variants.crossing]
rank = 1
description = "`8` with crossing middle part"
selector.eight = "crossing"

[prime.eight.variants.two-circles]
rank = 2
description = "`8` looks like two circles joined together"
selector.eight = "twoCircles"

[prime.eight.variants.crossing-asymmetric]
rank = 3
description = "`8` looks asymmetric crossing middle part"
selector.eight = "crossingAsymmetric"



[prime.nine]
sampler = "9"
tag = "cv80"

[prime.nine.variants.closed-contour]
rank = 1
description = "`9` with a more closed contour"
selector.nine = "closedContour"

[prime.nine.variants.open-contour]
rank = 2
description = "`9` with a more open contour"
selector.nine = "openContour"

[prime.nine.variants.straight-bar]
rank = 3
description = "`9` with a straight bar"
selector.nine = "straightBar"



[prime.tilde]
sampler = "~"
tag = "cv81"

[prime.tilde.variants.high]
rank = 1
description = "Higher tilde `~`"
selector.asciiTilde = "high"

[prime.tilde.variants.low]
rank = 2
description = "Lower tilde `~`"
selector.asciiTilde = "low"



[prime.asterisk]
sampler = "*"
tag = "cv82"

[prime.asterisk.variants.penta-high]
rank = 1
description = "Higher five-pointed asterisk `*`"
selector.asterisk = "pentaHigh"
selector."asterisk/positionOnly" = "high"
selector."asterisk/sMid" = "pentaSMid"
selector."lowAsterisk" = "pentaLow"

[prime.asterisk.variants.penta-low]
rank = 2
description = "Lower five-pointed asterisk `*`"
selector.asterisk = "pentaSMid"
selector."asterisk/positionOnly" = "sMid"
selector."asterisk/sMid" = "pentaSMid"
selector."lowAsterisk" = "pentaLow"

[prime.asterisk.variants.flip-penta-high]
rank = 3
description = "Higher five-pointed and turned asterisk `*`"
selector.asterisk = "turnPentaHigh"
selector."asterisk/positionOnly" = "high"
selector."asterisk/sMid" = "turnPentaSMid"
selector."lowAsterisk" = "turnPentaLow"

[prime.asterisk.variants.flip-penta-low]
rank = 4
description = "Lower five-pointed and turned asterisk `*`"
selector.asterisk = "turnPentaSMid"
selector."asterisk/positionOnly" = "sMid"
selector."asterisk/sMid" = "turnPentaSMid"
selector."lowAsterisk" = "turnPentaLow"

[prime.asterisk.variants.hex-high]
rank = 5
description = "Higher six-pointed asterisk `*`"
selector.asterisk = "hexHigh"
selector."asterisk/positionOnly" = "high"
selector."asterisk/sMid" = "hexSMid"
selector."lowAsterisk" = "hexLow"

[prime.asterisk.variants.hex-low]
rank = 6
description = "Lower six-pointed asterisk `*`"
selector.asterisk = "hexSMid"
selector."asterisk/positionOnly" = "sMid"
selector."asterisk/sMid" = "hexSMid"
selector."lowAsterisk" = "hexLow"

[prime.asterisk.variants.turn-hex-high]
rank = 7
description = "Higher turned six-pointed asterisk `*`"
selector.asterisk = "turnHexHigh"
selector."asterisk/positionOnly" = "high"
selector."asterisk/sMid" = "turnHexSMid"
selector."lowAsterisk" = "turnHexLow"

[prime.asterisk.variants.turn-hex-low]
rank = 8
description = "Lower turned six-pointed asterisk `*`"
selector.asterisk = "turnHexSMid"
selector."asterisk/positionOnly" = "sMid"
selector."asterisk/sMid" = "turnHexSMid"
selector."lowAsterisk" = "turnHexLow"



[prime.underscore]
sampler = "_"
tag = "cv83"

[prime.underscore.variants.above-baseline]
rank = 1
description = "Extra-high `_`, placed right below baseline"
selector.underscore = "aboveBaseline"

[prime.underscore.variants.high]
rank = 2
description = "Higher underscore `_`, placed right below baseline"
selector.underscore = "high"

[prime.underscore.variants.low]
rank = 3
description = "Lower underscore `_`, placed right above descender line"
selector.underscore = "low"



[prime.pilcrow]
sampler = "¶"
tag = "cv84"

[prime.pilcrow.variants.high]
rank = 1
description = "Higher pilcrow sign `¶`"
selector.pilcrow = "high"
selector.revPilcrow = "high"

[prime.pilcrow.variants.low]
rank = 2
description = "Lower pilcrow sign `¶`"
selector.pilcrow = "low"
selector.revPilcrow = "low"



[prime.caret]
sampler = "^"
tag = "cv85"

[prime.caret.variants.high]
rank = 1
description = "Higher circumflex `^`"
selector.asciiCaret = "high"

[prime.caret.variants.medium]
rank = 2
description = "Lower circumflex `^`"
selector.asciiCaret = "medium"

[prime.caret.variants.low]
rank = 3
description = "Lower circumflex `^`"
selector.asciiCaret = "low"



[prime.paren]
sampler = "( )"
tag = "cv86"

[prime.paren.variants.normal]
rank = 1
description = "Parenthesis with normal contour"
selector.parenLeft = "normal"
selector.parenRight = "normal"

[prime.paren.variants.large-contour]
rank = 2
description = "Parenthesis with larger contour, like that in Monaco"
selector.parenLeft = "largeContour"
selector.parenRight = "largeContour"

[prime.paren.variants.flat-arc]
rank = 3
description = "Parenthesis with flat arc, like that in JetBrains Mono"
selector.parenLeft = "flatArc"
selector.parenRight = "flatArc"



[prime.brace]
sampler = "{ }"
tag = "cv87"

[prime.brace.variants.straight]
rank = 1
description = "More straight braces"
selector.braceLeft = "straight"
selector.braceRight = "straight"

[prime.brace.variants.curly]
rank = 2
description = "More curly braces"
selector.braceLeft = "curly"
selector.braceRight = "curly"

[prime.brace.variants.curly-flat-boundary]
rank = 3
description = "Curly braces with flat boundary shape"
selector.braceLeft = "curlyFlatBoundary"
selector.braceRight = "curlyFlatBoundary"



[prime.number-sign]
sampler = "#"
tag = "cv88"

[prime.number-sign.variants.upright]
rank = 1
description = "Number sign with vertical bars"
selector.numberSign = "upright"

[prime.number-sign.variants.slanted]
rank = 2
description = "Number sign with slanted bars"
selector.numberSign = "slanted"

[prime.number-sign.variants.upright-open]
rank = 3
description = "Number sign with vertical bars and open inner"
selector.numberSign = "uprightOpen"

[prime.number-sign.variants.slanted-open]
rank = 4
description = "Number sign with slanted bars and open inner"
selector.numberSign = "slantedOpen"

[prime.number-sign.variants.upright-tall]
rank = 5
description = "Number sign with vertical bars and taller than digits"
selector.numberSign = "uprightTall"

[prime.number-sign.variants.slanted-tall]
rank = 6
description = "Number sign with slanted bars and taller than digits"
selector.numberSign = "slantedTall"

[prime.number-sign.variants.upright-open-tall]
rank = 7
description = "Number sign with vertical bars, open inner, and taller than digits"
selector.numberSign = "uprightOpenTall"

[prime.number-sign.variants.slanted-open-tall]
rank = 8
description = "Number sign with slanted bars, open inner, and taller than digits"
selector.numberSign = "slantedOpenTall"



[prime.ampersand]
sampler = "&"
tag = "cv89"

[prime.ampersand.variants.closed]
rank = 1
description = "Ampersand (`&`) with a closed contour"
selector.ampersand = "closed"

[prime.ampersand.variants.upper-open]
rank = 2
description = "Ampersand (`&`) with an open contour at upper half"
selector.ampersand = "upperOpen"

[prime.ampersand.variants.lower-open]
rank = 3
description = "Ampersand (`&`) with an open contour at lower half"
selector.ampersand = "lowerOpen"

[prime.ampersand.variants.et-toothed]
rank = 4
description = "Ampersand (`&`) drawn like a ligature of Ɛ and t with tooth"
selector.ampersand = "etToothed"

[prime.ampersand.variants.et-toothless-corner]
rank = 5
description = "Ampersand (`&`) drawn like a ligature of Ɛ and t without tooth (corner)"
selector.ampersand = "etToothlessCorner"

[prime.ampersand.variants.et-toothless-rounded]
rank = 6
description = "Ampersand (`&`) drawn like a ligature of Ɛ and t without tooth (rounded)"
selector.ampersand = "etToothlessRounded"

[prime.ampersand.variants.flat-top]
rank = 7
description = "Ampersand (`&`) drawn with a flat top"
selector.ampersand = "flatTop"



[prime.at]
sampler = "@"
tag = "cv90"

[prime.at.variants.threefold]
rank = 1
description = "The three-fold At symbol (`@`)"
selector.at = "threefold"

[prime.at.variants.fourfold]
rank = 2
description = "The traditional, four-fold At symbol (`@`)"
selector.at = "fourfold"

[prime.at.variants.fourfold-solid-inner]
rank = 3
description = "The four-fold At symbol (`@`) with inner loop being solid"
selector.at = "fourfoldSolidInner"

[prime.at.variants.threefold-tall]
rank = 4
description = "The three-fold At symbol (`@`) with taller outline"
selector.at = "threefoldTall"

[prime.at.variants.fourfold-tall]
rank = 5
description = "The traditional, four-fold At symbol (`@`) with taller outline"
selector.at = "fourfoldTall"

[prime.at.variants.fourfold-solid-inner-tall]
rank = 6
description = "The four-fold At symbol (`@`) with inner loop being solid and taller outline"
selector.at = "fourfoldSolidInnerTall"

[prime.at.variants.short]
rank = 7
description = "The shorter, Fira-like At symbol (`@`)"
selector.at = "short"



[prime.dollar]
sampler = "$"
tag = "cv91"

[prime.dollar.variants.open]
rank = 1
description = "Dollar symbol with open contour"
selector.dollar = "open"

[prime.dollar.variants.through]
rank = 2
description = "Dollar symbol with strike-through vertical bar"
selector.dollar = "through"

[prime.dollar.variants.interrupted]
rank = 3
description = "Dollar symbol with strike-through vertical bar"
selector.dollar = "interrupted"

[prime.dollar.variants.open-cap]
rank = 4
description = "Dollar symbol with open contour, not exceeding baseline and ascender"
selector.dollar = "openCap"

[prime.dollar.variants.through-cap]
rank = 5
description = "Dollar symbol with strike-through vertical bar, not exceeding baseline and ascender"
selector.dollar = "throughCap"

[prime.dollar.variants.interrupted-cap]
rank = 6
description = "Dollar symbol with strike-through vertical bar, not exceeding baseline and ascender"
selector.dollar = "interruptedCap"



[prime.cent]
sampler = "¢"
tag = "cv92"

[prime.cent.variants.open]
rank = 1
description = "Cent sign (`¢`) with open contour"
selector.cent = "open"

[prime.cent.variants.through]
rank = 2
description = "Cent sign (`¢`) with vertical bar all through the `c` part"
selector.cent = "through"

[prime.cent.variants.bar-interrupted]
rank = 3
description = "Cent sign (`¢`) with vertical bar breaks at center"
selector.cent = "barInterrupted"



[prime.percent]
sampler = "%"
tag = "cv93"

[prime.percent.variants.dots]
rank = 1
description = "Percent `%` with rectangular dots"
selector.percent = "dots"
selector."permille.NWID" = "dots"
selector."permille.WWID" = "ringsContinuousSlash"

[prime.percent.variants.rings-segmented-slash]
rank = 2
description = "Percent `%` with rings and segmented slash"
selector.percent = "ringsSegmentedSlash"
selector."permille.NWID" = "ringsContinuousSlash"
selector."permille.WWID" = "ringsContinuousSlash"

[prime.percent.variants.rings-continuous-slash]
rank = 3
description = "Percent `%` with rings and continuous bar"
selector.percent = "ringsContinuousSlash"
selector."permille.NWID" = "ringsContinuousSlash"
selector."permille.WWID" = "ringsContinuousSlash"

[prime.percent.variants.rings-continuous-slash-also-connected]
rank = 4
description = "Percent `%` with rings and continuous bar and the slash in `%` is also connected to the top-left ring"
selector.percent = "ringsContinuousSlashAlsoConnected"
selector."permille.NWID" = "ringsContinuousSlash"
selector."permille.WWID" = "ringsContinuousSlashAlsoConnected"



[prime.bar]
sampler = "|"
tag = "cv94"
slopeDependent = true

[prime.bar.variants.natural-slope]
rank = 1
description = "Bar punctuations (`|`) has a natural slope under italics and oblique"
selector."bar.slanted" = "naturalSlope"

[prime.bar.variants.force-upright]
rank = 2
description = "Bar punctuations (`|`) is forced upright under italics and oblique"
selector."bar.slanted" = "forceUpright"



[prime.lig-ltgteq]
sampler = "<= >="
tag = "cv95"

[prime.lig-ltgteq.variants.flat]
rank = 1
description = "The lower bar of `<=` and `>=` ligation is flat"
selector."eq.at-lteq.lig2" = "flat"
selector."eq.at-gteq.lig2" = "flat"

[prime.lig-ltgteq.variants.slanted]
rank = 2
description = "The lower bar of `<=` and `>=` ligation is slanted"
selector."eq.at-lteq.lig2" = "slanted"
selector."eq.at-gteq.lig2" = "slanted"



[prime.ascii-single-quote]
sampler = "'"
tag = "cv96"

[prime.ascii-single-quote.variants.straight]
rank = 1
description = 'Show ASCII quote (`"`) as short vertical straight bar.'
selector.asciiSingleQuote = "straight"

[prime.ascii-single-quote.variants.raised-comma]
rank = 2
description = 'Show ASCII quote (`"`) as raised comma.'
selector.asciiSingleQuote = "raisedComma"



[prime.ascii-grave]
sampler = "`"
tag = "cv97"

[prime.ascii-grave.variants.straight]
rank = 1
description = "Show ASCII grave (`` ` ``) as short diagonal straight bar."
selector.asciiGrave = "straight"

[prime.ascii-grave.variants.raised-inverse-comma]
rank = 2
description = "Show ASCII grave (`` ` ``) as raised comma."
selector.asciiGrave = "raisedInverseComma"

[prime.ascii-grave.variants.raised-turn-comma]
rank = 3
description = "Show ASCII grave (`` ` ``) as raised turned comma, identical to curly open single quote symbols (U+2018)."
selector.asciiGrave = "raisedTurnComma"



[prime.question]
sampler = "?"
tag = "cv98"

[prime.question.variants.smooth]
rank = 1
description = "Smooth question mark (`?`)"
selector.question = "smooth"

[prime.question.variants.corner]
rank = 2
description = "Question mark (`?`) with a corner at middle"
selector.question = "corner"

[prime.question.variants.corner-flat-hooked]
rank = 3
description = "Question mark (`?`) with a corner at middle and flat hook"
selector.question = "cornerFlatHooked"



[prime.punctuation-dot]
sampler = "., :;"
hotChars = ".,:;?!"
samplerExplain = "Dot and Comma shape in punctuations and symbols"
tag = "cv99"

[prime.punctuation-dot.variants.round]
rank = 1
description = "Small punctuations (like `.`, `,`) use round dots"
selector.punctuationDot = "round"

[prime.punctuation-dot.variants.square]
rank = 2
description = "Small punctuations (like `.`, `,`) use square dots"
selector.punctuationDot = "square"



[prime.diacritic-dot]
sampler = "öẋ ij"
hotChars = "ijäöü"
samplerExplain = "Dot and Comma shape in diacritics"
tag = "VXDD"

[prime.diacritic-dot.variants.round]
rank = 1
description = "Dots and Commas in diacritics are round"
selector.diacriticDot = "round"

[prime.diacritic-dot.variants.square]
rank = 2
description = "Dots and Commas in diacritics are square"
selector.diacriticDot = "square"



# This is a special variant selector that controls digit form
[prime.digit-form]
isSpecial = true
hotChars = "0123456789"
description = "Default digit form"

[prime.digit-form.variants.lining]
selector.__defaultDigitForm = "lining"
description = "Lining (default)"
snapshotFeatureApplication = { 'lnum' = 1 }

[prime.digit-form.variants.old-style]
selector.__defaultDigitForm = "oldStyle"
description = "Old-style"
snapshotFeatureApplication = { 'onum' = 1 }

# This is a special variant selector that controls APL form
[prime.apl-form]
isSpecial = true
hotChars = "∆∇○←→↑↓"
description = "APL form"

[prime.apl-form.variants.none]
selector.__enableAplForm = "none"
description = "Disable APL-specific forms (default)"
snapshotFeatureApplication = { "APLF" = 1 }

[prime.apl-form.variants.enable]
selector.__enableAplForm = "enable"
description = "Enable harmonized alternate forms APL operators"
snapshotFeatureApplication = { "APLF" = 1 }

###################################################################################################

[default.design]
# Capitals
capital-a = "straight-serifless"
capital-b = "standard-serifless"
capital-c = "serifless"
capital-d = "standard-serifless"
capital-e = "serifless"
capital-f = "serifless"
capital-g = "toothed-serifless-hooked"
capital-h = "serifless"
capital-i = "serifed"
capital-j = "serifed"
capital-k = "straight-serifless"
capital-l = "serifless"
capital-m = "hanging"
capital-n = "standard"
capital-p = "closed"
capital-q = "curly-tailed"
capital-r = "straight"
capital-s = "serifless"
capital-t = "serifless"
capital-u = "toothless-rounded"
capital-v = "straight"
capital-w = "straight"
capital-x = "straight-serifless"
capital-y = "straight-serifless"
capital-z = "straight-serifless"
# Lowers
b = "toothed"
c = "serifless"
g = "single-storey-serifless"
p = "eared"
q = "straight"
r = "serifless"
s = "serifless"
t = "standard"
v = "straight"
w = "straight"
x = "straight-serifless"
z = "straight-serifless"
# Non-latin
long-s = "bent-hook"
turn-v = "straight"
latn-phi = "serifless"
lower-alpha = "crossing"
lower-delta = "rounded"
capital-gamma = "serifless"
lower-mu = "tailed"
lower-iota = "serifed-flat-tailed"
lower-lambda = "straight"
lower-xi = "flat-top"
cyrl-capital-ze = "serifless"
cyrl-ze = "serifless"
cyrl-capital-ka = "symmetric-connected-serifless"
cyrl-ka = "symmetric-connected-serifless"
cyrl-el = "straight"
cyrl-en = "serifless"
cyrl-che = "standard"
cyrl-capital-u = "straight"
cyrl-capital-ya = "straight"
cyrl-ya = "straight"
cyrl-ef = "serifless"
cyrl-capital-yeri = "corner"
cyrl-yeri = "corner"
cyrl-yery = "corner"
# Digits
zero = "slashed"
two = "curly-neck"
one = "no-base"
three = "two-arcs"
four = "semi-open"
five = "vertical-upper-left-bar"
six = "straight-bar"
seven = "straight-serifless"
eight = "crossing"
nine = "straight-bar"
# Symbols
tilde = "low"
asterisk = "penta-high"
pilcrow = "high"
caret = "medium"
underscore = "high"
at = "threefold"
paren = "normal"
brace = "curly"
dollar = "through"
cent = "through"
number-sign = "upright"
percent = "rings-segmented-slash"
lig-ltgteq = "flat"
ampersand = "closed"
bar = "natural-slope"
ascii-single-quote = "straight"
ascii-grave = "straight"
question = "smooth"
punctuation-dot = "round"
diacritic-dot = "round"

# m, n, h has tailed variant, but not very ideal
# Do not make them default
h = "straight"
m = "normal"
n = "straight"
# Digit form
digit-form = "lining"

[default.upright-oblique]
a = "double-storey-serifless"
d = "toothed-serifless"
e = "flat-crossbar"
f = "serifless"
i = "serifed"
j = "serifed"
k = "straight-serifless"
l = "serifed"
u = "toothed"
y = "straight"
eszet = "sulzbacher"

[default.italic]
a = "single-storey-tailed"
d = "tailed-serifless"
e = "rounded"
f = "flat-hook-tailed"
i = "tailed-serifed"
j = "serifed"
k = "cursive-serifless"
l = "tailed-serifed"
u = "tailed"
y = "cursive"
eszet = "sulzbacher-tailed"
long-s = "flat-hook-tailed"
cyrl-ef = "cursive"
cyrl-yeri = "round"
cyrl-yery = "round"

###################################################################################################

[composite.slab.design]
capital-a = "straight-base-serifed"
capital-b = "standard-bilateral-serifed"
capital-c = "unilateral-serifed"
capital-d = "standard-bilateral-serifed"
capital-e = "serifed"
capital-f = "serifed"
capital-g = "toothed-serifed-hooked"
capital-h = "serifed"
capital-k = "straight-serifed"
capital-l = "serifed"
capital-s = "bilateral-serifed"
capital-t = "serifed"
capital-x = "straight-serifed"
capital-y = "straight-serifed"
capital-z = "straight-serifed"
a = "double-storey-serifed"
c = "unilateral-serifed"
g = "single-storey-serifed"
s = "bilateral-serifed"
x = "straight-serifed"
z = "straight-serifed"
one = "base"
seven = "straight-serifed"
latn-phi = "serifed"
capital-gamma = "serifed"
cyrl-capital-ze = "unilateral-serifed"
cyrl-ze = "unilateral-serifed"
cyrl-en = "serifed"
cyrl-ef = "serifed"
cyrl-capital-ka = "symmetric-connected-serifed"
cyrl-ka = "symmetric-connected-serifed"
cyrl-capital-u = "straight-turn"

[composite.slab.upright-oblique]
d = "toothed-serifed"
f = "serifed"
k = "straight-serifed"
r = "serifed"
y = "straight-turn"
lower-lambda = "straight-turn"

[composite.slab.italic]
a = "single-storey-tailed"
d = "tailed-serifed"
c = "unilateral-inward-serifed"
f = "flat-hook-tailed"
k = "diagonal-tailed-cursive-top-left-serifed"
r = "top-serifed"
s = "bilateral-inward-serifed"
v = "straight-motion-serifed"
w = "straight-motion-serifed"
x = "cursive"
y = "cursive"
z = "cursive"
latn-phi = "serifed"
cyrl-en = "top-left-bottom-right-serifed"
cyrl-ef = "cursive"
cyrl-ka = "symmetric-connected-top-left-serifed"
cyrl-yeri = "cursive"
cyrl-yery = "cursive"


[composite.ss01]
tag = "ss01"
description = "Andale Mono Style"

[composite.ss01.design]
capital-d = "more-rounded-serifless"
capital-g = "toothless-corner-serifless-hooked"
capital-i = "short-serifed"
capital-j = "serifless"
capital-k = "straight-serifless"
a = "double-storey-serifless"
d = "toothed-serifless"
e = "flat-crossbar"
f = "flat-hook"
g = "double-storey"
i = "hooky"
j = "serifed"
k = "straight-serifless"
l = "zshaped"
u = "toothed"
y = "straight-turn"
eszet = "longs-s-lig"
lower-lambda = "straight-turn"
lower-iota = "flat-tailed"
cyrl-capital-ka = "straight-serifless"
cyrl-ka = "straight-serifless"
cyrl-capital-u = "straight-turn"
zero = "dotted"
one = "base"
two = "straight-neck"
four = "closed"
six = "closed-contour"
seven = "straight-serifless"
eight = "two-circles"
nine = "closed-contour"
asterisk = "hex-high"
underscore = "low"
pilcrow = "low"
brace = "straight"
number-sign = "slanted"
at = "fourfold"
percent = "rings-continuous-slash"

[composite.ss01.slab-override.design]
capital-d = "more-rounded-bilateral-serifed"
capital-k = "straight-serifed"
capital-g = "toothless-corner-serifed-hooked"
a = "double-storey-serifed"
d = "toothed-serifed"
f = "flat-hook-serifed"
k = "straight-serifed"
cyrl-capital-ka = "straight-serifed"
cyrl-ka = "straight-serifed"



[composite.ss02]
tag = "ss02"
description = "Anonymous Pro Style"

[composite.ss02.design]
capital-c = "unilateral-serifed"
capital-g = "toothless-rounded-serifed-hooked"
capital-i = "short-serifed"
capital-j = "serifless"
capital-k = "straight-serifless"
capital-s = "bilateral-serifed"
capital-t = "serifed"
capital-x = "straight-serifed"
capital-y = "straight-serifed"
capital-z = "straight-serifed"
a = "double-storey-serifless"
c = "unilateral-serifed"
d = "toothed-top-serifed"
e = "flat-crossbar"
f = "flat-hook-serifed"
i = "serifed"
j = "serifed"
k = "straight-serifless"
l = "serifed"
r = "serifed"
u = "toothed"
w = "straight-flat-top"
x = "straight-serifed"
y = "straight-turn"
z = "straight-serifed"
long-s = "flat-hook"
eszet = "longs-s-lig"
lower-lambda = "straight-turn"
cyrl-capital-ze = "unilateral-serifed"
cyrl-capital-ka = "straight-serifless"
cyrl-ka = "straight-serifless"
cyrl-capital-u = "straight-turn"
one = "base"
two = "straight-neck"
four = "closed"
six = "closed-contour"
seven = "bend-serifed"
eight = "two-circles"
nine = "closed-contour"
asterisk = "hex-low"
brace = "straight"
at = "fourfold"
percent = "rings-continuous-slash"
punctuation-dot = "square"
diacritic-dot = "square"

[composite.ss02.slab-override.design]
capital-k = "straight-serifed"
a = "double-storey-serifed"
k = "straight-serifed"
cyrl-capital-ka = "straight-serifed"
cyrl-ka = "straight-serifed"



[composite.ss03]
tag = "ss03"
description = "Consolas Style"

[composite.ss03.design]
capital-d = "more-rounded-serifless"
capital-g = "toothless-corner-serifless-hooked"
capital-k = "symmetric-touching-serifless"
capital-m = "slanted-sides-hanging"
a = "double-storey-serifless"
b = "toothless-corner"
d = "toothed-serifless"
f = "flat-hook"
g = "double-storey"
i = "serifed"
j = "serifed"
k = "symmetric-touching-serifless"
l = "serifed"
u = "toothed"
y = "straight-turn"
eszet = "longs-s-lig"
long-s = "flat-hook"
lower-alpha = "tailed-barred"
lower-lambda = "straight-turn"
cyrl-capital-ka = "symmetric-touching-serifless"
cyrl-ka = "symmetric-touching-serifless"
cyrl-capital-u = "straight-turn"
one = "base"
two = "straight-neck"
four = "closed"
six = "closed-contour"
eight = "crossing"
nine = "closed-contour"
asterisk = "hex-high"
underscore = "low"
brace = "straight"
number-sign = "slanted"
at = "fourfold"
question = "corner-flat-hooked"

[composite.ss03.italic]
a = "single-storey-serifless"
f = "flat-hook-tailed"
i = "tailed-serifed"
k = "cursive-serifless"
l = "tailed"
eszet = "longs-s-lig-descending"
long-s = "flat-hook-descending"
lower-iota = "tailed-serifed"

[composite.ss03.slab-override.design]
capital-d = "more-rounded-bilateral-serifed"
capital-g = "toothless-corner-serifed-hooked"
capital-k = "symmetric-touching-serifed"
a = "double-storey-serifed"
d = "toothed-serifed"
f = "flat-hook-serifed"
k = "symmetric-touching-serifed"
cyrl-capital-ka = "symmetric-touching-serifed"
cyrl-ka = "symmetric-touching-serifed"

[composite.ss03.slab-override.italic]
a = "single-storey-serifed"
f = "flat-hook-tailed"
k = "cursive-serifed"



[composite.ss04]
tag = "ss04"
description = "Menlo Style"

[composite.ss04.design]
capital-d = "more-rounded-serifless"
capital-g = "toothless-corner-serifless-hooked"
capital-k = "straight-serifless"
capital-q = "straight"
a = "double-storey-serifless"
d = "toothed-serifless"
f = "flat-hook"
i = "serifed"
j = "flat-hook-serifed"
k = "straight-serifless"
l = "serifed-flat-tailed"
t = "flat-hook"
u = "toothed"
y = "straight-turn"
long-s = "flat-hook"
eszet = "longs-s-lig"
lower-lambda = "straight-turn"
cyrl-capital-ka = "straight-serifless"
cyrl-ka = "straight-serifless"
cyrl-capital-u = "straight-turn"
one = "base"
two = "straight-neck"
four = "closed"
six = "closed-contour"
eight = "two-circles"
nine = "closed-contour"
asterisk = "hex-low"
underscore = "low"
brace = "straight"
number-sign = "slanted"
ampersand = "upper-open"
percent = "rings-continuous-slash"
bar = "force-upright"
punctuation-dot = "square"
diacritic-dot = "square"

[composite.ss04.slab-override.design]
capital-d = "more-rounded-bilateral-serifed"
capital-g = "toothless-corner-serifed-hooked"
capital-k = "straight-serifed"
a = "double-storey-serifed"
d = "toothed-serifed"
f = "flat-hook-serifed"
k = "straight-serifed"
cyrl-capital-ka = "straight-serifed"
cyrl-ka = "straight-serifed"



[composite.ss05]
tag = "ss05"
description = "Fira Mono Style"

[composite.ss05.design]
capital-d = "more-rounded-serifless"
capital-g = "toothless-corner-serifless-hooked"
capital-k = "symmetric-touching-serifless"
capital-m = "slanted-sides-hanging"
a = "double-storey-tailed"
e = "flat-crossbar"
f = "serifless"
g = "double-storey-open"
i = "serifed"
j = "serifed"
k = "symmetric-touching-serifless"
l = "tailed-serifed"
r = "corner-hooked-serifed"
u = "toothed"
y = "straight-turn"
eszet = "longs-s-lig"
lower-iota = "tailed-serifed"
lower-lambda = "straight-turn"
lower-mu = "tailless"
cyrl-capital-ka = "symmetric-connected-serifless"
cyrl-ka = "symmetric-connected-serifless"
cyrl-capital-u = "straight-turn"
zero = "dotted-oval"
one = "base"
two = "straight-neck"
six = "closed-contour"
eight = "crossing-asymmetric"
nine = "open-contour"
asterisk = "penta-low"
underscore = "low"
pilcrow = "low"
caret = "high"
number-sign = "slanted"
ampersand = "et-toothless-corner"
at = "short"
cent = "open"
percent = "rings-continuous-slash"
lig-ltgteq = "slanted"

[composite.ss05.slab-override.design]
capital-d = "more-rounded-bilateral-serifed"
capital-g = "toothless-corner-serifed-hooked"
capital-k = "symmetric-touching-serifed"
f = "serifed"
k = "symmetric-touching-serifed"
cyrl-capital-ka = "symmetric-connected-serifed"
cyrl-ka = "symmetric-connected-serifed"



[composite.ss06]
tag = "ss06"
description = "Liberation Mono Style"

[composite.ss06.design]
capital-d = "more-rounded-serifless"
capital-g = "toothless-corner-serifless-hooked"
a = "double-storey-tailed"
e = "flat-crossbar"
f = "flat-hook"
i = "serifed"
j = "serifed"
k = "straight-serifless"
l = "serifed-flat-tailed"
r = "hookless"
u = "toothed"
y = "straight-turn"
long-s = "flat-hook"
eszet = "longs-s-lig"
lower-iota = "tailed-serifed"
lower-lambda = "straight-turn"
cyrl-capital-u = "straight-turn"
zero = "dotted"
one = "base"
four = "closed"
five = "oblique-upper-left-bar"
six = "closed-contour"
seven = "bend-serifless"
eight = "two-circles"
nine = "closed-contour"
pilcrow = "low"
number-sign = "slanted"
at = "fourfold"
percent = "rings-continuous-slash"
bar = "force-upright"
punctuation-dot = "square"
diacritic-dot = "square"

[composite.ss06.slab-override.design]
capital-d = "more-rounded-bilateral-serifed"
capital-g = "toothless-corner-serifed-hooked"
f = "flat-hook-serifed"
k = "straight-serifed"
r = "hookless-serifed"



[composite.ss07]
tag = "ss07"
description = "Monaco Style"

[composite.ss07.design]
capital-d = "more-rounded-serifless"
capital-g = "toothless-corner-serifless-hooked"
capital-k = "symmetric-touching-serifless"
a = "single-storey-earless-corner-tailed"
b = "toothless-corner"
e = "flat-crossbar"
g = "earless-corner"
i = "zshaped"
j = "serifed"
k = "symmetric-touching-serifless"
l = "serifed-flat-tailed"
q = "earless-corner"
r = "corner-hooked"
u = "toothed"
y = "straight-turn"
long-s = "flat-hook"
eszet = "longs-s-lig"
lower-lambda = "straight-turn"
cyrl-capital-u = "straight-turn"
zero = "slashed"
one = "base"
four = "closed"
six = "closed-contour"
seven = "curly-serifless"
eight = "crossing-asymmetric"
nine = "closed-contour"
asterisk = "hex-high"
paren = "large-contour"
pilcrow = "low"
number-sign = "slanted"
at = "fourfold"
percent = "rings-continuous-slash"

[composite.ss07.slab-override.design]
capital-d = "more-rounded-bilateral-serifed"
capital-g = "toothless-corner-serifed-hooked"
capital-k = "symmetric-touching-serifed"
k = "symmetric-touching-serifed"
r = "corner-hooked-serifed"



[composite.ss08]
tag = "ss08"
description = "Pragmata Pro Style"

[composite.ss08.design]
capital-a = "curly-serifless"
capital-d = "more-rounded-serifless"
capital-g = "toothless-rounded-serifless-hooked"
capital-i = "short-serifed"
capital-j = "serifless"
capital-k = "curly-serifless"
capital-n = "asymmetric"
capital-q = "straight"
capital-r = "curly"
capital-v = "curly"
capital-w = "curly"
capital-x = "curly-serifless"
capital-y = "curly-serifless"
a = "double-storey-serifless"
d = "toothed-serifless"
e = "flat-crossbar"
f = "serifless"
g = "double-storey"
i = "serifed"
k = "curly-serifless"
l = "serifed"
u = "toothed"
v = "curly"
w = "curly"
x = "curly-serifless"
y = "curly"
eszet = "longs-s-lig"
lower-lambda = "curly"
cyrl-capital-ka = "curly-serifless"
cyrl-ka = "curly-serifless"
cyrl-capital-ya = "curly"
cyrl-ya = "curly"
zero = "dotted-oval"
four = "closed"
six = "closed-contour"
seven = "bend-serifless"
nine = "closed-contour"
asterisk = "penta-low"
underscore = "low"
brace = "straight"
number-sign = "slanted"
ampersand = "upper-open"
at = "threefold"
dollar = "open"
cent = "open"
percent = "dots"

[composite.ss08.italic]
g = "single-storey-serifless"

[composite.ss08.slab-override.design]
capital-a = "curly-base-serifed"
capital-d = "more-rounded-bilateral-serifed"
capital-g = "toothless-rounded-serifed-hooked"
capital-j = "serifed"
capital-k = "curly-serifed"
capital-x = "curly-serifed"
capital-y = "curly-serifed"
a = "double-storey-serifed"
d = "toothed-serifed"
f = "serifed"
k = "curly-serifed"
x = "curly-serifed"
cyrl-capital-ka = "curly-serifed"
cyrl-ka = "curly-serifed"
seven = "bend-serifed"

[composite.ss08.slab-override.italic]
g = "single-storey-serifed"



[composite.ss09]
tag = "ss09"
description = "Source Code Pro Style"

[composite.ss09.design]
capital-d = "more-rounded-serifless"
capital-g = "toothless-corner-serifless-hooked"
capital-k = "straight-serifless"
a = "double-storey-serifless"
d = "toothed-serifless"
e = "flat-crossbar"
f = "serifless"
g = "double-storey"
i = "hooky"
j = "serifed"
k = "straight-serifless"
l = "tailed-serifed"
u = "toothed"
y = "straight-turn"
eszet = "longs-s-lig"
long-s = "flat-hook"
lower-alpha = "tailed-barred"
lower-lambda = "straight-turn"
cyrl-capital-u = "straight-turn"
zero = "dotted-oval"
one = "base-flat-top-serif"
two = "straight-neck"
four = "closed"
five = "oblique-upper-left-bar"
six = "closed-contour"
seven = "bend-serifless"
eight = "crossing-asymmetric"
nine = "closed-contour"
asterisk = "penta-low"
pilcrow = "low"
number-sign = "slanted"
dollar = "open"

[composite.ss09.italic]
a = "single-storey-serifless"
g = "single-storey-serifless"
i = "tailed-serifed"
long-s = "flat-hook-tailed"

[composite.ss09.slab-override.design]
capital-d = "more-rounded-bilateral-serifed"
capital-g = "toothless-corner-serifed-hooked"
capital-k = "straight-serifed"
a = "double-storey-serifed"
d = "toothed-serifed"
f = "serifed"
k = "straight-serifed"

[composite.ss09.slab-override.italic]
a = "single-storey-serifed"
g = "single-storey-serifed"



[composite.ss10]
tag = "ss10"
description = "Envy Code R Style"

[composite.ss10.design]
capital-j = "serifless"
capital-k = "symmetric-touching-serifless"
capital-q = "crossing"
capital-w = "straight-vertical-sides"
f = "flat-hook"
g = "single-storey-flat-hook-serifless"
i = "hooky"
j = "flat-hook-serifed"
k = "symmetric-connected-serifless"
l = "hooky"
t = "flat-hook"
y = "cursive-flat-hook"
cyrl-capital-u = "cursive-flat-hook"
one = "base"
four = "closed"
eight = "two-circles"
underscore = "low"
pilcrow = "low"
percent = "rings-continuous-slash"

[composite.ss10.italic]
i = "serifed-flat-tailed"
j = "serifed"
l = "serifed-flat-tailed"

[composite.ss10.slab-override.design]
capital-j = "serifed"
capital-k = "symmetric-touching-serifed"
f = "flat-hook-serifed"
k = "symmetric-connected-serifed"



[composite.ss11]
tag = "ss11"
description = "X Window Style"

[composite.ss11.design]
zero = "unslashed"
tilde = "high"
brace = "straight"
dollar = "through"
three = "flat-top"
at = "threefold"
one = "base"
two = "straight-neck"
six = "closed-contour"
eight = "two-circles"
nine = "closed-contour"



[composite.ss12]
tag = "ss12"
description = "Ubuntu Mono Style"

[composite.ss12.design]
capital-d = "more-rounded-serifless"
capital-g = "toothless-corner-serifless-hookless"
capital-k = "symmetric-touching-serifless"
capital-m = "slanted-sides-hanging"
a = "double-storey-toothless-corner"
b = "toothless-corner"
d = "toothless-corner-serifless"
g = "earless-corner"
i = "tailed-serifed"
k = "symmetric-touching-serifless"
l = "tailed-serifed"
m = "earless-corner-double-arch-short-leg"
n = "earless-corner-straight"
p = "earless-corner"
r = "earless-corner"
u = "toothless-corner"
y = "straight-turn"
eszet = "longs-s-lig"
lower-alpha = "tailed-barred"
lower-iota = "tailed-serifed"
lower-lambda = "straight-turn"
cyrl-capital-ka = "symmetric-touching-serifless"
cyrl-ka = "symmetric-touching-serifless"
cyrl-capital-u = "straight-turn"
zero = "dotted-oval"
one = "base"
four = "closed"
five = "oblique-upper-left-bar"
six = "open-contour"
seven = "bend-serifless"
eight = "crossing-asymmetric"
nine = "open-contour"
underscore = "low"
pilcrow = "low"
brace = "straight"
number-sign = "slanted"
dollar = "open"
cent = "open"
percent = "rings-continuous-slash"

[composite.ss12.italic]
a = "single-storey-earless-corner-tailed"
d = "tailed-serifless"
f = "tailed"
u = "tailed"

[composite.ss12.slab-override.design]
capital-d = "more-rounded-bilateral-serifed"
capital-g = "toothless-corner-serifed-hookless"
capital-k = "symmetric-touching-serifed"
d = "toothless-corner-serifed"
k = "symmetric-touching-serifed"
cyrl-capital-ka = "symmetric-touching-serifed"
cyrl-ka = "symmetric-touching-serifed"

[composite.ss12.slab-override.italic]
d = "tailed-serifed"



[composite.ss13]
tag = "ss13"
description = "Lucida Style"

[composite.ss13.design]
capital-d = "more-rounded-serifless"
capital-g = "toothless-corner-serifless-hooked"
capital-k = "symmetric-touching-serifless"
a = "double-storey-tailed"
d = "toothed-serifless"
e = "flat-crossbar"
g = "single-storey-serifless"
i = "hooky"
k = "symmetric-touching-serifless"
l = "hooky"
u = "toothed"
y = "straight-turn"
long-s = "flat-hook"
eszet = "longs-s-lig"
lower-iota = "tailed"
cyrl-capital-u = "straight-turn"
zero = "slashed-oval"
one = "base"
four = "closed"
six = "closed-contour"
seven = "bend-serifless"
eight = "crossing-asymmetric"
nine = "closed-contour"
pilcrow = "low"
number-sign = "slanted"
percent = "rings-continuous-slash"
punctuation-dot = "square"
diacritic-dot = "square"

[composite.ss13.slab-override.design]
capital-d = "more-rounded-bilateral-serifed"
capital-g = "toothless-corner-serifed-hooked"
capital-k = "symmetric-touching-serifed"
a = "single-storey-earless-corner-serifed"
d = "toothed-serifed"
g = "single-storey-serifed"
k = "symmetric-touching-serifed"



[composite.ss14]
tag = "ss14"
description = "JetBrains Mono Style"

[composite.ss14.design]
capital-g = "toothless-rounded-serifless-hooked"
capital-k = "symmetric-connected-serifless"
capital-q = "straight"
capital-w = "straight-flat-top"
a = "double-storey-serifless"
d = "toothed-serifless"
e = "flat-crossbar"
f = "flat-hook"
g = "single-storey-flat-hook-serifless"
i = "serifed"
j = "flat-hook-serifed"
k = "symmetric-connected-serifless"
l = "serifed-flat-tailed"
t = "flat-hook"
u = "toothless-rounded"
w = "straight-flat-top"
y = "straight"
long-s = "flat-hook"
lower-alpha = "tailed-barred"
lower-delta = "flat-top"
lower-xi = "rounded"
cyrl-capital-ka = "symmetric-connected-serifless"
cyrl-ka = "symmetric-connected-serifless"
cyrl-capital-u = "straight"
zero = "dotted"
one = "base"
two = "straight-neck"
three = "flat-top"
four = "semi-open-non-crossing"
seven = "straight-serifed"
paren = "flat-arc"
asterisk = "penta-low"
pilcrow = "low"
number-sign = "slanted"
ampersand = "upper-open"
percent = "rings-continuous-slash"
lig-ltgteq = "slanted"
question = "corner-flat-hooked"

[composite.ss14.italic]
a = "single-storey-serifless"
f = "flat-hook-tailed"
y = "cursive-flat-hook"
long-s = "flat-hook-tailed"

[composite.ss14.slab-override.design]
capital-g = "toothless-rounded-serifed-hooked"
capital-k = "symmetric-connected-serifed"
a = "double-storey-serifed"
d = "toothed-serifed"
f = "flat-hook-serifed"
g = "single-storey-flat-hook-serifed"
k = "symmetric-connected-serifed"
cyrl-capital-ka = "symmetric-connected-serifed"
cyrl-ka = "symmetric-connected-serifed"

[composite.ss14.slab-override.italic]
a = "single-storey-serifed"
f = "flat-hook-tailed"



[composite.ss15]
tag = "ss15"
description = "IBM Plex Mono Style"

[composite.ss15.design]
a = "double-storey-tailed"
d = "toothed-serifless"
f = "flat-hook-serifed"
g = "double-storey"
i = "serifed"
j = "flat-hook-serifed"
k = "straight-serifless"
l = "serifed"
r = "hookless-serifed"
t = "flat-hook"
u = "toothed"
w = "straight-flat-top"
y = "straight-turn"
eszet = "traditional-flat-hook"
long-s = "flat-hook"
lower-lambda = "straight-turn"
cyrl-capital-u = "straight-turn"
zero = "dotted"
one = "base"
two = "straight-neck"
four = "closed"
five = "oblique-upper-left-bar"
six = "open-contour"
seven = "straight-serifed"
eight = "two-circles"
nine = "open-contour"
asterisk = "penta-low"
underscore = "low"
pilcrow = "low"
number-sign = "slanted-open"
ampersand = "upper-open"
question = "corner"
brace = "curly-flat-boundary"

[composite.ss15.italic]
a = "single-storey-serifless"
f = "flat-hook-diagonal-tailed"
i = "serifed-diagonal-tailed"
j = "diagonal-tailed-serifed"
k = "diagonal-tailed-cursive-serifless"
l = "serifed-diagonal-tailed"
r = "hookless-top-serifed"
t = "diagonal-tailed"
v = "cursive-serifed"
w = "cursive"
x = "cursive"
y = "cursive"
z = "cursive"
long-s = "flat-hook-tailed"
cyrl-capital-u = "cursive-flat-hook"
ampersand = "closed"

[composite.ss15.slab-override.design]
d = "toothed-serifed"
k = "straight-serifed"

[composite.ss15.slab-override.italic]
a = "single-storey-serifed"
k = "diagonal-tailed-cursive-top-left-serifed"



[composite.ss16]
tag = "ss16"
description = "PT Mono Style"

[composite.ss16.design]
capital-c = "bilateral-inward-serifed"
capital-d = "more-rounded-serifless"
capital-g = "toothless-corner-inward-serifed-hooked"
capital-k = "symmetric-connected-serifless"
capital-l = "motion-serifed"
capital-s = "bilateral-inward-serifed"
capital-t = "serifed"
a = "double-storey-serifed"
b = "toothless-corner-motion-serifed"
c = "unilateral-inward-serifed"
d = "toothed-serifed"
e = "flat-crossbar"
f = "serifed"
g = "earless-corner"
h = "straight-top-left-serifed"
i = "serifed"
j = "serifed"
k = "straight-top-left-and-bottom-right-serifed"
l = "tailed-serifed"
n = "straight-top-left-serifed"
p = "motion-serifed"
q = "earless-corner"
r = "serifed"
t = "standard-short-neck2"
u = "motion-serifed"
y = "straight-turn"
long-s = "flat-hook"
capital-gamma = "serifed"
cyrl-capital-ze = "bilateral-inward-serifed"
cyrl-ze = "unilateral-inward-serifed"
cyrl-capital-ka = "symmetric-connected-serifless"
cyrl-ka = "symmetric-connected-bottom-right-serifed"
cyrl-ef = "top-serifed"
cyrl-capital-u = "straight-turn"
zero = "slashed"
one = "base"
two = "straight-neck"
three = "flat-top"
four = "closed"
six = "open-contour"
eight = "crossing-asymmetric"
nine = "open-contour"
asterisk = "turn-hex-high"
underscore = "low"
pilcrow = "low"
paren = "large-contour"
brace = "straight"
number-sign = "slanted"
percent = "rings-continuous-slash"

[composite.ss16.italic]
a = "single-storey-earless-corner-serifed"

[composite.ss16.slab-override.design]
capital-k = "symmetric-connected-serifed"

[composite.ss16.slab-override.italic]
a = "single-storey-earless-corner-serifed"



[composite.ss17]
tag = "ss17"
description = "Recursive Mono Style"

[composite.ss17.design]
capital-b = "standard-unilateral-serifed"
capital-c = "unilateral-inward-serifed"
capital-d = "standard-unilateral-serifed"
capital-e = "top-left-serifed"
capital-f = "top-left-serifed"
capital-g = "toothless-corner-inward-serifed-capped"
capital-k = "straight-bottom-right-serifed"
capital-l = "motion-serifed"
capital-p = "closed-motion-serifed"
capital-r = "straight-motion-serifed"
capital-s = "unilateral-inward-serifed"
capital-u = "toothed"
capital-z = "straight-top-serifed"
a = "double-storey-tailed"
e = "flat-crossbar"
f = "serifed"
g = "double-storey"
r = "hookless-serifed"
t = "flat-hook"
y = "straight-turn"
eszet = "longs-s-lig"
lower-lambda = "straight-turn"
cyrl-capital-u = "straight-turn"
one = "base"
four = "semi-open"
five = "oblique-upper-left-bar"
six = "closed-contour"
seven = "straight-serifed"
nine = "closed-contour"
asterisk = "hex-low"
underscore = "low"
pilcrow = "low"
number-sign = "slanted"
ampersand = "upper-open"
at = "fourfold"
dollar = "interrupted"
cent = "bar-interrupted"
punctuation-dot = "square"
diacritic-dot = "square"
brace = "curly-flat-boundary"

[composite.ss17.italic]
a = "single-storey-tailed"
e = "rounded"
f = "tailed"
g = "single-storey-serifless"
i = "serifed-flat-tailed"
l = "serifed-flat-tailed"
m = "tailed"
n = "tailed"
r = "corner-hooked-serifed"
s = "unilateral-inward-serifed"
v = "cursive-serifed"
w = "cursive"
x = "cursive"
y = "cursive"
z = "cursive"

[composite.ss17.slab-override.italic]
g = "single-storey-serifed"



[composite.ss18]
tag = "ss18"
description = "Input Mono Style"

[composite.ss18.design]
capital-g = "toothless-rounded-serifless-hooked"
capital-k = "symmetric-connected-serifless"
a = "double-storey-tailed"
b = "toothless-corner"
d = "toothed-serifless"
f = "serifless-crossbar-at-x-height"
g = "double-storey"
i = "serifed"
k = "symmetric-connected-serifless"
l = "serifed"
q = "earless-corner"
u = "toothed"
y = "straight-turn"
long-s = "flat-hook"
eszet = "longs-s-lig"
lower-alpha = "tailed-barred"
lower-lambda = "straight-turn"
cyrl-capital-u = "straight-turn"
zero = "dotted"
one = "base"
four = "closed"
six = "closed-contour"
seven = "bend-serifless"
eight = "two-circles"
nine = "closed-contour"
asterisk = "hex-high"
underscore = "low"
question = "corner"
number-sign = "slanted"
percent = "rings-continuous-slash"

[composite.ss18.italic]
f = "extended-crossbar-at-x-height"

[composite.ss18.slab-override.design]
capital-g = "toothless-rounded-serifed-hooked"
capital-k = "symmetric-connected-serifed"
d = "toothed-serifed"
f = "serifed-crossbar-at-x-height"
k = "symmetric-connected-serifed"
seven = "bend-serifed"



[composite.ss20]
tag = "ss20"
description = "Curly Style"

[composite.ss20.design]
capital-a = "curly-serifless"
capital-k = "curly-serifless"
capital-r = "curly"
capital-v = "curly"
capital-w = "curly"
capital-x = "curly-serifless"
capital-y = "curly-serifless"
capital-z = "curly-serifless"
k = "curly-serifless"
v = "curly"
w = "curly"
x = "curly-serifless"
y = "curly"
z = "curly-serifless"
turn-v = "curly"
lower-lambda = "curly"
cyrl-capital-u = "curly"
six = "open-contour"
nine = "open-contour"

[composite.ss20.italic]
k = "cursive-serifless"
y = "cursive"

[composite.ss20.slab-override.design]
capital-a = "curly-base-serifed"
capital-k = "curly-serifed"
capital-x = "curly-serifed"
capital-y = "curly-serifed"
capital-z = "curly-serifed"
k = "curly-serifed"
x = "curly-serifed"
z = "curly-serifed"

[composite.ss20.slab-override.italic]
k = "cursive-serifed"
